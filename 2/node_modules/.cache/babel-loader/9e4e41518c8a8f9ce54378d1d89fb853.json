{"ast":null,"code":"/*\n Highcharts JS v10.1.0 (2022-04-29)\n\n 3D features for Highcharts JS\n\n License: www.highcharts.com/license\n*/\n(function (a) {\n  \"object\" === typeof module && module.exports ? (a[\"default\"] = a, module.exports = a) : \"function\" === typeof define && define.amd ? define(\"highcharts/highcharts-3d\", [\"highcharts\"], function (E) {\n    a(E);\n    a.Highcharts = E;\n    return a;\n  }) : a(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (a) {\n  function E(a, w, t, D) {\n    a.hasOwnProperty(w) || (a[w] = D.apply(null, t), \"function\" === typeof CustomEvent && window.dispatchEvent(new CustomEvent(\"HighchartsModuleLoaded\", {\n      detail: {\n        path: w,\n        module: a[w]\n      }\n    })));\n  }\n\n  a = a ? a._modules : {};\n  E(a, \"Extensions/Math3D.js\", [a[\"Core/Globals.js\"], a[\"Core/Utilities.js\"]], function (a, w) {\n    function t(d, c, b) {\n      c = 0 < b && b < Number.POSITIVE_INFINITY ? b / (d.z + c.z + b) : 1;\n      return {\n        x: d.x * c,\n        y: d.y * c\n      };\n    }\n\n    function F(d, c, b, f) {\n      var q = c.options.chart.options3d,\n          a = x(f, b ? c.inverted : !1),\n          e = {\n        x: c.plotWidth / 2,\n        y: c.plotHeight / 2,\n        z: q.depth / 2,\n        vd: x(q.depth, 1) * x(q.viewDistance, 0)\n      },\n          n = c.scale3d || 1;\n      f = k * q.beta * (a ? -1 : 1);\n      q = k * q.alpha * (a ? -1 : 1);\n      var u = Math.cos(q),\n          p = Math.cos(-f),\n          l = Math.sin(q),\n          C = Math.sin(-f);\n      b || (e.x += c.plotLeft, e.y += c.plotTop);\n      return d.map(function (b) {\n        var c = (a ? b.y : b.x) - e.x;\n        var d = (a ? b.x : b.y) - e.y;\n        b = (b.z || 0) - e.z;\n        c = {\n          x: p * c - C * b,\n          y: -l * C * c + u * d - p * l * b,\n          z: u * C * c + l * d + u * p * b\n        };\n        d = t(c, e, e.vd);\n        d.x = d.x * n + e.x;\n        d.y = d.y * n + e.y;\n        d.z = c.z * n + e.z;\n        return {\n          x: a ? d.y : d.x,\n          y: a ? d.x : d.y,\n          z: d.z\n        };\n      });\n    }\n\n    function f(d, c) {\n      var b = c.options.chart.options3d,\n          f = c.plotWidth / 2;\n      c = c.plotHeight / 2;\n      b = x(b.depth, 1) * x(b.viewDistance, 0) + b.depth;\n      return Math.sqrt(Math.pow(f - x(d.plotX, d.x), 2) + Math.pow(c - x(d.plotY, d.y), 2) + Math.pow(b - x(d.plotZ, d.z), 2));\n    }\n\n    function z(d) {\n      var c = 0,\n          b;\n\n      for (b = 0; b < d.length; b++) {\n        var f = (b + 1) % d.length;\n        c += d[b].x * d[f].y - d[f].x * d[b].y;\n      }\n\n      return c / 2;\n    }\n\n    function v(d, c, b) {\n      return z(F(d, c, b));\n    }\n\n    var x = w.pick,\n        k = a.deg2rad;\n    a.perspective3D = t;\n    a.perspective = F;\n    a.pointCameraDistance = f;\n    a.shapeArea = z;\n    a.shapeArea3d = v;\n    return {\n      perspective: F,\n      perspective3D: t,\n      pointCameraDistance: f,\n      shapeArea: z,\n      shapeArea3D: v\n    };\n  });\n  E(a, \"Core/Renderer/SVG/SVGElement3D.js\", [a[\"Core/Color/Color.js\"], a[\"Core/Renderer/SVG/SVGElement.js\"], a[\"Core/Utilities.js\"]], function (a, w, t) {\n    var F = a.parse,\n        f = t.defined;\n    a = t.merge;\n    var z = t.objectEach,\n        v = t.pick,\n        x = {\n      base: {\n        initArgs: function (f) {\n          var d = this,\n              c = d.renderer,\n              b = c[d.pathType + \"Path\"](f),\n              a = b.zIndexes;\n          d.parts.forEach(function (f) {\n            var k = {\n              \"class\": \"highcharts-3d-\" + f,\n              zIndex: a[f] || 0\n            };\n            c.styledMode && (\"top\" === f ? k.filter = \"url(#highcharts-brighter)\" : \"side\" === f && (k.filter = \"url(#highcharts-darker)\"));\n            d[f] = c.path(b[f]).attr(k).add(d);\n          });\n          d.attr({\n            \"stroke-linejoin\": \"round\",\n            zIndex: a.group\n          });\n          d.originalDestroy = d.destroy;\n          d.destroy = d.destroyParts;\n          d.forcedSides = b.forcedSides;\n        },\n        singleSetterForParts: function (f, d, c, b, a, q) {\n          var k = {};\n          b = [null, null, b || \"attr\", a, q];\n          var e = c && c.zIndexes;\n          c ? (e && e.group && this.attr({\n            zIndex: e.group\n          }), z(c, function (b, d) {\n            k[d] = {};\n            k[d][f] = b;\n            e && (k[d].zIndex = c.zIndexes[d] || 0);\n          }), b[1] = k) : (k[f] = d, b[0] = k);\n          return this.processParts.apply(this, b);\n        },\n        processParts: function (f, d, c, b, a) {\n          var k = this;\n          k.parts.forEach(function (q) {\n            d && (f = v(d[q], !1));\n            if (!1 !== f) k[q][c](f, b, a);\n          });\n          return k;\n        },\n        destroyParts: function () {\n          this.processParts(null, null, \"destroy\");\n          return this.originalDestroy();\n        }\n      }\n    };\n    x.cuboid = a(x.base, {\n      parts: [\"front\", \"top\", \"side\"],\n      pathType: \"cuboid\",\n      attr: function (a, d, c, b) {\n        if (\"string\" === typeof a && \"undefined\" !== typeof d) {\n          var k = a;\n          a = {};\n          a[k] = d;\n        }\n\n        return a.shapeArgs || f(a.x) ? this.singleSetterForParts(\"d\", null, this.renderer[this.pathType + \"Path\"](a.shapeArgs || a)) : w.prototype.attr.call(this, a, void 0, c, b);\n      },\n      animate: function (a, d, c) {\n        if (f(a.x) && f(a.y)) {\n          a = this.renderer[this.pathType + \"Path\"](a);\n          var b = a.forcedSides;\n          this.singleSetterForParts(\"d\", null, a, \"animate\", d, c);\n          this.attr({\n            zIndex: a.zIndexes.group\n          });\n          b !== this.forcedSides && (this.forcedSides = b, this.renderer.styledMode || x.cuboid.fillSetter.call(this, this.fill));\n        } else w.prototype.animate.call(this, a, d, c);\n\n        return this;\n      },\n      fillSetter: function (a) {\n        this.forcedSides = this.forcedSides || [];\n        this.singleSetterForParts(\"fill\", null, {\n          front: a,\n          top: F(a).brighten(0 <= this.forcedSides.indexOf(\"top\") ? 0 : .1).get(),\n          side: F(a).brighten(0 <= this.forcedSides.indexOf(\"side\") ? 0 : -.1).get()\n        });\n        this.color = this.fill = a;\n        return this;\n      }\n    });\n    return x;\n  });\n  E(a, \"Core/Renderer/SVG/SVGRenderer3D.js\", [a[\"Core/Animation/AnimationUtilities.js\"], a[\"Core/Color/Color.js\"], a[\"Core/Globals.js\"], a[\"Extensions/Math3D.js\"], a[\"Core/Renderer/SVG/SVGElement.js\"], a[\"Core/Renderer/SVG/SVGElement3D.js\"], a[\"Core/Renderer/SVG/SVGRenderer.js\"], a[\"Core/Utilities.js\"]], function (a, w, t, D, f, z, v, x) {\n    var k = this && this.__extends || function () {\n      var b = function (e, c) {\n        b = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (b, h) {\n          b.__proto__ = h;\n        } || function (b, h) {\n          for (var r in h) h.hasOwnProperty(r) && (b[r] = h[r]);\n        };\n\n        return b(e, c);\n      };\n\n      return function (e, c) {\n        function d() {\n          this.constructor = e;\n        }\n\n        b(e, c);\n        e.prototype = null === c ? Object.create(c) : (d.prototype = c.prototype, new d());\n      };\n    }(),\n        d = a.animObject,\n        c = w.parse,\n        b = t.charts,\n        l = t.deg2rad,\n        q = D.perspective,\n        A = D.shapeArea,\n        e = x.defined,\n        n = x.extend,\n        u = x.merge,\n        p = x.pick,\n        G = Math.cos,\n        C = Math.sin,\n        I = Math.PI,\n        B = 4 * (Math.sqrt(2) - 1) / 3 / (I / 2);\n\n    return function (a) {\n      function m() {\n        return null !== a && a.apply(this, arguments) || this;\n      }\n\n      k(m, a);\n\n      m.compose = function (b) {\n        b = b.prototype;\n        var e = m.prototype;\n        b.elements3d = z;\n        b.arc3d = e.arc3d;\n        b.arc3dPath = e.arc3dPath;\n        b.cuboid = e.cuboid;\n        b.cuboidPath = e.cuboidPath;\n        b.element3d = e.element3d;\n        b.face3d = e.face3d;\n        b.polyhedron = e.polyhedron;\n        b.toLinePath = e.toLinePath;\n        b.toLineSegments = e.toLineSegments;\n      };\n\n      m.curveTo = function (b, e, h, r, g, y, c, d) {\n        var H = [],\n            a = y - g;\n        return y > g && y - g > Math.PI / 2 + .0001 ? (H = H.concat(this.curveTo(b, e, h, r, g, g + Math.PI / 2, c, d)), H = H.concat(this.curveTo(b, e, h, r, g + Math.PI / 2, y, c, d))) : y < g && g - y > Math.PI / 2 + .0001 ? (H = H.concat(this.curveTo(b, e, h, r, g, g - Math.PI / 2, c, d)), H = H.concat(this.curveTo(b, e, h, r, g - Math.PI / 2, y, c, d))) : [[\"C\", b + h * Math.cos(g) - h * B * a * Math.sin(g) + c, e + r * Math.sin(g) + r * B * a * Math.cos(g) + d, b + h * Math.cos(y) + h * B * a * Math.sin(y) + c, e + r * Math.sin(y) - r * B * a * Math.cos(y) + d, b + h * Math.cos(y) + c, e + r * Math.sin(y) + d]];\n      };\n\n      m.prototype.toLinePath = function (b, e) {\n        var h = [];\n        b.forEach(function (b) {\n          h.push([\"L\", b.x, b.y]);\n        });\n        b.length && (h[0][0] = \"M\", e && h.push([\"Z\"]));\n        return h;\n      };\n\n      m.prototype.toLineSegments = function (b) {\n        var e = [],\n            h = !0;\n        b.forEach(function (b) {\n          e.push(h ? [\"M\", b.x, b.y] : [\"L\", b.x, b.y]);\n          h = !h;\n        });\n        return e;\n      };\n\n      m.prototype.face3d = function (c) {\n        var d = this,\n            h = this.createElement(\"path\");\n        h.vertexes = [];\n        h.insidePlotArea = !1;\n        h.enabled = !0;\n\n        h.attr = function (h) {\n          if (\"object\" === typeof h && (e(h.enabled) || e(h.vertexes) || e(h.insidePlotArea))) {\n            this.enabled = p(h.enabled, this.enabled);\n            this.vertexes = p(h.vertexes, this.vertexes);\n            this.insidePlotArea = p(h.insidePlotArea, this.insidePlotArea);\n            delete h.enabled;\n            delete h.vertexes;\n            delete h.insidePlotArea;\n            var g = q(this.vertexes, b[d.chartIndex], this.insidePlotArea),\n                y = d.toLinePath(g, !0);\n            g = A(g);\n            h.d = y;\n            h.visibility = this.enabled && 0 < g ? \"inherit\" : \"hidden\";\n          }\n\n          return f.prototype.attr.apply(this, arguments);\n        };\n\n        h.animate = function (h) {\n          if (\"object\" === typeof h && (e(h.enabled) || e(h.vertexes) || e(h.insidePlotArea))) {\n            this.enabled = p(h.enabled, this.enabled);\n            this.vertexes = p(h.vertexes, this.vertexes);\n            this.insidePlotArea = p(h.insidePlotArea, this.insidePlotArea);\n            delete h.enabled;\n            delete h.vertexes;\n            delete h.insidePlotArea;\n            var g = q(this.vertexes, b[d.chartIndex], this.insidePlotArea),\n                y = d.toLinePath(g, !0);\n            g = A(g);\n            g = this.enabled && 0 < g ? \"visible\" : \"hidden\";\n            h.d = y;\n            this.attr(\"visibility\", g);\n          }\n\n          return f.prototype.animate.apply(this, arguments);\n        };\n\n        return h.attr(c);\n      };\n\n      m.prototype.polyhedron = function (b) {\n        var c = this,\n            h = this.g(),\n            r = h.destroy;\n        this.styledMode || h.attr({\n          \"stroke-linejoin\": \"round\"\n        });\n        h.faces = [];\n\n        h.destroy = function () {\n          for (var b = 0; b < h.faces.length; b++) h.faces[b].destroy();\n\n          return r.call(this);\n        };\n\n        h.attr = function (b, y, r, d) {\n          if (\"object\" === typeof b && e(b.faces)) {\n            for (; h.faces.length > b.faces.length;) h.faces.pop().destroy();\n\n            for (; h.faces.length < b.faces.length;) h.faces.push(c.face3d().add(h));\n\n            for (var g = 0; g < b.faces.length; g++) c.styledMode && delete b.faces[g].fill, h.faces[g].attr(b.faces[g], null, r, d);\n\n            delete b.faces;\n          }\n\n          return f.prototype.attr.apply(this, arguments);\n        };\n\n        h.animate = function (b, e, r) {\n          if (b && b.faces) {\n            for (; h.faces.length > b.faces.length;) h.faces.pop().destroy();\n\n            for (; h.faces.length < b.faces.length;) h.faces.push(c.face3d().add(h));\n\n            for (var g = 0; g < b.faces.length; g++) h.faces[g].animate(b.faces[g], e, r);\n\n            delete b.faces;\n          }\n\n          return f.prototype.animate.apply(this, arguments);\n        };\n\n        return h.attr(b);\n      };\n\n      m.prototype.element3d = function (b, e) {\n        var h = this.g();\n        n(h, this.elements3d[b]);\n        h.initArgs(e);\n        return h;\n      };\n\n      m.prototype.cuboid = function (b) {\n        return this.element3d(\"cuboid\", b);\n      };\n\n      m.prototype.cuboidPath = function (e) {\n        function c(b) {\n          return 0 === d && 1 < b && 6 > b ? {\n            x: m[b].x,\n            y: m[b].y + 10,\n            z: m[b].z\n          } : m[0].x === m[7].x && 4 <= b ? {\n            x: m[b].x + 10,\n            y: m[b].y,\n            z: m[b].z\n          } : 0 === n && 2 > b || 5 < b ? {\n            x: m[b].x,\n            y: m[b].y,\n            z: m[b].z + 10\n          } : m[b];\n        }\n\n        function h(b) {\n          return m[b];\n        }\n\n        var r = e.x || 0,\n            g = e.y || 0,\n            y = e.z || 0,\n            d = e.height || 0,\n            a = e.width || 0,\n            n = e.depth || 0,\n            f = b[this.chartIndex],\n            p = f.options.chart.options3d.alpha,\n            u = 0,\n            m = [{\n          x: r,\n          y: g,\n          z: y\n        }, {\n          x: r + a,\n          y: g,\n          z: y\n        }, {\n          x: r + a,\n          y: g + d,\n          z: y\n        }, {\n          x: r,\n          y: g + d,\n          z: y\n        }, {\n          x: r,\n          y: g + d,\n          z: y + n\n        }, {\n          x: r + a,\n          y: g + d,\n          z: y + n\n        }, {\n          x: r + a,\n          y: g,\n          z: y + n\n        }, {\n          x: r,\n          y: g,\n          z: y + n\n        }],\n            C = [];\n        m = q(m, f, e.insidePlotArea);\n\n        var J = function (b, g, e) {\n          var y = [[], -1],\n              r = b.map(h),\n              d = g.map(h);\n          b = b.map(c);\n          g = g.map(c);\n          0 > A(r) ? y = [r, 0] : 0 > A(d) ? y = [d, 1] : e && (C.push(e), y = 0 > A(b) ? [r, 0] : 0 > A(g) ? [d, 1] : [r, 0]);\n          return y;\n        };\n\n        var l = J([3, 2, 1, 0], [7, 6, 5, 4], \"front\");\n        e = l[0];\n        var G = l[1];\n        l = J([1, 6, 7, 0], [4, 5, 2, 3], \"top\");\n        a = l[0];\n        var k = l[1];\n        l = J([1, 2, 5, 6], [0, 7, 4, 3], \"side\");\n        J = l[0];\n        l = l[1];\n        1 === l ? u += 1E6 * (f.plotWidth - r) : l || (u += 1E6 * r);\n        u += 10 * (!k || 0 <= p && 180 >= p || 360 > p && 357.5 < p ? f.plotHeight - g : 10 + g);\n        1 === G ? u += 100 * y : G || (u += 100 * (1E3 - y));\n        return {\n          front: this.toLinePath(e, !0),\n          top: this.toLinePath(a, !0),\n          side: this.toLinePath(J, !0),\n          zIndexes: {\n            group: Math.round(u)\n          },\n          forcedSides: C,\n          isFront: G,\n          isTop: k\n        };\n      };\n\n      m.prototype.arc3d = function (b) {\n        function e(b) {\n          var h = !1,\n              e = {},\n              y;\n          b = u(b);\n\n          for (y in b) -1 !== g.indexOf(y) && (e[y] = b[y], delete b[y], h = !0);\n\n          return h ? [e, b] : !1;\n        }\n\n        var h = this.g(),\n            r = h.renderer,\n            g = \"x y r innerR start end depth\".split(\" \");\n        b = u(b);\n        b.alpha = (b.alpha || 0) * l;\n        b.beta = (b.beta || 0) * l;\n        h.top = r.path();\n        h.side1 = r.path();\n        h.side2 = r.path();\n        h.inn = r.path();\n        h.out = r.path();\n\n        h.onAdd = function () {\n          var b = h.parentGroup,\n              e = h.attr(\"class\");\n          h.top.add(h);\n          [\"out\", \"inn\", \"side1\", \"side2\"].forEach(function (g) {\n            h[g].attr({\n              \"class\": e + \" highcharts-3d-side\"\n            }).add(b);\n          });\n        };\n\n        [\"addClass\", \"removeClass\"].forEach(function (b) {\n          h[b] = function () {\n            var e = arguments;\n            [\"top\", \"out\", \"inn\", \"side1\", \"side2\"].forEach(function (g) {\n              h[g][b].apply(h[g], e);\n            });\n          };\n        });\n\n        h.setPaths = function (b) {\n          var e = h.renderer.arc3dPath(b),\n              g = 100 * e.zTop;\n          h.attribs = b;\n          h.top.attr({\n            d: e.top,\n            zIndex: e.zTop\n          });\n          h.inn.attr({\n            d: e.inn,\n            zIndex: e.zInn\n          });\n          h.out.attr({\n            d: e.out,\n            zIndex: e.zOut\n          });\n          h.side1.attr({\n            d: e.side1,\n            zIndex: e.zSide1\n          });\n          h.side2.attr({\n            d: e.side2,\n            zIndex: e.zSide2\n          });\n          h.zIndex = g;\n          h.attr({\n            zIndex: g\n          });\n          b.center && (h.top.setRadialReference(b.center), delete b.center);\n        };\n\n        h.setPaths(b);\n\n        h.fillSetter = function (b) {\n          var e = c(b).brighten(-.1).get();\n          this.fill = b;\n          this.side1.attr({\n            fill: e\n          });\n          this.side2.attr({\n            fill: e\n          });\n          this.inn.attr({\n            fill: e\n          });\n          this.out.attr({\n            fill: e\n          });\n          this.top.attr({\n            fill: b\n          });\n          return this;\n        };\n\n        [\"opacity\", \"translateX\", \"translateY\", \"visibility\"].forEach(function (b) {\n          h[b + \"Setter\"] = function (b, e) {\n            h[e] = b;\n            [\"out\", \"inn\", \"side1\", \"side2\", \"top\"].forEach(function (g) {\n              h[g].attr(e, b);\n            });\n          };\n        });\n\n        h.attr = function (b) {\n          var g;\n\n          if (\"object\" === typeof b && (g = e(b))) {\n            var y = g[0];\n            arguments[0] = g[1];\n            n(h.attribs, y);\n            h.setPaths(h.attribs);\n          }\n\n          return f.prototype.attr.apply(h, arguments);\n        };\n\n        h.animate = function (b, g, r) {\n          var y = this.attribs,\n              c = \"data-\" + Math.random().toString(26).substring(2, 9);\n          delete b.center;\n          delete b.z;\n          delete b.alpha;\n          delete b.beta;\n          var a = d(p(g, this.renderer.globalAnimation));\n\n          if (a.duration) {\n            g = e(b);\n            h[c] = 0;\n            b[c] = 1;\n            h[c + \"Setter\"] = t.noop;\n\n            if (g) {\n              var n = g[0];\n\n              a.step = function (b, e) {\n                function g(b) {\n                  return y[b] + (p(n[b], y[b]) - y[b]) * e.pos;\n                }\n\n                e.prop === c && e.elem.setPaths(u(y, {\n                  x: g(\"x\"),\n                  y: g(\"y\"),\n                  r: g(\"r\"),\n                  innerR: g(\"innerR\"),\n                  start: g(\"start\"),\n                  end: g(\"end\"),\n                  depth: g(\"depth\")\n                }));\n              };\n            }\n\n            g = a;\n          }\n\n          return f.prototype.animate.call(this, b, g, r);\n        };\n\n        h.destroy = function () {\n          this.top.destroy();\n          this.out.destroy();\n          this.inn.destroy();\n          this.side1.destroy();\n          this.side2.destroy();\n          return f.prototype.destroy.call(this);\n        };\n\n        h.hide = function () {\n          this.top.hide();\n          this.out.hide();\n          this.inn.hide();\n          this.side1.hide();\n          this.side2.hide();\n        };\n\n        h.show = function (b) {\n          this.top.show(b);\n          this.out.show(b);\n          this.inn.show(b);\n          this.side1.show(b);\n          this.side2.show(b);\n        };\n\n        return h;\n      };\n\n      m.prototype.arc3dPath = function (b) {\n        function e(b) {\n          b %= 2 * Math.PI;\n          b > Math.PI && (b = 2 * Math.PI - b);\n          return b;\n        }\n\n        var h = b.x || 0,\n            r = b.y || 0,\n            g = b.start || 0,\n            c = (b.end || 0) - .00001,\n            d = b.r || 0,\n            a = b.innerR || 0,\n            n = b.depth || 0,\n            f = b.alpha || 0,\n            p = b.beta || 0,\n            u = Math.cos(g),\n            l = Math.sin(g);\n        b = Math.cos(c);\n        var q = Math.sin(c),\n            k = d * Math.cos(p);\n        d *= Math.cos(f);\n        var A = a * Math.cos(p),\n            v = a * Math.cos(f);\n        a = n * Math.sin(p);\n        var B = n * Math.sin(f);\n        n = [[\"M\", h + k * u, r + d * l]];\n        n = n.concat(m.curveTo(h, r, k, d, g, c, 0, 0));\n        n.push([\"L\", h + A * b, r + v * q]);\n        n = n.concat(m.curveTo(h, r, A, v, c, g, 0, 0));\n        n.push([\"Z\"]);\n        var z = 0 < p ? Math.PI / 2 : 0;\n        p = 0 < f ? 0 : Math.PI / 2;\n        z = g > -z ? g : c > -z ? -z : g;\n        var t = c < I - p ? c : g < I - p ? I - p : c,\n            x = 2 * I - p;\n        f = [[\"M\", h + k * G(z), r + d * C(z)]];\n        f = f.concat(m.curveTo(h, r, k, d, z, t, 0, 0));\n        c > x && g < x ? (f.push([\"L\", h + k * G(t) + a, r + d * C(t) + B]), f = f.concat(m.curveTo(h, r, k, d, t, x, a, B)), f.push([\"L\", h + k * G(x), r + d * C(x)]), f = f.concat(m.curveTo(h, r, k, d, x, c, 0, 0)), f.push([\"L\", h + k * G(c) + a, r + d * C(c) + B]), f = f.concat(m.curveTo(h, r, k, d, c, x, a, B)), f.push([\"L\", h + k * G(x), r + d * C(x)]), f = f.concat(m.curveTo(h, r, k, d, x, t, 0, 0))) : c > I - p && g < I - p && (f.push([\"L\", h + k * Math.cos(t) + a, r + d * Math.sin(t) + B]), f = f.concat(m.curveTo(h, r, k, d, t, c, a, B)), f.push([\"L\", h + k * Math.cos(c), r + d * Math.sin(c)]), f = f.concat(m.curveTo(h, r, k, d, c, t, 0, 0)));\n        f.push([\"L\", h + k * Math.cos(t) + a, r + d * Math.sin(t) + B]);\n        f = f.concat(m.curveTo(h, r, k, d, t, z, a, B));\n        f.push([\"Z\"]);\n        p = [[\"M\", h + A * u, r + v * l]];\n        p = p.concat(m.curveTo(h, r, A, v, g, c, 0, 0));\n        p.push([\"L\", h + A * Math.cos(c) + a, r + v * Math.sin(c) + B]);\n        p = p.concat(m.curveTo(h, r, A, v, c, g, a, B));\n        p.push([\"Z\"]);\n        u = [[\"M\", h + k * u, r + d * l], [\"L\", h + k * u + a, r + d * l + B], [\"L\", h + A * u + a, r + v * l + B], [\"L\", h + A * u, r + v * l], [\"Z\"]];\n        h = [[\"M\", h + k * b, r + d * q], [\"L\", h + k * b + a, r + d * q + B], [\"L\", h + A * b + a, r + v * q + B], [\"L\", h + A * b, r + v * q], [\"Z\"]];\n        q = Math.atan2(B, -a);\n        r = Math.abs(c + q);\n        b = Math.abs(g + q);\n        g = Math.abs((g + c) / 2 + q);\n        r = e(r);\n        b = e(b);\n        g = e(g);\n        g *= 1E5;\n        c = 1E5 * b;\n        r *= 1E5;\n        return {\n          top: n,\n          zTop: 1E5 * Math.PI + 1,\n          out: f,\n          zOut: Math.max(g, c, r),\n          inn: p,\n          zInn: Math.max(g, c, r),\n          side1: u,\n          zSide1: .99 * r,\n          side2: h,\n          zSide2: .99 * c\n        };\n      };\n\n      return m;\n    }(v);\n  });\n  E(a, \"Core/Chart/Chart3D.js\", [a[\"Core/Color/Color.js\"], a[\"Extensions/Math3D.js\"], a[\"Core/DefaultOptions.js\"], a[\"Core/Utilities.js\"]], function (a, w, t, D) {\n    var f = a.parse,\n        z = w.perspective,\n        v = w.shapeArea3D,\n        x = t.defaultOptions,\n        k = D.addEvent,\n        d = D.isArray,\n        c = D.merge,\n        b = D.pick,\n        l = D.wrap,\n        q;\n\n    (function (a) {\n      function e(b) {\n        this.is3d() && \"scatter\" === b.options.type && (b.options.type = \"scatter3d\");\n      }\n\n      function n() {\n        if (this.chart3d && this.is3d()) {\n          var b = this.renderer,\n              e = this.options.chart.options3d,\n              g = this.chart3d.get3dFrame(),\n              c = this.plotLeft,\n              d = this.plotLeft + this.plotWidth,\n              a = this.plotTop,\n              p = this.plotTop + this.plotHeight;\n          e = e.depth;\n          var n = c - (g.left.visible ? g.left.size : 0),\n              u = d + (g.right.visible ? g.right.size : 0),\n              m = a - (g.top.visible ? g.top.size : 0),\n              k = p + (g.bottom.visible ? g.bottom.size : 0),\n              q = 0 - (g.front.visible ? g.front.size : 0),\n              l = e + (g.back.visible ? g.back.size : 0),\n              C = this.hasRendered ? \"animate\" : \"attr\";\n          this.chart3d.frame3d = g;\n          this.frameShapes || (this.frameShapes = {\n            bottom: b.polyhedron().add(),\n            top: b.polyhedron().add(),\n            left: b.polyhedron().add(),\n            right: b.polyhedron().add(),\n            back: b.polyhedron().add(),\n            front: b.polyhedron().add()\n          });\n          this.frameShapes.bottom[C]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-bottom\",\n            zIndex: g.bottom.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: f(g.bottom.color).brighten(.1).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: n,\n                y: k,\n                z: l\n              }],\n              enabled: g.bottom.visible\n            }, {\n              fill: f(g.bottom.color).brighten(.1).get(),\n              vertexes: [{\n                x: c,\n                y: p,\n                z: e\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }],\n              enabled: g.bottom.visible\n            }, {\n              fill: f(g.bottom.color).brighten(-.1).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }],\n              enabled: g.bottom.visible && !g.left.visible\n            }, {\n              fill: f(g.bottom.color).brighten(-.1).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }],\n              enabled: g.bottom.visible && !g.right.visible\n            }, {\n              fill: f(g.bottom.color).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }],\n              enabled: g.bottom.visible && !g.front.visible\n            }, {\n              fill: f(g.bottom.color).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }],\n              enabled: g.bottom.visible && !g.back.visible\n            }]\n          });\n          this.frameShapes.top[C]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-top\",\n            zIndex: g.top.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: f(g.top.color).brighten(.1).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }],\n              enabled: g.top.visible\n            }, {\n              fill: f(g.top.color).brighten(.1).get(),\n              vertexes: [{\n                x: c,\n                y: a,\n                z: 0\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }],\n              enabled: g.top.visible\n            }, {\n              fill: f(g.top.color).brighten(-.1).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }],\n              enabled: g.top.visible && !g.left.visible\n            }, {\n              fill: f(g.top.color).brighten(-.1).get(),\n              vertexes: [{\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }],\n              enabled: g.top.visible && !g.right.visible\n            }, {\n              fill: f(g.top.color).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }],\n              enabled: g.top.visible && !g.front.visible\n            }, {\n              fill: f(g.top.color).get(),\n              vertexes: [{\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }],\n              enabled: g.top.visible && !g.back.visible\n            }]\n          });\n          this.frameShapes.left[C]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-left\",\n            zIndex: g.left.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: f(g.left.color).brighten(.1).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }, {\n                x: n,\n                y: k,\n                z: l\n              }],\n              enabled: g.left.visible && !g.bottom.visible\n            }, {\n              fill: f(g.left.color).brighten(.1).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }],\n              enabled: g.left.visible && !g.top.visible\n            }, {\n              fill: f(g.left.color).brighten(-.1).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: n,\n                y: k,\n                z: q\n              }],\n              enabled: g.left.visible\n            }, {\n              fill: f(g.left.color).brighten(-.1).get(),\n              vertexes: [{\n                x: c,\n                y: a,\n                z: e\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }],\n              enabled: g.left.visible\n            }, {\n              fill: f(g.left.color).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }],\n              enabled: g.left.visible && !g.front.visible\n            }, {\n              fill: f(g.left.color).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }],\n              enabled: g.left.visible && !g.back.visible\n            }]\n          });\n          this.frameShapes.right[C]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-right\",\n            zIndex: g.right.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: f(g.right.color).brighten(.1).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }, {\n                x: u,\n                y: k,\n                z: q\n              }],\n              enabled: g.right.visible && !g.bottom.visible\n            }, {\n              fill: f(g.right.color).brighten(.1).get(),\n              vertexes: [{\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }],\n              enabled: g.right.visible && !g.top.visible\n            }, {\n              fill: f(g.right.color).brighten(-.1).get(),\n              vertexes: [{\n                x: d,\n                y: a,\n                z: 0\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }],\n              enabled: g.right.visible\n            }, {\n              fill: f(g.right.color).brighten(-.1).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: u,\n                y: k,\n                z: l\n              }],\n              enabled: g.right.visible\n            }, {\n              fill: f(g.right.color).get(),\n              vertexes: [{\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }],\n              enabled: g.right.visible && !g.front.visible\n            }, {\n              fill: f(g.right.color).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }],\n              enabled: g.right.visible && !g.back.visible\n            }]\n          });\n          this.frameShapes.back[C]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-back\",\n            zIndex: g.back.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: f(g.back.color).brighten(.1).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }],\n              enabled: g.back.visible && !g.bottom.visible\n            }, {\n              fill: f(g.back.color).brighten(.1).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }],\n              enabled: g.back.visible && !g.top.visible\n            }, {\n              fill: f(g.back.color).brighten(-.1).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: n,\n                y: m,\n                z: l\n              }, {\n                x: c,\n                y: a,\n                z: e\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }],\n              enabled: g.back.visible && !g.left.visible\n            }, {\n              fill: f(g.back.color).brighten(-.1).get(),\n              vertexes: [{\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }],\n              enabled: g.back.visible && !g.right.visible\n            }, {\n              fill: f(g.back.color).get(),\n              vertexes: [{\n                x: c,\n                y: a,\n                z: e\n              }, {\n                x: d,\n                y: a,\n                z: e\n              }, {\n                x: d,\n                y: p,\n                z: e\n              }, {\n                x: c,\n                y: p,\n                z: e\n              }],\n              enabled: g.back.visible\n            }, {\n              fill: f(g.back.color).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: l\n              }, {\n                x: u,\n                y: k,\n                z: l\n              }, {\n                x: u,\n                y: m,\n                z: l\n              }, {\n                x: n,\n                y: m,\n                z: l\n              }],\n              enabled: g.back.visible\n            }]\n          });\n          this.frameShapes.front[C]({\n            \"class\": \"highcharts-3d-frame highcharts-3d-frame-front\",\n            zIndex: g.front.frontFacing ? -1E3 : 1E3,\n            faces: [{\n              fill: f(g.front.color).brighten(.1).get(),\n              vertexes: [{\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }],\n              enabled: g.front.visible && !g.bottom.visible\n            }, {\n              fill: f(g.front.color).brighten(.1).get(),\n              vertexes: [{\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }],\n              enabled: g.front.visible && !g.top.visible\n            }, {\n              fill: f(g.front.color).brighten(-.1).get(),\n              vertexes: [{\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }],\n              enabled: g.front.visible && !g.left.visible\n            }, {\n              fill: f(g.front.color).brighten(-.1).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: u,\n                y: m,\n                z: q\n              }, {\n                x: d,\n                y: a,\n                z: 0\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }],\n              enabled: g.front.visible && !g.right.visible\n            }, {\n              fill: f(g.front.color).get(),\n              vertexes: [{\n                x: d,\n                y: a,\n                z: 0\n              }, {\n                x: c,\n                y: a,\n                z: 0\n              }, {\n                x: c,\n                y: p,\n                z: 0\n              }, {\n                x: d,\n                y: p,\n                z: 0\n              }],\n              enabled: g.front.visible\n            }, {\n              fill: f(g.front.color).get(),\n              vertexes: [{\n                x: u,\n                y: k,\n                z: q\n              }, {\n                x: n,\n                y: k,\n                z: q\n              }, {\n                x: n,\n                y: m,\n                z: q\n              }, {\n                x: u,\n                y: m,\n                z: q\n              }],\n              enabled: g.front.visible\n            }]\n          });\n        }\n      }\n\n      function u() {\n        this.styledMode && [{\n          name: \"darker\",\n          slope: .6\n        }, {\n          name: \"brighter\",\n          slope: 1.4\n        }].forEach(function (b) {\n          this.renderer.definition({\n            tagName: \"filter\",\n            attributes: {\n              id: \"highcharts-\" + b.name\n            },\n            children: [{\n              tagName: \"feComponentTransfer\",\n              children: [{\n                tagName: \"feFuncR\",\n                attributes: {\n                  type: \"linear\",\n                  slope: b.slope\n                }\n              }, {\n                tagName: \"feFuncG\",\n                attributes: {\n                  type: \"linear\",\n                  slope: b.slope\n                }\n              }, {\n                tagName: \"feFuncB\",\n                attributes: {\n                  type: \"linear\",\n                  slope: b.slope\n                }\n              }]\n            }]\n          });\n        }, this);\n      }\n\n      function p() {\n        var b = this.options;\n        this.is3d() && (b.series || []).forEach(function (e) {\n          \"scatter\" === (e.type || b.chart.type || b.chart.defaultSeriesType) && (e.type = \"scatter3d\");\n        });\n      }\n\n      function q() {\n        var b = this.options.chart.options3d;\n\n        if (this.chart3d && this.is3d()) {\n          b && (b.alpha = b.alpha % 360 + (0 <= b.alpha ? 0 : 360), b.beta = b.beta % 360 + (0 <= b.beta ? 0 : 360));\n          var e = this.inverted,\n              g = this.clipBox,\n              c = this.margin;\n          g[e ? \"y\" : \"x\"] = -(c[3] || 0);\n          g[e ? \"x\" : \"y\"] = -(c[0] || 0);\n          g[e ? \"height\" : \"width\"] = this.chartWidth + (c[3] || 0) + (c[1] || 0);\n          g[e ? \"width\" : \"height\"] = this.chartHeight + (c[0] || 0) + (c[2] || 0);\n          this.scale3d = 1;\n          !0 === b.fitToPlot && (this.scale3d = this.chart3d.getScale(b.depth));\n          this.chart3d.frame3d = this.chart3d.get3dFrame();\n        }\n      }\n\n      function C() {\n        this.is3d() && (this.isDirtyBox = !0);\n      }\n\n      function A() {\n        this.chart3d && this.is3d() && (this.chart3d.frame3d = this.chart3d.get3dFrame());\n      }\n\n      function B() {\n        this.chart3d || (this.chart3d = new F(this));\n      }\n\n      function m(b) {\n        return this.is3d() || b.apply(this, [].slice.call(arguments, 1));\n      }\n\n      function t(b) {\n        var e = this.series.length;\n        if (this.is3d()) for (; e--;) b = this.series[e], b.translate(), b.render();else b.call(this);\n      }\n\n      function w(b) {\n        b.apply(this, [].slice.call(arguments, 1));\n        this.is3d() && (this.container.className += \" highcharts-3d-chart\");\n      }\n\n      var F = function () {\n        function e(b) {\n          this.frame3d = void 0;\n          this.chart = b;\n        }\n\n        e.prototype.get3dFrame = function () {\n          var e = this.chart,\n              g = e.options.chart.options3d,\n              c = g.frame,\n              d = e.plotLeft,\n              a = e.plotLeft + e.plotWidth,\n              h = e.plotTop,\n              p = e.plotTop + e.plotHeight,\n              n = g.depth,\n              f = function (b) {\n            b = v(b, e);\n            return .5 < b ? 1 : -.5 > b ? -1 : 0;\n          },\n              u = f([{\n            x: d,\n            y: p,\n            z: n\n          }, {\n            x: a,\n            y: p,\n            z: n\n          }, {\n            x: a,\n            y: p,\n            z: 0\n          }, {\n            x: d,\n            y: p,\n            z: 0\n          }]),\n              m = f([{\n            x: d,\n            y: h,\n            z: 0\n          }, {\n            x: a,\n            y: h,\n            z: 0\n          }, {\n            x: a,\n            y: h,\n            z: n\n          }, {\n            x: d,\n            y: h,\n            z: n\n          }]),\n              k = f([{\n            x: d,\n            y: h,\n            z: 0\n          }, {\n            x: d,\n            y: h,\n            z: n\n          }, {\n            x: d,\n            y: p,\n            z: n\n          }, {\n            x: d,\n            y: p,\n            z: 0\n          }]),\n              q = f([{\n            x: a,\n            y: h,\n            z: n\n          }, {\n            x: a,\n            y: h,\n            z: 0\n          }, {\n            x: a,\n            y: p,\n            z: 0\n          }, {\n            x: a,\n            y: p,\n            z: n\n          }]),\n              l = f([{\n            x: d,\n            y: p,\n            z: 0\n          }, {\n            x: a,\n            y: p,\n            z: 0\n          }, {\n            x: a,\n            y: h,\n            z: 0\n          }, {\n            x: d,\n            y: h,\n            z: 0\n          }]);\n\n          f = f([{\n            x: d,\n            y: h,\n            z: n\n          }, {\n            x: a,\n            y: h,\n            z: n\n          }, {\n            x: a,\n            y: p,\n            z: n\n          }, {\n            x: d,\n            y: p,\n            z: n\n          }]);\n          var C = !1,\n              G = !1,\n              B = !1,\n              A = !1;\n          [].concat(e.xAxis, e.yAxis, e.zAxis).forEach(function (b) {\n            b && (b.horiz ? b.opposite ? G = !0 : C = !0 : b.opposite ? A = !0 : B = !0);\n          });\n\n          var t = function (e, c, d) {\n            for (var g = [\"size\", \"color\", \"visible\"], a = {}, p = 0; p < g.length; p++) for (var h = g[p], n = 0; n < e.length; n++) if (\"object\" === typeof e[n]) {\n              var f = e[n][h];\n\n              if (\"undefined\" !== typeof f && null !== f) {\n                a[h] = f;\n                break;\n              }\n            }\n\n            e = d;\n            !0 === a.visible || !1 === a.visible ? e = a.visible : \"auto\" === a.visible && (e = 0 < c);\n            return {\n              size: b(a.size, 1),\n              color: b(a.color, \"none\"),\n              frontFacing: 0 < c,\n              visible: e\n            };\n          };\n\n          c = {\n            axes: {},\n            bottom: t([c.bottom, c.top, c], u, C),\n            top: t([c.top, c.bottom, c], m, G),\n            left: t([c.left, c.right, c.side, c], k, B),\n            right: t([c.right, c.left, c.side, c], q, A),\n            back: t([c.back, c.front, c], f, !0),\n            front: t([c.front, c.back, c], l, !1)\n          };\n          \"auto\" === g.axisLabelPosition ? (q = function (b, e) {\n            return b.visible !== e.visible || b.visible && e.visible && b.frontFacing !== e.frontFacing;\n          }, g = [], q(c.left, c.front) && g.push({\n            y: (h + p) / 2,\n            x: d,\n            z: 0,\n            xDir: {\n              x: 1,\n              y: 0,\n              z: 0\n            }\n          }), q(c.left, c.back) && g.push({\n            y: (h + p) / 2,\n            x: d,\n            z: n,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: -1\n            }\n          }), q(c.right, c.front) && g.push({\n            y: (h + p) / 2,\n            x: a,\n            z: 0,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: 1\n            }\n          }), q(c.right, c.back) && g.push({\n            y: (h + p) / 2,\n            x: a,\n            z: n,\n            xDir: {\n              x: -1,\n              y: 0,\n              z: 0\n            }\n          }), u = [], q(c.bottom, c.front) && u.push({\n            x: (d + a) / 2,\n            y: p,\n            z: 0,\n            xDir: {\n              x: 1,\n              y: 0,\n              z: 0\n            }\n          }), q(c.bottom, c.back) && u.push({\n            x: (d + a) / 2,\n            y: p,\n            z: n,\n            xDir: {\n              x: -1,\n              y: 0,\n              z: 0\n            }\n          }), m = [], q(c.top, c.front) && m.push({\n            x: (d + a) / 2,\n            y: h,\n            z: 0,\n            xDir: {\n              x: 1,\n              y: 0,\n              z: 0\n            }\n          }), q(c.top, c.back) && m.push({\n            x: (d + a) / 2,\n            y: h,\n            z: n,\n            xDir: {\n              x: -1,\n              y: 0,\n              z: 0\n            }\n          }), k = [], q(c.bottom, c.left) && k.push({\n            z: (0 + n) / 2,\n            y: p,\n            x: d,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: -1\n            }\n          }), q(c.bottom, c.right) && k.push({\n            z: (0 + n) / 2,\n            y: p,\n            x: a,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: 1\n            }\n          }), p = [], q(c.top, c.left) && p.push({\n            z: (0 + n) / 2,\n            y: h,\n            x: d,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: -1\n            }\n          }), q(c.top, c.right) && p.push({\n            z: (0 + n) / 2,\n            y: h,\n            x: a,\n            xDir: {\n              x: 0,\n              y: 0,\n              z: 1\n            }\n          }), d = function (b, c, d) {\n            if (0 === b.length) return null;\n            if (1 === b.length) return b[0];\n\n            for (var g = z(b, e, !1), a = 0, p = 1; p < g.length; p++) d * g[p][c] > d * g[a][c] ? a = p : d * g[p][c] === d * g[a][c] && g[p].z < g[a].z && (a = p);\n\n            return b[a];\n          }, c.axes = {\n            y: {\n              left: d(g, \"x\", -1),\n              right: d(g, \"x\", 1)\n            },\n            x: {\n              top: d(m, \"y\", -1),\n              bottom: d(u, \"y\", 1)\n            },\n            z: {\n              top: d(p, \"y\", -1),\n              bottom: d(k, \"y\", 1)\n            }\n          }) : c.axes = {\n            y: {\n              left: {\n                x: d,\n                z: 0,\n                xDir: {\n                  x: 1,\n                  y: 0,\n                  z: 0\n                }\n              },\n              right: {\n                x: a,\n                z: 0,\n                xDir: {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                }\n              }\n            },\n            x: {\n              top: {\n                y: h,\n                z: 0,\n                xDir: {\n                  x: 1,\n                  y: 0,\n                  z: 0\n                }\n              },\n              bottom: {\n                y: p,\n                z: 0,\n                xDir: {\n                  x: 1,\n                  y: 0,\n                  z: 0\n                }\n              }\n            },\n            z: {\n              top: {\n                x: B ? a : d,\n                y: h,\n                xDir: B ? {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                } : {\n                  x: 0,\n                  y: 0,\n                  z: -1\n                }\n              },\n              bottom: {\n                x: B ? a : d,\n                y: p,\n                xDir: B ? {\n                  x: 0,\n                  y: 0,\n                  z: 1\n                } : {\n                  x: 0,\n                  y: 0,\n                  z: -1\n                }\n              }\n            }\n          };\n          return c;\n        };\n\n        e.prototype.getScale = function (b) {\n          var e = this.chart,\n              c = e.plotLeft,\n              d = e.plotWidth + c,\n              a = e.plotTop,\n              p = e.plotHeight + a,\n              h = c + e.plotWidth / 2,\n              n = a + e.plotHeight / 2,\n              f = Number.MAX_VALUE,\n              u = -Number.MAX_VALUE,\n              m = Number.MAX_VALUE,\n              q = -Number.MAX_VALUE,\n              k = 1;\n          var l = [{\n            x: c,\n            y: a,\n            z: 0\n          }, {\n            x: c,\n            y: a,\n            z: b\n          }];\n          [0, 1].forEach(function (b) {\n            l.push({\n              x: d,\n              y: l[b].y,\n              z: l[b].z\n            });\n          });\n          [0, 1, 2, 3].forEach(function (b) {\n            l.push({\n              x: l[b].x,\n              y: p,\n              z: l[b].z\n            });\n          });\n          l = z(l, e, !1);\n          l.forEach(function (b) {\n            f = Math.min(f, b.x);\n            u = Math.max(u, b.x);\n            m = Math.min(m, b.y);\n            q = Math.max(q, b.y);\n          });\n          c > f && (k = Math.min(k, 1 - Math.abs((c + h) / (f + h)) % 1));\n          d < u && (k = Math.min(k, (d - h) / (u - h)));\n          a > m && (k = 0 > m ? Math.min(k, (a + n) / (-m + a + n)) : Math.min(k, 1 - (a + n) / (m + n) % 1));\n          p < q && (k = Math.min(k, Math.abs((p - n) / (q - n))));\n          return k;\n        };\n\n        return e;\n      }();\n\n      a.Composition = F;\n      a.defaultOptions = {\n        chart: {\n          options3d: {\n            enabled: !1,\n            alpha: 0,\n            beta: 0,\n            depth: 100,\n            fitToPlot: !0,\n            viewDistance: 25,\n            axisLabelPosition: null,\n            frame: {\n              visible: \"default\",\n              size: 1,\n              bottom: {},\n              top: {},\n              left: {},\n              right: {},\n              back: {},\n              front: {}\n            }\n          }\n        }\n      };\n\n      a.compose = function (b, f) {\n        var g = b.prototype;\n        f = f.prototype;\n\n        g.is3d = function () {\n          return !(!this.options.chart.options3d || !this.options.chart.options3d.enabled);\n        };\n\n        g.propsRequireDirtyBox.push(\"chart.options3d\");\n        g.propsRequireUpdateSeries.push(\"chart.options3d\");\n\n        f.matrixSetter = function () {\n          if (1 > this.pos && (d(this.start) || d(this.end))) {\n            var b = this.start || [1, 0, 0, 1, 0, 0],\n                e = this.end || [1, 0, 0, 1, 0, 0];\n            var c = [];\n\n            for (var a = 0; 6 > a; a++) c.push(this.pos * e[a] + (1 - this.pos) * b[a]);\n          } else c = this.end;\n\n          this.elem.attr(this.prop, c, null, !0);\n        };\n\n        c(!0, x, a.defaultOptions);\n        k(b, \"init\", B);\n        k(b, \"addSeries\", e);\n        k(b, \"afterDrawChartBox\", n);\n        k(b, \"afterGetContainer\", u);\n        k(b, \"afterInit\", p);\n        k(b, \"afterSetChartSize\", q);\n        k(b, \"beforeRedraw\", C);\n        k(b, \"beforeRender\", A);\n        l(g, \"isInsidePlot\", m);\n        l(b, \"renderSeries\", t);\n        l(b, \"setClassName\", w);\n      };\n    })(q || (q = {}));\n\n    \"\";\n    return q;\n  });\n  E(a, \"Core/Axis/ZAxis.js\", [a[\"Core/Axis/Axis.js\"], a[\"Core/Utilities.js\"]], function (a, w) {\n    var t = this && this.__extends || function () {\n      var a = function (c, b) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (b, c) {\n          b.__proto__ = c;\n        } || function (b, c) {\n          for (var a in c) c.hasOwnProperty(a) && (b[a] = c[a]);\n        };\n\n        return a(c, b);\n      };\n\n      return function (c, b) {\n        function d() {\n          this.constructor = c;\n        }\n\n        a(c, b);\n        c.prototype = null === b ? Object.create(b) : (d.prototype = b.prototype, new d());\n      };\n    }(),\n        F = w.addEvent,\n        f = w.merge,\n        z = w.pick,\n        v = w.splat,\n        x = function () {\n      function a() {}\n\n      a.compose = function (c) {\n        F(c, \"afterGetAxes\", a.onAfterGetAxes);\n        c = c.prototype;\n        c.addZAxis = a.wrapAddZAxis;\n        c.collectionsWithInit.zAxis = [c.addZAxis];\n        c.collectionsWithUpdate.push(\"zAxis\");\n      };\n\n      a.onAfterGetAxes = function () {\n        var c = this,\n            b = this.options;\n        b = b.zAxis = v(b.zAxis || {});\n        c.is3d() && (c.zAxis = [], b.forEach(function (b, a) {\n          b.index = a;\n          b.isX = !0;\n          c.addZAxis(b).setScale();\n        }));\n      };\n\n      a.wrapAddZAxis = function (c) {\n        return new k(this, c);\n      };\n\n      return a;\n    }(),\n        k = function (a) {\n      function c(b, c) {\n        b = a.call(this, b, c) || this;\n        b.isZAxis = !0;\n        return b;\n      }\n\n      t(c, a);\n\n      c.prototype.getSeriesExtremes = function () {\n        var b = this,\n            c = b.chart;\n        b.hasVisibleSeries = !1;\n        b.dataMin = b.dataMax = b.ignoreMinPadding = b.ignoreMaxPadding = void 0;\n        b.stacking && b.stacking.buildStacks();\n        b.series.forEach(function (a) {\n          if (a.visible || !c.options.chart.ignoreHiddenSeries) b.hasVisibleSeries = !0, a = a.zData, a.length && (b.dataMin = Math.min(z(b.dataMin, a[0]), Math.min.apply(null, a)), b.dataMax = Math.max(z(b.dataMax, a[0]), Math.max.apply(null, a)));\n        });\n      };\n\n      c.prototype.setAxisSize = function () {\n        var b = this.chart;\n        a.prototype.setAxisSize.call(this);\n        this.width = this.len = b.options.chart.options3d && b.options.chart.options3d.depth || 0;\n        this.right = b.chartWidth - this.width - this.left;\n      };\n\n      c.prototype.setOptions = function (b) {\n        b = f({\n          offset: 0,\n          lineWidth: 0\n        }, b);\n        this.isZAxis = !0;\n        a.prototype.setOptions.call(this, b);\n        this.coll = \"zAxis\";\n      };\n\n      c.ZChartComposition = x;\n      return c;\n    }(a);\n\n    return k;\n  });\n  E(a, \"Core/Axis/Tick3D.js\", [a[\"Core/Utilities.js\"]], function (a) {\n    var w = a.addEvent,\n        t = a.extend,\n        F = a.wrap;\n    return function () {\n      function a() {}\n\n      a.compose = function (f) {\n        w(f, \"afterGetLabelPosition\", a.onAfterGetLabelPosition);\n        F(f.prototype, \"getMarkPath\", a.wrapGetMarkPath);\n      };\n\n      a.onAfterGetLabelPosition = function (a) {\n        var f = this.axis.axis3D;\n        f && t(a.pos, f.fix3dPosition(a.pos));\n      };\n\n      a.wrapGetMarkPath = function (a) {\n        var f = this.axis.axis3D,\n            t = a.apply(this, [].slice.call(arguments, 1));\n\n        if (f) {\n          var k = t[0],\n              d = t[1];\n          if (\"M\" === k[0] && \"L\" === d[0]) return f = [f.fix3dPosition({\n            x: k[1],\n            y: k[2],\n            z: 0\n          }), f.fix3dPosition({\n            x: d[1],\n            y: d[2],\n            z: 0\n          })], this.axis.chart.renderer.toLineSegments(f);\n        }\n\n        return t;\n      };\n\n      return a;\n    }();\n  });\n  E(a, \"Core/Axis/Axis3D.js\", [a[\"Core/Globals.js\"], a[\"Extensions/Math3D.js\"], a[\"Core/Axis/Tick.js\"], a[\"Core/Axis/Tick3D.js\"], a[\"Core/Utilities.js\"]], function (a, w, t, D, f) {\n    var z = a.deg2rad,\n        v = w.perspective,\n        x = w.perspective3D,\n        k = w.shapeArea,\n        d = f.addEvent,\n        c = f.merge,\n        b = f.pick,\n        l = f.wrap,\n        q = function () {\n      function c(b) {\n        this.axis = b;\n      }\n\n      c.prototype.fix3dPosition = function (e, c) {\n        var a = this.axis,\n            d = a.chart;\n        if (\"colorAxis\" === a.coll || !d.chart3d || !d.is3d()) return e;\n        var n = z * d.options.chart.options3d.alpha,\n            f = z * d.options.chart.options3d.beta,\n            q = b(c && a.options.title.position3d, a.options.labels.position3d);\n        c = b(c && a.options.title.skew3d, a.options.labels.skew3d);\n        var l = d.chart3d.frame3d,\n            m = d.plotLeft,\n            t = d.plotWidth + m,\n            A = d.plotTop,\n            x = d.plotHeight + A,\n            h = d = 0,\n            r = {\n          x: 0,\n          y: 1,\n          z: 0\n        },\n            g = !1;\n        e = a.axis3D.swapZ({\n          x: e.x,\n          y: e.y,\n          z: 0\n        });\n        if (a.isZAxis) {\n          if (a.opposite) {\n            if (null === l.axes.z.top) return {};\n            h = e.y - A;\n            e.x = l.axes.z.top.x;\n            e.y = l.axes.z.top.y;\n            m = l.axes.z.top.xDir;\n            g = !l.top.frontFacing;\n          } else {\n            if (null === l.axes.z.bottom) return {};\n            h = e.y - x;\n            e.x = l.axes.z.bottom.x;\n            e.y = l.axes.z.bottom.y;\n            m = l.axes.z.bottom.xDir;\n            g = !l.bottom.frontFacing;\n          }\n        } else if (a.horiz) {\n          if (a.opposite) {\n            if (null === l.axes.x.top) return {};\n            h = e.y - A;\n            e.y = l.axes.x.top.y;\n            e.z = l.axes.x.top.z;\n            m = l.axes.x.top.xDir;\n            g = !l.top.frontFacing;\n          } else {\n            if (null === l.axes.x.bottom) return {};\n            h = e.y - x;\n            e.y = l.axes.x.bottom.y;\n            e.z = l.axes.x.bottom.z;\n            m = l.axes.x.bottom.xDir;\n            g = !l.bottom.frontFacing;\n          }\n        } else if (a.opposite) {\n          if (null === l.axes.y.right) return {};\n          d = e.x - t;\n          e.x = l.axes.y.right.x;\n          e.z = l.axes.y.right.z;\n          m = l.axes.y.right.xDir;\n          m = {\n            x: m.z,\n            y: m.y,\n            z: -m.x\n          };\n        } else {\n          if (null === l.axes.y.left) return {};\n          d = e.x - m;\n          e.x = l.axes.y.left.x;\n          e.z = l.axes.y.left.z;\n          m = l.axes.y.left.xDir;\n        }\n        \"chart\" !== q && (\"flap\" === q ? a.horiz ? (f = Math.sin(n), n = Math.cos(n), a.opposite && (f = -f), g && (f = -f), r = {\n          x: m.z * f,\n          y: n,\n          z: -m.x * f\n        }) : m = {\n          x: Math.cos(f),\n          y: 0,\n          z: Math.sin(f)\n        } : \"ortho\" === q ? a.horiz ? (r = Math.cos(n), q = Math.sin(f) * r, n = -Math.sin(n), f = -r * Math.cos(f), r = {\n          x: m.y * f - m.z * n,\n          y: m.z * q - m.x * f,\n          z: m.x * n - m.y * q\n        }, n = 1 / Math.sqrt(r.x * r.x + r.y * r.y + r.z * r.z), g && (n = -n), r = {\n          x: n * r.x,\n          y: n * r.y,\n          z: n * r.z\n        }) : m = {\n          x: Math.cos(f),\n          y: 0,\n          z: Math.sin(f)\n        } : a.horiz ? r = {\n          x: Math.sin(f) * Math.sin(n),\n          y: Math.cos(n),\n          z: -Math.cos(f) * Math.sin(n)\n        } : m = {\n          x: Math.cos(f),\n          y: 0,\n          z: Math.sin(f)\n        });\n        e.x += d * m.x + h * r.x;\n        e.y += d * m.y + h * r.y;\n        e.z += d * m.z + h * r.z;\n        d = v([e], a.chart)[0];\n        c && (0 > k(v([e, {\n          x: e.x + m.x,\n          y: e.y + m.y,\n          z: e.z + m.z\n        }, {\n          x: e.x + r.x,\n          y: e.y + r.y,\n          z: e.z + r.z\n        }], a.chart)) && (m = {\n          x: -m.x,\n          y: -m.y,\n          z: -m.z\n        }), e = v([{\n          x: e.x,\n          y: e.y,\n          z: e.z\n        }, {\n          x: e.x + m.x,\n          y: e.y + m.y,\n          z: e.z + m.z\n        }, {\n          x: e.x + r.x,\n          y: e.y + r.y,\n          z: e.z + r.z\n        }], a.chart), d.matrix = [e[1].x - e[0].x, e[1].y - e[0].y, e[2].x - e[0].x, e[2].y - e[0].y, d.x, d.y], d.matrix[4] -= d.x * d.matrix[0] + d.y * d.matrix[2], d.matrix[5] -= d.x * d.matrix[1] + d.y * d.matrix[3]);\n        return d;\n      };\n\n      c.prototype.swapZ = function (b, a) {\n        var e = this.axis;\n        return e.isZAxis ? (a = a ? 0 : e.chart.plotLeft, {\n          x: a + b.z,\n          y: b.y,\n          z: b.x - a\n        }) : b;\n      };\n\n      return c;\n    }();\n\n    return function () {\n      function a() {}\n\n      a.compose = function (b) {\n        c(!0, b.defaultOptions, a.defaultOptions);\n        b.keepProps.push(\"axis3D\");\n        d(b, \"init\", a.onInit);\n        d(b, \"afterSetOptions\", a.onAfterSetOptions);\n        d(b, \"drawCrosshair\", a.onDrawCrosshair);\n        b = b.prototype;\n        l(b, \"getLinePath\", a.wrapGetLinePath);\n        l(b, \"getPlotBandPath\", a.wrapGetPlotBandPath);\n        l(b, \"getPlotLinePath\", a.wrapGetPlotLinePath);\n        l(b, \"getSlotWidth\", a.wrapGetSlotWidth);\n        l(b, \"getTitlePosition\", a.wrapGetTitlePosition);\n        D.compose(t);\n      };\n\n      a.onAfterSetOptions = function () {\n        var a = this.chart,\n            c = this.options;\n        a.is3d && a.is3d() && \"colorAxis\" !== this.coll && (c.tickWidth = b(c.tickWidth, 0), c.gridLineWidth = b(c.gridLineWidth, 1));\n      };\n\n      a.onDrawCrosshair = function (b) {\n        this.chart.is3d() && \"colorAxis\" !== this.coll && b.point && (b.point.crosshairPos = this.isXAxis ? b.point.axisXpos : this.len - b.point.axisYpos);\n      };\n\n      a.onInit = function () {\n        this.axis3D || (this.axis3D = new q(this));\n      };\n\n      a.wrapGetLinePath = function (b) {\n        return this.chart.is3d() && \"colorAxis\" !== this.coll ? [] : b.apply(this, [].slice.call(arguments, 1));\n      };\n\n      a.wrapGetPlotBandPath = function (b) {\n        if (!this.chart.is3d() || \"colorAxis\" === this.coll) return b.apply(this, [].slice.call(arguments, 1));\n        var a = arguments,\n            c = a[2],\n            e = [];\n        a = this.getPlotLinePath({\n          value: a[1]\n        });\n        c = this.getPlotLinePath({\n          value: c\n        });\n        if (a && c) for (var d = 0; d < a.length; d += 2) {\n          var f = a[d],\n              l = a[d + 1],\n              k = c[d],\n              m = c[d + 1];\n          \"M\" === f[0] && \"L\" === l[0] && \"M\" === k[0] && \"L\" === m[0] && e.push(f, l, m, [\"L\", k[1], k[2]], [\"Z\"]);\n        }\n        return e;\n      };\n\n      a.wrapGetPlotLinePath = function (b) {\n        var a = this.axis3D,\n            c = this.chart,\n            e = b.apply(this, [].slice.call(arguments, 1));\n        if (\"colorAxis\" === this.coll || !c.chart3d || !c.is3d() || null === e) return e;\n        var d = c.options.chart.options3d,\n            f = this.isZAxis ? c.plotWidth : d.depth;\n        d = c.chart3d.frame3d;\n        var l = e[0],\n            k = e[1];\n        e = [];\n        \"M\" === l[0] && \"L\" === k[0] && (a = [a.swapZ({\n          x: l[1],\n          y: l[2],\n          z: 0\n        }), a.swapZ({\n          x: l[1],\n          y: l[2],\n          z: f\n        }), a.swapZ({\n          x: k[1],\n          y: k[2],\n          z: 0\n        }), a.swapZ({\n          x: k[1],\n          y: k[2],\n          z: f\n        })], this.horiz ? (this.isZAxis ? (d.left.visible && e.push(a[0], a[2]), d.right.visible && e.push(a[1], a[3])) : (d.front.visible && e.push(a[0], a[2]), d.back.visible && e.push(a[1], a[3])), d.top.visible && e.push(a[0], a[1]), d.bottom.visible && e.push(a[2], a[3])) : (d.front.visible && e.push(a[0], a[2]), d.back.visible && e.push(a[1], a[3]), d.left.visible && e.push(a[0], a[1]), d.right.visible && e.push(a[2], a[3])), e = v(e, this.chart, !1));\n        return c.renderer.toLineSegments(e);\n      };\n\n      a.wrapGetSlotWidth = function (a, c) {\n        var e = this.chart,\n            d = this.ticks,\n            f = this.gridGroup;\n\n        if (this.categories && e.frameShapes && e.is3d() && f && c && c.label) {\n          f = f.element.childNodes[0].getBBox();\n          var n = e.frameShapes.left.getBBox(),\n              l = e.options.chart.options3d;\n          e = {\n            x: e.plotWidth / 2,\n            y: e.plotHeight / 2,\n            z: l.depth / 2,\n            vd: b(l.depth, 1) * b(l.viewDistance, 0)\n          };\n          l = c.pos;\n          var k = d[l - 1],\n              m = d[l + 1],\n              q = d = void 0;\n          0 !== l && k && k.label && k.label.xy && (d = x({\n            x: k.label.xy.x,\n            y: k.label.xy.y,\n            z: null\n          }, e, e.vd));\n          m && m.label && m.label.xy && (q = x({\n            x: m.label.xy.x,\n            y: m.label.xy.y,\n            z: null\n          }, e, e.vd));\n          l = {\n            x: c.label.xy.x,\n            y: c.label.xy.y,\n            z: null\n          };\n          l = x(l, e, e.vd);\n          return Math.abs(d ? l.x - d.x : q ? q.x - l.x : f.x - n.x);\n        }\n\n        return a.apply(this, [].slice.call(arguments, 1));\n      };\n\n      a.wrapGetTitlePosition = function (b) {\n        var a = b.apply(this, [].slice.call(arguments, 1));\n        return this.axis3D ? this.axis3D.fix3dPosition(a, !0) : a;\n      };\n\n      a.defaultOptions = {\n        labels: {\n          position3d: \"offset\",\n          skew3d: !1\n        },\n        title: {\n          position3d: null,\n          skew3d: null\n        }\n      };\n      return a;\n    }();\n  });\n  E(a, \"Core/Series/Series3D.js\", [a[\"Extensions/Math3D.js\"], a[\"Core/Series/Series.js\"], a[\"Core/Utilities.js\"]], function (a, w, t) {\n    var F = this && this.__extends || function () {\n      var a = function (c, b) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (b, a) {\n          b.__proto__ = a;\n        } || function (b, a) {\n          for (var c in a) a.hasOwnProperty(c) && (b[c] = a[c]);\n        };\n\n        return a(c, b);\n      };\n\n      return function (c, b) {\n        function d() {\n          this.constructor = c;\n        }\n\n        a(c, b);\n        c.prototype = null === b ? Object.create(b) : (d.prototype = b.prototype, new d());\n      };\n    }(),\n        f = a.perspective;\n\n    a = t.addEvent;\n    var z = t.extend,\n        v = t.merge,\n        x = t.pick,\n        k = t.isNumber;\n\n    t = function (a) {\n      function c() {\n        return null !== a && a.apply(this, arguments) || this;\n      }\n\n      F(c, a);\n\n      c.prototype.translate = function () {\n        a.prototype.translate.apply(this, arguments);\n        this.chart.is3d() && this.translate3dPoints();\n      };\n\n      c.prototype.translate3dPoints = function () {\n        var b = this.options,\n            a = this.chart,\n            c = x(this.zAxis, a.options.zAxis[0]),\n            d = [],\n            e,\n            n = [];\n        this.zPadding = (b.stacking ? k(b.stack) ? b.stack : 0 : this.index || 0) * (b.depth || 0 + (b.groupZPadding || 1));\n\n        for (e = 0; e < this.data.length; e++) {\n          b = this.data[e];\n\n          if (c && c.translate) {\n            var u = c.logarithmic && c.val2lin ? c.val2lin(b.z) : b.z;\n            b.plotZ = c.translate(u);\n            b.isInside = b.isInside ? u >= c.min && u <= c.max : !1;\n          } else b.plotZ = this.zPadding;\n\n          b.axisXpos = b.plotX;\n          b.axisYpos = b.plotY;\n          b.axisZpos = b.plotZ;\n          d.push({\n            x: b.plotX,\n            y: b.plotY,\n            z: b.plotZ\n          });\n          n.push(b.plotX || 0);\n        }\n\n        this.rawPointsX = n;\n        a = f(d, a, !0);\n\n        for (e = 0; e < this.data.length; e++) b = this.data[e], c = a[e], b.plotX = c.x, b.plotY = c.y, b.plotZ = c.z;\n      };\n\n      c.defaultOptions = v(w.defaultOptions);\n      return c;\n    }(w);\n\n    a(w, \"afterTranslate\", function () {\n      this.chart.is3d() && this.translate3dPoints();\n    });\n    z(w.prototype, {\n      translate3dPoints: t.prototype.translate3dPoints\n    });\n    return t;\n  });\n  E(a, \"Series/Column3D/Column3DComposition.js\", [a[\"Series/Column/ColumnSeries.js\"], a[\"Core/Globals.js\"], a[\"Core/Series/Series.js\"], a[\"Extensions/Math3D.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Extensions/Stacking.js\"], a[\"Core/Utilities.js\"]], function (a, w, t, D, f, z, v) {\n    function x(b, a) {\n      var c = b.series,\n          e = {\n        totalStacks: 0\n      },\n          d,\n          f = 1;\n      c.forEach(function (b) {\n        d = A(b.options.stack, a ? 0 : c.length - 1 - b.index);\n        e[d] ? e[d].series.push(b) : (e[d] = {\n          series: [b],\n          position: f\n        }, f++);\n      });\n      e.totalStacks = f + 1;\n      return e;\n    }\n\n    function k(b) {\n      var a = b.apply(this, [].slice.call(arguments, 1));\n      this.chart.is3d && this.chart.is3d() && (a.stroke = this.options.edgeColor || a.fill, a[\"stroke-width\"] = A(this.options.edgeWidth, 1));\n      return a;\n    }\n\n    function d(b, a, c) {\n      var e = this.chart.is3d && this.chart.is3d();\n      e && (this.options.inactiveOtherPoints = !0);\n      b.call(this, a, c);\n      e && (this.options.inactiveOtherPoints = !1);\n    }\n\n    function c(b) {\n      for (var a = [], c = 1; c < arguments.length; c++) a[c - 1] = arguments[c];\n\n      return this.series.chart.is3d() ? this.graphic && \"g\" !== this.graphic.element.nodeName : b.apply(this, a);\n    }\n\n    var b = a.prototype,\n        l = w.svg,\n        q = D.perspective;\n    w = v.addEvent;\n    var A = v.pick;\n    v = v.wrap;\n    v(b, \"translate\", function (b) {\n      b.apply(this, [].slice.call(arguments, 1));\n      this.chart.is3d() && this.translate3dShapes();\n    });\n    v(t.prototype, \"justifyDataLabel\", function (b) {\n      return arguments[2].outside3dPlot ? !1 : b.apply(this, [].slice.call(arguments, 1));\n    });\n\n    b.translate3dPoints = function () {};\n\n    b.translate3dShapes = function () {\n      var b = this,\n          a = b.chart,\n          c = b.options,\n          d = c.depth,\n          f = (c.stacking ? c.stack || 0 : b.index) * (d + (c.groupZPadding || 1)),\n          k = b.borderWidth % 2 ? .5 : 0,\n          l;\n      a.inverted && !b.yAxis.reversed && (k *= -1);\n      !1 !== c.grouping && (f = 0);\n      f += c.groupZPadding || 1;\n      b.data.forEach(function (c) {\n        c.outside3dPlot = null;\n\n        if (null !== c.y) {\n          var e = c.shapeArgs,\n              n = c.tooltipPos,\n              p;\n          [[\"x\", \"width\"], [\"y\", \"height\"]].forEach(function (a) {\n            p = e[a[0]] - k;\n            0 > p && (e[a[1]] += e[a[0]] + k, e[a[0]] = -k, p = 0);\n            p + e[a[1]] > b[a[0] + \"Axis\"].len && 0 !== e[a[1]] && (e[a[1]] = b[a[0] + \"Axis\"].len - e[a[0]]);\n\n            if (0 !== e[a[1]] && (e[a[0]] >= b[a[0] + \"Axis\"].len || e[a[0]] + e[a[1]] <= k)) {\n              for (var d in e) e[d] = \"y\" === d ? -9999 : 0;\n\n              c.outside3dPlot = !0;\n            }\n          });\n          \"rect\" === c.shapeType && (c.shapeType = \"cuboid\");\n          e.z = f;\n          e.depth = d;\n          e.insidePlotArea = !0;\n          l = {\n            x: e.x + e.width / 2,\n            y: e.y,\n            z: f + d / 2\n          };\n          a.inverted && (l.x = e.height, l.y = c.clientX);\n          c.plot3d = q([l], a, !0, !1)[0];\n          n = q([{\n            x: n[0],\n            y: n[1],\n            z: f + d / 2\n          }], a, !0, !1)[0];\n          c.tooltipPos = [n.x, n.y];\n        }\n      });\n      b.z = f;\n    };\n\n    v(b, \"animate\", function (b) {\n      if (this.chart.is3d()) {\n        var a = arguments[1],\n            c = this.yAxis,\n            e = this,\n            d = this.yAxis.reversed;\n        l && (a ? e.data.forEach(function (b) {\n          null !== b.y && (b.height = b.shapeArgs.height, b.shapey = b.shapeArgs.y, b.shapeArgs.height = 1, d || (b.shapeArgs.y = b.stackY ? b.plotY + c.translate(b.stackY) : b.plotY + (b.negative ? -b.height : b.height)));\n        }) : (e.data.forEach(function (b) {\n          if (null !== b.y && (b.shapeArgs.height = b.height, b.shapeArgs.y = b.shapey, b.graphic)) b.graphic[b.outside3dPlot ? \"attr\" : \"animate\"](b.shapeArgs, e.options.animation);\n        }), this.drawDataLabels()));\n      } else b.apply(this, [].slice.call(arguments, 1));\n    });\n    v(b, \"plotGroup\", function (b, a, c, d, f, k) {\n      \"dataLabelsGroup\" !== a && this.chart.is3d() && (this[a] && delete this[a], k && (this.chart.columnGroup || (this.chart.columnGroup = this.chart.renderer.g(\"columnGroup\").add(k)), this[a] = this.chart.columnGroup, this.chart.columnGroup.attr(this.getPlotBox()), this[a].survive = !0, \"group\" === a || \"markerGroup\" === a)) && (arguments[3] = \"visible\");\n      return b.apply(this, Array.prototype.slice.call(arguments, 1));\n    });\n    v(b, \"setVisible\", function (b, a) {\n      var c = this;\n      c.chart.is3d() && c.data.forEach(function (b) {\n        b.visible = b.options.visible = a = \"undefined\" === typeof a ? !A(c.visible, b.visible) : a;\n        c.options.data[c.data.indexOf(b)] = b.options;\n        b.graphic && b.graphic.attr({\n          visibility: a ? \"visible\" : \"hidden\"\n        });\n      });\n      b.apply(this, Array.prototype.slice.call(arguments, 1));\n    });\n    w(a, \"afterInit\", function () {\n      if (this.chart.is3d()) {\n        var b = this.options,\n            a = b.grouping,\n            c = b.stacking,\n            d = this.yAxis.options.reversedStacks,\n            f = 0;\n\n        if (\"undefined\" === typeof a || a) {\n          a = x(this.chart, c);\n          f = b.stack || 0;\n\n          for (c = 0; c < a[f].series.length && a[f].series[c] !== this; c++);\n\n          f = 10 * (a.totalStacks - a[f].position) + (d ? c : -c);\n          this.xAxis.reversed || (f = 10 * a.totalStacks - f);\n        }\n\n        b.depth = b.depth || 25;\n        this.z = this.z || 0;\n        b.zIndex = f;\n      }\n    });\n    v(b, \"pointAttribs\", k);\n    v(b, \"setState\", d);\n    v(b.pointClass.prototype, \"hasNewShapeType\", c);\n    f.seriesTypes.columnRange && (w = f.seriesTypes.columnrange.prototype, v(w, \"pointAttribs\", k), v(w, \"setState\", d), v(w.pointClass.prototype, \"hasNewShapeType\", c), w.plotGroup = b.plotGroup, w.setVisible = b.setVisible);\n    v(t.prototype, \"alignDataLabel\", function (b, a, c, d, f) {\n      var e = this.chart;\n      d.outside3dPlot = a.outside3dPlot;\n\n      if (e.is3d() && this.is(\"column\")) {\n        var k = this.options,\n            l = A(d.inside, !!this.options.stacking),\n            m = e.options.chart.options3d,\n            p = a.pointWidth / 2 || 0;\n        k = {\n          x: f.x + p,\n          y: f.y,\n          z: this.z + k.depth / 2\n        };\n        e.inverted && (l && (f.width = 0, k.x += a.shapeArgs.height / 2), 90 <= m.alpha && 270 >= m.alpha && (k.y += a.shapeArgs.width));\n        k = q([k], e, !0, !1)[0];\n        f.x = k.x - p;\n        f.y = a.outside3dPlot ? -9E9 : k.y;\n      }\n\n      b.apply(this, [].slice.call(arguments, 1));\n    });\n    v(z.prototype, \"getStackBox\", function (b, a, c, d, k, l, t, v) {\n      var e = b.apply(this, [].slice.call(arguments, 1));\n\n      if (a.is3d() && c.base) {\n        var p = +c.base.split(\",\")[0],\n            n = a.series[p];\n        p = a.options.chart.options3d;\n        n && n instanceof f.seriesTypes.column && (n = {\n          x: e.x + (a.inverted ? t : l / 2),\n          y: e.y,\n          z: n.options.depth / 2\n        }, a.inverted && (e.width = 0, 90 <= p.alpha && 270 >= p.alpha && (n.y += l)), n = q([n], a, !0, !1)[0], e.x = n.x - l / 2, e.y = n.y);\n      }\n\n      return e;\n    });\n    \"\";\n    return a;\n  });\n  E(a, \"Series/Pie3D/Pie3DPoint.js\", [a[\"Core/Series/SeriesRegistry.js\"]], function (a) {\n    var w = this && this.__extends || function () {\n      var a = function (f, t) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (a, f) {\n          a.__proto__ = f;\n        } || function (a, f) {\n          for (var k in f) f.hasOwnProperty(k) && (a[k] = f[k]);\n        };\n\n        return a(f, t);\n      };\n\n      return function (f, t) {\n        function v() {\n          this.constructor = f;\n        }\n\n        a(f, t);\n        f.prototype = null === t ? Object.create(t) : (v.prototype = t.prototype, new v());\n      };\n    }();\n\n    a = a.seriesTypes.pie.prototype.pointClass;\n    var t = a.prototype.haloPath;\n    return function (a) {\n      function f() {\n        var f = null !== a && a.apply(this, arguments) || this;\n        f.series = void 0;\n        return f;\n      }\n\n      w(f, a);\n\n      f.prototype.haloPath = function () {\n        return this.series.chart.is3d() ? [] : t.apply(this, arguments);\n      };\n\n      return f;\n    }(a);\n  });\n  E(a, \"Series/Pie3D/Pie3DSeries.js\", [a[\"Core/Globals.js\"], a[\"Series/Pie3D/Pie3DPoint.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, w, t, D) {\n    var f = this && this.__extends || function () {\n      var a = function (d, c) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (b, a) {\n          b.__proto__ = a;\n        } || function (b, a) {\n          for (var c in a) a.hasOwnProperty(c) && (b[c] = a[c]);\n        };\n\n        return a(d, c);\n      };\n\n      return function (d, c) {\n        function b() {\n          this.constructor = d;\n        }\n\n        a(d, c);\n        d.prototype = null === c ? Object.create(c) : (b.prototype = c.prototype, new b());\n      };\n    }(),\n        z = a.deg2rad,\n        v = a.svg;\n\n    a = D.extend;\n    var x = D.pick;\n\n    t = function (a) {\n      function d() {\n        return null !== a && a.apply(this, arguments) || this;\n      }\n\n      f(d, a);\n\n      d.prototype.addPoint = function () {\n        a.prototype.addPoint.apply(this, arguments);\n        this.chart.is3d() && this.update(this.userOptions, !0);\n      };\n\n      d.prototype.animate = function (c) {\n        if (this.chart.is3d()) {\n          var b = this.options.animation;\n          var d = this.center;\n          var f = this.group,\n              k = this.markerGroup;\n          v && (!0 === b && (b = {}), c ? (f.oldtranslateX = x(f.oldtranslateX, f.translateX), f.oldtranslateY = x(f.oldtranslateY, f.translateY), d = {\n            translateX: d[0],\n            translateY: d[1],\n            scaleX: .001,\n            scaleY: .001\n          }, f.attr(d), k && (k.attrSetters = f.attrSetters, k.attr(d))) : (d = {\n            translateX: f.oldtranslateX,\n            translateY: f.oldtranslateY,\n            scaleX: 1,\n            scaleY: 1\n          }, f.animate(d, b), k && k.animate(d, b)));\n        } else a.prototype.animate.apply(this, arguments);\n      };\n\n      d.prototype.drawDataLabels = function () {\n        if (this.chart.is3d()) {\n          var c = this.chart.options.chart.options3d;\n          this.data.forEach(function (b) {\n            var a = b.shapeArgs,\n                d = a.r,\n                f = (a.start + a.end) / 2;\n            b = b.labelPosition;\n            var e = b.connectorPosition,\n                k = -d * (1 - Math.cos((a.alpha || c.alpha) * z)) * Math.sin(f),\n                t = d * (Math.cos((a.beta || c.beta) * z) - 1) * Math.cos(f);\n            [b.natural, e.breakAt, e.touchingSliceAt].forEach(function (b) {\n              b.x += t;\n              b.y += k;\n            });\n          });\n        }\n\n        a.prototype.drawDataLabels.apply(this, arguments);\n      };\n\n      d.prototype.pointAttribs = function (c) {\n        var b = a.prototype.pointAttribs.apply(this, arguments),\n            d = this.options;\n        this.chart.is3d() && !this.chart.styledMode && (b.stroke = d.edgeColor || c.color || this.color, b[\"stroke-width\"] = x(d.edgeWidth, 1));\n        return b;\n      };\n\n      d.prototype.translate = function () {\n        a.prototype.translate.apply(this, arguments);\n\n        if (this.chart.is3d()) {\n          var c = this,\n              b = c.options,\n              d = b.depth || 0,\n              f = c.chart.options.chart.options3d,\n              k = f.alpha,\n              e = f.beta,\n              n = b.stacking ? (b.stack || 0) * d : c._i * d;\n          n += d / 2;\n          !1 !== b.grouping && (n = 0);\n          c.data.forEach(function (a) {\n            var f = a.shapeArgs;\n            a.shapeType = \"arc3d\";\n            f.z = n;\n            f.depth = .75 * d;\n            f.alpha = k;\n            f.beta = e;\n            f.center = c.center;\n            f = (f.end + f.start) / 2;\n            a.slicedTranslation = {\n              translateX: Math.round(Math.cos(f) * b.slicedOffset * Math.cos(k * z)),\n              translateY: Math.round(Math.sin(f) * b.slicedOffset * Math.cos(k * z))\n            };\n          });\n        }\n      };\n\n      d.prototype.drawTracker = function () {\n        a.prototype.drawTracker.apply(this, arguments);\n        this.chart.is3d() && this.points.forEach(function (a) {\n          a.graphic && [\"out\", \"inn\", \"side1\", \"side2\"].forEach(function (b) {\n            a.graphic && (a.graphic[b].element.point = a);\n          });\n        });\n      };\n\n      return d;\n    }(t.seriesTypes.pie);\n\n    a(t.prototype, {\n      pointClass: w\n    });\n    \"\";\n    return t;\n  });\n  E(a, \"Series/Pie3D/Pie3DComposition.js\", [a[\"Series/Pie3D/Pie3DPoint.js\"], a[\"Series/Pie3D/Pie3DSeries.js\"], a[\"Core/Series/SeriesRegistry.js\"]], function (a, w, t) {\n    t.seriesTypes.pie.prototype.pointClass.prototype.haloPath = a.prototype.haloPath;\n    t.seriesTypes.pie = w;\n  });\n  E(a, \"Series/Scatter3D/Scatter3DPoint.js\", [a[\"Series/Scatter/ScatterSeries.js\"], a[\"Core/Utilities.js\"]], function (a, w) {\n    var t = this && this.__extends || function () {\n      var a = function (f, t) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (a, f) {\n          a.__proto__ = f;\n        } || function (a, f) {\n          for (var d in f) f.hasOwnProperty(d) && (a[d] = f[d]);\n        };\n\n        return a(f, t);\n      };\n\n      return function (f, t) {\n        function v() {\n          this.constructor = f;\n        }\n\n        a(f, t);\n        f.prototype = null === t ? Object.create(t) : (v.prototype = t.prototype, new v());\n      };\n    }(),\n        F = w.defined;\n\n    return function (a) {\n      function f() {\n        var f = null !== a && a.apply(this, arguments) || this;\n        f.options = void 0;\n        f.series = void 0;\n        return f;\n      }\n\n      t(f, a);\n\n      f.prototype.applyOptions = function () {\n        a.prototype.applyOptions.apply(this, arguments);\n        F(this.z) || (this.z = 0);\n        return this;\n      };\n\n      return f;\n    }(a.prototype.pointClass);\n  });\n  E(a, \"Series/Scatter3D/Scatter3DSeries.js\", [a[\"Extensions/Math3D.js\"], a[\"Series/Scatter3D/Scatter3DPoint.js\"], a[\"Series/Scatter/ScatterSeries.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, w, t, D, f) {\n    var z = this && this.__extends || function () {\n      var a = function (d, c) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (a, c) {\n          a.__proto__ = c;\n        } || function (a, c) {\n          for (var b in c) c.hasOwnProperty(b) && (a[b] = c[b]);\n        };\n\n        return a(d, c);\n      };\n\n      return function (d, c) {\n        function b() {\n          this.constructor = d;\n        }\n\n        a(d, c);\n        d.prototype = null === c ? Object.create(c) : (b.prototype = c.prototype, new b());\n      };\n    }(),\n        v = a.pointCameraDistance;\n\n    a = f.extend;\n    var x = f.merge;\n\n    f = function (a) {\n      function d() {\n        var c = null !== a && a.apply(this, arguments) || this;\n        c.data = void 0;\n        c.options = void 0;\n        c.points = void 0;\n        return c;\n      }\n\n      z(d, a);\n\n      d.prototype.pointAttribs = function (c) {\n        var b = a.prototype.pointAttribs.apply(this, arguments);\n        this.chart.is3d() && c && (b.zIndex = v(c, this.chart));\n        return b;\n      };\n\n      d.defaultOptions = x(t.defaultOptions, {\n        tooltip: {\n          pointFormat: \"x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>\"\n        }\n      });\n      return d;\n    }(t);\n\n    a(f.prototype, {\n      axisTypes: [\"xAxis\", \"yAxis\", \"zAxis\"],\n      directTouch: !0,\n      parallelArrays: [\"x\", \"y\", \"z\"],\n      pointArrayMap: [\"x\", \"y\", \"z\"],\n      pointClass: w\n    });\n    D.registerSeriesType(\"scatter3d\", f);\n    \"\";\n    return f;\n  });\n  E(a, \"Series/Area3DSeries.js\", [a[\"Extensions/Math3D.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, w, t) {\n    var F = a.perspective;\n    a = w.seriesTypes;\n    var f = a.line,\n        z = t.pick;\n    t = t.wrap;\n    t(a.area.prototype, \"getGraphPath\", function (a) {\n      var t = a.apply(this, [].slice.call(arguments, 1));\n      if (!this.chart.is3d()) return t;\n      var k = f.prototype.getGraphPath,\n          d = this.options;\n      var c = [];\n      var b = [],\n          l = z(d.connectNulls, \"percent\" === d.stacking),\n          q = Math.round(this.yAxis.getThreshold(d.threshold));\n      if (this.rawPointsX) for (var v = 0; v < this.points.length; v++) c.push({\n        x: this.rawPointsX[v],\n        y: d.stacking ? this.points[v].yBottom : q,\n        z: this.zPadding\n      });\n      d = this.chart.options.chart.options3d;\n      c = F(c, this.chart, !0).map(function (a) {\n        return {\n          plotX: a.x,\n          plotY: a.y,\n          plotZ: a.z\n        };\n      });\n      this.group && d && d.depth && d.beta && (this.markerGroup && (this.markerGroup.add(this.group), this.markerGroup.attr({\n        translateX: 0,\n        translateY: 0\n      })), this.group.attr({\n        zIndex: Math.max(1, 270 < d.beta || 90 > d.beta ? d.depth - Math.round(this.zPadding || 0) : Math.round(this.zPadding || 0))\n      }));\n      c.reversed = !0;\n      c = k.call(this, c, !0, !0);\n      c[0] && \"M\" === c[0][0] && (c[0] = [\"L\", c[0][1], c[0][2]]);\n      this.areaPath && (c = this.areaPath.splice(0, this.areaPath.length / 2).concat(c), c.xMap = this.areaPath.xMap, this.areaPath = c, k.call(this, b, !1, l));\n      return t;\n    });\n  });\n  E(a, \"masters/highcharts-3d.src.js\", [a[\"Core/Globals.js\"], a[\"Core/Renderer/SVG/SVGRenderer3D.js\"], a[\"Core/Chart/Chart3D.js\"], a[\"Core/Axis/ZAxis.js\"], a[\"Core/Axis/Axis3D.js\"]], function (a, w, t, D, f) {\n    w.compose(a.SVGRenderer);\n    t.compose(a.Chart, a.Fx);\n    D.ZChartComposition.compose(a.Chart);\n    f.compose(a.Axis);\n  });\n});","map":{"version":3,"mappings":"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","names":["factory","module","define","Highcharts","undefined","_registerModule","obj","path","args","fn","CustomEvent","window","detail","_modules","H","U","perspective3D","coordinate","origin","distance","projection","Number","x","y","perspective","points","chart","insidePlotArea","useInvertedPersp","options3d","inverted","pick","z","vd","scale","beta","deg2rad","alpha","Math","p","l","C","point","b","c","cosB","sinB","sinA","cosA","rotated","pointCameraDistance","coordinates","f","shapeArea","vertexes","area","i","j","shapeArea3D","mathModule","Color","SVGElement","color","defined","merge","objectEach","SVGElement3D","base","initArgs","elem3d","renderer","paths","zIndexes","part","attribs","zIndex","singleSetterForParts","prop","val","values","verb","duration","complete","newAttr","optionsToApply","hasZIndexes","partVal","processParts","apply","props","partsProps","destroyParts","parts","pathType","attr","continueAnimation","key","animate","forcedSides","fillSetter","fill","front","top","indexOf","side","A","Math3D","SVGRenderer","__extends","extendStatics","d","Object","__proto__","Array","__","animObject","charts","extend","cos","sin","PI","dFactor","_super","SVGRenderer3D","arguments","SVGRenderer3D.compose","SVGRendererClass","svgRendererProto","svgRenderer3dProto","SVGRenderer3D.curveTo","cx","cy","rx","ry","start","end","dx","dy","result","arcAngle","SVGRenderer3D.prototype.toLinePath","closed","SVGRenderer3D.prototype.toLineSegments","m","SVGRenderer3D.prototype.face3d","ret","ret.attr","hash","vertexes2d","ret.animate","params","visibility","SVGRenderer3D.prototype.polyhedron","destroy","result.destroy","result.attr","result.animate","SVGRenderer3D.prototype.element3d","type","shapeArgs","SVGRenderer3D.prototype.cuboid","SVGRenderer3D.prototype.cuboidPath","mapSidePath","h","pArr","mapPath","w","pickShape","verticesIndex1","verticesIndex2","face1","face2","dummyFace1","dummyFace2","back","path1","shape","bottom","path2","right","left","path3","isRight","incrementX","incrementY","isTop","isFront","incrementZ","group","SVGRenderer3D.prototype.arc3d","suckOutCustom","hasCA","ca","customAttribs","wrapper","wrapper.onAdd","parent","className","forEach","face","wrapper.setPaths","wrapper.fillSetter","value","darker","setter","el","wrapper.attr","paramArr","wrapper.animate","animation","from","randomProp","anim","anim.step","a","fx","interpolate","to","r","innerR","depth","wrapper.destroy","wrapper.hide","wrapper.show","inherit","inn","SVGRenderer3D.prototype.arc3dPath","toZeroPIRange","angle","ir","cs","ss","ce","se","irx","iry","push","start2","end2","midEnd","out","side1","side2","angleCorr","angleEnd","angleStart","angleMid","a1","incPrecision","a2","a3","zTop","zOut","zInn","zSide1","zSide2","D","genericDefaultOptions","addEvent","isArray","wrap","Chart3D","onAddSeries","e","onAfterDrawChartBox","options","frame","chart3d","get3dFrame","xm","plotLeft","xp","plotWidth","ym","plotTop","yp","plotHeight","zp","xmm","xpp","ymm","ypp","zmm","zm","zpp","hasRendered","frame3d","frameShapes","faces","enabled","onAfterGetContainer","name","slope","cfg","tagName","attributes","id","children","onAfterInit","s","onAfterSetChartSize","is3d","clipBox","margin","chartWidth","chartHeight","scale3d","getScale","onBeforeRedraw","onBeforeRender","onInit","Composition","wrapIsInsidePlot","proceed","wrapRenderSeries","series","wrapSetClassName","Composition.prototype.get3dFrame","frameOptions","faceOrientation","bottomOrientation","topOrientation","leftOrientation","rightOrientation","frontOrientation","backOrientation","defaultShowBottom","defaultShowTop","defaultShowLeft","defaultShowRight","axis","getFaceOptions","sources","defaultVisible","faceAttrs","isVisible","size","frontFacing","visible","axes","defaultShowBack","defaultShowFront","isValidEdge","yEdges","xDir","xBottomEdges","xTopEdges","zBottomEdges","zTopEdges","pickEdge","edges","mult","projections","best","Composition.prototype.getScale","plotRight","plotBottom","originX","originY","MAX_VALUE","u","q","corners","corner","minX","maxX","minY","maxY","fitToPlot","viewDistance","axisLabelPosition","compose","ChartClass","FxClass","chartProto","fxProto","chartProto.is3d","fxProto.matrixSetter","interpolated","Axis","splat","ZChart","ZChart.compose","collectionsWithUpdate","ZChart.onAfterGetAxes","zAxisOptions","axisOptions","ZChart.wrapAddZAxis","ZAxis","userOptions","_this","ZAxis.prototype.getSeriesExtremes","stacking","zData","ZAxis.prototype.setAxisSize","width","len","ZAxis.prototype.setOptions","offset","lineWidth","Tick3D","Tick3D.compose","TickClass","Tick3D.onAfterGetLabelPosition","axis3D","wrapGetMarkPath","Tick3D.wrapGetMarkPath","Tick","Axis3DAdditions","Axis3DAdditions.prototype.fix3dPosition","pos","isTitle","positionMode","skew","offsetY","offsetX","vecY","reverseFlap","vecX","cosa","n","projected","pointsProjected","Axis3DAdditions.prototype.swapZ","Axis3D","Axis3D.compose","AxisClass","axisProto","Axis3D.onAfterSetOptions","coll","Axis3D.onDrawCrosshair","isXAxis","Axis3D.onInit","Axis3D.wrapGetLinePath","Axis3D.wrapGetPlotBandPath","fromPath","toPath","fromStartSeg","fromEndSeg","toStartSeg","toEndSeg","Axis3D.wrapGetPlotLinePath","isZAxis","startSegment","endSegment","pathSegments","Axis3D.wrapGetSlotWidth","tick","ticks","gridGroup","categories","firstGridLine","frame3DLeft","origin_1","tickId","prevTick","nextTick","nextLabelPos","prevLabelPos","labelPos","Axis3D.wrapGetTitlePosition","labels","position3d","skew3d","title","Series","isNumber","Series3D","Series3D.prototype.translate","Series3D.prototype.translate3dPoints","seriesOptions","zAxis","rawPoints","rawPointsX","zPadding","index","data","length","rawPoint","zValue","projectedPoints","projectedPoint","translate3dPoints","ColumnSeries","SeriesRegistry","StackItem","retrieveStacks","stacks","totalStacks","stackNumber","position","pointAttribs","setState","state","hasNewShapeType","_i","columnProto","svg","columnProto.translate3dPoints","columnProto.translate3dShapes","borderCrisp","point2dPos","shapeArgs_1","tooltipPos","borderlessBase_1","dimensions","init","yAxis_1","series_1","reversed_1","_name","_visibility","_zIndex","vis","grouping","reversedStacks","stack","columnRangeProto","dataLabel","alignTo","inside","xOffset","dLPosition","stackItem","xWidth","stackBox","baseSeriesInd","split","columnSeries","PiePoint","superHaloPath","Pie3DPoint","Pie3DPoint.prototype.haloPath","Pie3DSeries","Pie3DSeries.prototype.addPoint","Pie3DSeries.prototype.animate","center","markerGroup","translateX","translateY","scaleX","scaleY","Pie3DSeries.prototype.drawDataLabels","options3d_1","labelPosition","connectorPosition","yOffset","Pie3DSeries.prototype.pointAttribs","Pie3DSeries.prototype.translate","Pie3DSeries.prototype.drawTracker","pointClass","ScatterSeries","Scatter3DPoint","Scatter3DPoint.prototype.applyOptions","Scatter3DSeries","Scatter3DSeries.prototype.pointAttribs","tooltip","pointFormat","axisTypes","directTouch","parallelArrays","pointArrayMap","_a","LineSeriesClass","prototype","svgPath","getGraphPath","bottomPoints","graphPoints","connectNulls","translatedThreshold","yAxis","getThreshold","i_1","yBottom","plotX","plotY","plotZ","add","bottomPath","areaPath","splice","concat","xMap","Chart","Fx"],"sources":["E:\\1\\2\\node_modules\\highcharts\\highcharts-3d.src.js"],"sourcesContent":["/**\n * @license Highcharts JS v10.1.0 (2022-04-29)\n *\n * 3D features for Highcharts JS\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/highcharts-3d', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/Math3D.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pick = U.pick;\n        // Mathematical Functionility\n        var deg2rad = H.deg2rad;\n        /* eslint-disable max-len */\n        /**\n         * Apply 3-D rotation\n         * Euler Angles (XYZ):\n         *     cosA = cos(Alfa|Roll)\n         *     cosB = cos(Beta|Pitch)\n         *     cosG = cos(Gamma|Yaw)\n         *\n         * Composite rotation:\n         * |          cosB * cosG             |           cosB * sinG            |    -sinB    |\n         * | sinA * sinB * cosG - cosA * sinG | sinA * sinB * sinG + cosA * cosG | sinA * cosB |\n         * | cosA * sinB * cosG + sinA * sinG | cosA * sinB * sinG - sinA * cosG | cosA * cosB |\n         *\n         * Now, Gamma/Yaw is not used (angle=0), so we assume cosG = 1 and sinG = 0, so\n         * we get:\n         * |     cosB    |   0    |   - sinB    |\n         * | sinA * sinB |  cosA  | sinA * cosB |\n         * | cosA * sinB | - sinA | cosA * cosB |\n         *\n         * But in browsers, y is reversed, so we get sinA => -sinA. The general result\n         * is:\n         * |      cosB     |   0    |    - sinB     |     | x |     | px |\n         * | - sinA * sinB |  cosA  | - sinA * cosB |  x  | y |  =  | py |\n         * |  cosA * sinB  |  sinA  |  cosA * cosB  |     | z |     | pz |\n         *\n         * @private\n         * @function rotate3D\n         */\n        /* eslint-enable max-len */\n        /**\n         * @private\n         * @param {number} x\n         *        X coordinate\n         * @param {number} y\n         *        Y coordinate\n         * @param {number} z\n         *        Z coordinate\n         * @param {Highcharts.Rotation3dObject} angles\n         *        Rotation angles\n         * @return {Highcharts.Rotation3dObject}\n         *         Rotated position\n         */\n        function rotate3D(x, y, z, angles) {\n            return {\n                x: angles.cosB * x - angles.sinB * z,\n                y: -angles.sinA * angles.sinB * x + angles.cosA * y -\n                    angles.cosB * angles.sinA * z,\n                z: angles.cosA * angles.sinB * x + angles.sinA * y +\n                    angles.cosA * angles.cosB * z\n            };\n        }\n        /**\n         * Perspective3D function is available in global Highcharts scope because is\n         * needed also outside of perspective() function (#8042).\n         * @private\n         * @function Highcharts.perspective3D\n         *\n         * @param {Highcharts.Position3DObject} coordinate\n         * 3D position\n         *\n         * @param {Highcharts.Position3DObject} origin\n         * 3D root position\n         *\n         * @param {number} distance\n         * Perspective distance\n         *\n         * @return {Highcharts.PositionObject}\n         * Perspective 3D Position\n         *\n         * @requires highcharts-3d\n         */\n        function perspective3D(coordinate, origin, distance) {\n            var projection = ((distance > 0) &&\n                    (distance < Number.POSITIVE_INFINITY)) ?\n                    distance / (coordinate.z + origin.z + distance) :\n                    1;\n            return {\n                x: coordinate.x * projection,\n                y: coordinate.y * projection\n            };\n        }\n        H.perspective3D = perspective3D;\n        /**\n         * Transforms a given array of points according to the angles in chart.options.\n         *\n         * @private\n         * @function Highcharts.perspective\n         *\n         * @param {Array<Highcharts.Position3DObject>} points\n         * The array of points\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @param {boolean} [useInvertedPersp]\n         * Whether to use inverted perspective in calculations\n         *\n         * @return {Array<Highcharts.Position3DObject>}\n         * An array of transformed points\n         *\n         * @requires highcharts-3d\n         */\n        function perspective(points, chart, insidePlotArea, useInvertedPersp) {\n            var options3d = chart.options.chart.options3d, \n                /* The useInvertedPersp argument is used for inverted charts with\n                 * already inverted elements,\n                such as dataLabels or tooltip positions.\n                 */\n                inverted = pick(useInvertedPersp,\n                insidePlotArea ? chart.inverted : false),\n                origin = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: options3d.depth / 2,\n                    vd: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0)\n                },\n                scale = chart.scale3d || 1,\n                beta = deg2rad * options3d.beta * (inverted ? -1 : 1),\n                alpha = deg2rad * options3d.alpha * (inverted ? -1 : 1),\n                angles = {\n                    cosA: Math.cos(alpha),\n                    cosB: Math.cos(-beta),\n                    sinA: Math.sin(alpha),\n                    sinB: Math.sin(-beta)\n                };\n            if (!insidePlotArea) {\n                origin.x += chart.plotLeft;\n                origin.y += chart.plotTop;\n            }\n            // Transform each point\n            return points.map(function (point) {\n                var rotated = rotate3D((inverted ? point.y : point.x) - origin.x, (inverted ? point.x : point.y) - origin.y, (point.z || 0) - origin.z,\n                    angles), \n                    // Apply perspective\n                    coordinate = perspective3D(rotated,\n                    origin,\n                    origin.vd);\n                // Apply translation\n                coordinate.x = coordinate.x * scale + origin.x;\n                coordinate.y = coordinate.y * scale + origin.y;\n                coordinate.z = rotated.z * scale + origin.z;\n                return {\n                    x: (inverted ? coordinate.y : coordinate.x),\n                    y: (inverted ? coordinate.x : coordinate.y),\n                    z: coordinate.z\n                };\n            });\n        }\n        H.perspective = perspective;\n        /**\n         * Calculate a distance from camera to points - made for calculating zIndex of\n         * scatter points.\n         *\n         * @private\n         * @function Highcharts.pointCameraDistance\n         *\n         * @param {Highcharts.Dictionary<number>} coordinates\n         * Coordinates of the specific point\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @return {number}\n         * Distance from camera to point\n         *\n         * @requires highcharts-3d\n         */\n        function pointCameraDistance(coordinates, chart) {\n            var options3d = chart.options.chart.options3d,\n                cameraPosition = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0) +\n                        options3d.depth\n                }, \n                // Added support for objects with plotX or x coordinates.\n                distance = Math.sqrt(Math.pow(cameraPosition.x - pick(coordinates.plotX,\n                coordinates.x), 2) +\n                    Math.pow(cameraPosition.y - pick(coordinates.plotY,\n                coordinates.y), 2) +\n                    Math.pow(cameraPosition.z - pick(coordinates.plotZ,\n                coordinates.z), 2));\n            return distance;\n        }\n        H.pointCameraDistance = pointCameraDistance;\n        /**\n         * Calculate area of a 2D polygon using Shoelace algorithm\n         * https://en.wikipedia.org/wiki/Shoelace_formula\n         *\n         * @private\n         * @function Highcharts.shapeArea\n         *\n         * @param {Array<Highcharts.PositionObject>} vertexes\n         * 2D Polygon\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea(vertexes) {\n            var area = 0,\n                i,\n                j;\n            for (i = 0; i < vertexes.length; i++) {\n                j = (i + 1) % vertexes.length;\n                area += vertexes[i].x * vertexes[j].y - vertexes[j].x * vertexes[i].y;\n            }\n            return area / 2;\n        }\n        H.shapeArea = shapeArea;\n        /**\n         * Calculate area of a 3D polygon after perspective projection\n         *\n         * @private\n         * @function Highcharts.shapeArea3d\n         *\n         * @param {Array<Highcharts.Position3DObject>} vertexes\n         * 3D Polygon\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea3D(vertexes, chart, insidePlotArea) {\n            return shapeArea(perspective(vertexes, chart, insidePlotArea));\n        }\n        H.shapeArea3d = shapeArea3D;\n        var mathModule = {\n                perspective: perspective,\n                perspective3D: perspective3D,\n                pointCameraDistance: pointCameraDistance,\n                shapeArea: shapeArea,\n                shapeArea3D: shapeArea3D\n            };\n\n        return mathModule;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGElement3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Color, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var defined = U.defined,\n            merge = U.merge,\n            objectEach = U.objectEach,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var SVGElement3D = {};\n        SVGElement3D.base = {\n            /* eslint-disable valid-jsdoc */\n            /**\n             * The init is used by base - renderer.Element\n             * @private\n             */\n            initArgs: function (args) {\n                var elem3d = this,\n                    renderer = elem3d.renderer,\n                    paths = renderer[elem3d.pathType + 'Path'](args),\n                    zIndexes = paths.zIndexes;\n                // build parts\n                elem3d.parts.forEach(function (part) {\n                    var attribs = {\n                            'class': 'highcharts-3d-' + part,\n                            zIndex: zIndexes[part] || 0\n                        };\n                    if (renderer.styledMode) {\n                        if (part === 'top') {\n                            attribs.filter = 'url(#highcharts-brighter)';\n                        }\n                        else if (part === 'side') {\n                            attribs.filter = 'url(#highcharts-darker)';\n                        }\n                    }\n                    elem3d[part] = renderer.path(paths[part])\n                        .attr(attribs)\n                        .add(elem3d);\n                });\n                elem3d.attr({\n                    'stroke-linejoin': 'round',\n                    zIndex: zIndexes.group\n                });\n                // store original destroy\n                elem3d.originalDestroy = elem3d.destroy;\n                elem3d.destroy = elem3d.destroyParts;\n                // Store information if any side of element was rendered by force.\n                elem3d.forcedSides = paths.forcedSides;\n            },\n            /**\n             * Single property setter that applies options to each part\n             * @private\n             */\n            singleSetterForParts: function (prop, val, values, verb, duration, complete) {\n                var elem3d = this,\n                    newAttr = {},\n                    optionsToApply = [null,\n                    null, (verb || 'attr'),\n                    duration,\n                    complete],\n                    hasZIndexes = values && values.zIndexes;\n                if (!values) {\n                    newAttr[prop] = val;\n                    optionsToApply[0] = newAttr;\n                }\n                else {\n                    // It is needed to deal with the whole group zIndexing\n                    // in case of graph rotation\n                    if (hasZIndexes && hasZIndexes.group) {\n                        this.attr({\n                            zIndex: hasZIndexes.group\n                        });\n                    }\n                    objectEach(values, function (partVal, part) {\n                        newAttr[part] = {};\n                        newAttr[part][prop] = partVal;\n                        // include zIndexes if provided\n                        if (hasZIndexes) {\n                            newAttr[part].zIndex = values.zIndexes[part] || 0;\n                        }\n                    });\n                    optionsToApply[1] = newAttr;\n                }\n                return elem3d.processParts.apply(elem3d, optionsToApply);\n            },\n            /**\n             * Calls function for each part. Used for attr, animate and destroy.\n             * @private\n             */\n            processParts: function (props, partsProps, verb, duration, complete) {\n                var elem3d = this;\n                elem3d.parts.forEach(function (part) {\n                    // if different props for different parts\n                    if (partsProps) {\n                        props = pick(partsProps[part], false);\n                    }\n                    // only if something to set, but allow undefined\n                    if (props !== false) {\n                        elem3d[part][verb](props, duration, complete);\n                    }\n                });\n                return elem3d;\n            },\n            /**\n             * Destroy all parts\n             * @private\n             */\n            destroyParts: function () {\n                this.processParts(null, null, 'destroy');\n                return this.originalDestroy();\n            }\n            /* eslint-enable valid-jsdoc */\n        };\n        SVGElement3D.cuboid = merge(SVGElement3D.base, {\n            parts: ['front', 'top', 'side'],\n            pathType: 'cuboid',\n            attr: function (args, val, complete, continueAnimation) {\n                // Resolve setting attributes by string name\n                if (typeof args === 'string' && typeof val !== 'undefined') {\n                    var key = args;\n                    args = {};\n                    args[key] = val;\n                }\n                if (args.shapeArgs || defined(args.x)) {\n                    return this.singleSetterForParts('d', null, this.renderer[this.pathType + 'Path'](args.shapeArgs || args));\n                }\n                return SVGElement.prototype.attr.call(this, args, void 0, complete, continueAnimation);\n            },\n            animate: function (args, duration, complete) {\n                if (defined(args.x) && defined(args.y)) {\n                    var paths = this.renderer[this.pathType + 'Path'](args),\n                        forcedSides = paths.forcedSides;\n                    this.singleSetterForParts('d', null, paths, 'animate', duration, complete);\n                    this.attr({\n                        zIndex: paths.zIndexes.group\n                    });\n                    // If sides that are forced to render changed, recalculate colors.\n                    if (forcedSides !== this.forcedSides) {\n                        this.forcedSides = forcedSides;\n                        if (!this.renderer.styledMode) {\n                            SVGElement3D.cuboid.fillSetter.call(this, this.fill);\n                        }\n                    }\n                }\n                else {\n                    SVGElement.prototype.animate.call(this, args, duration, complete);\n                }\n                return this;\n            },\n            fillSetter: function (fill) {\n                var elem3d = this;\n                elem3d.forcedSides = elem3d.forcedSides || [];\n                elem3d.singleSetterForParts('fill', null, {\n                    front: fill,\n                    // Do not change color if side was forced to render.\n                    top: color(fill).brighten(elem3d.forcedSides.indexOf('top') >= 0 ? 0 : 0.1).get(),\n                    side: color(fill).brighten(elem3d.forcedSides.indexOf('side') >= 0 ? 0 : -0.1).get()\n                });\n                // fill for animation getter (#6776)\n                elem3d.color = elem3d.fill = fill;\n                return elem3d;\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGElement3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGRenderer3D.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Extensions/Math3D.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Renderer/SVG/SVGElement3D.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (A, Color, H, Math3D, SVGElement, SVGElement3D, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var color = Color.parse;\n        var charts = H.charts,\n            deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            shapeArea = Math3D.shapeArea;\n        var defined = U.defined,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var cos = Math.cos,\n            sin = Math.sin,\n            PI = Math.PI,\n            dFactor = (4 * (Math.sqrt(2) - 1) / 3) / (PI / 2);\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var SVGRenderer3D = /** @class */ (function (_super) {\n                __extends(SVGRenderer3D, _super);\n            function SVGRenderer3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.compose = function (SVGRendererClass) {\n                var svgRendererProto = SVGRendererClass.prototype,\n                    svgRenderer3dProto = SVGRenderer3D.prototype;\n                svgRendererProto.elements3d = SVGElement3D;\n                svgRendererProto.arc3d = svgRenderer3dProto.arc3d;\n                svgRendererProto.arc3dPath = svgRenderer3dProto.arc3dPath;\n                svgRendererProto.cuboid = svgRenderer3dProto.cuboid;\n                svgRendererProto.cuboidPath = svgRenderer3dProto.cuboidPath;\n                svgRendererProto.element3d = svgRenderer3dProto.element3d;\n                svgRendererProto.face3d = svgRenderer3dProto.face3d;\n                svgRendererProto.polyhedron = svgRenderer3dProto.polyhedron;\n                svgRendererProto.toLinePath = svgRenderer3dProto.toLinePath;\n                svgRendererProto.toLineSegments = svgRenderer3dProto.toLineSegments;\n            };\n            /**\n             * Method to construct a curved path. Can 'wrap' around more then 180\n             * degrees.\n             * @private\n             */\n            SVGRenderer3D.curveTo = function (cx, cy, rx, ry, start, end, dx, dy) {\n                var result = [],\n                    arcAngle = end - start;\n                if ((end > start) && (end - start > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start + (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start + (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                if ((end < start) && (start - end > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start - (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start - (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                return [[\n                        'C',\n                        cx + (rx * Math.cos(start)) -\n                            ((rx * dFactor * arcAngle) * Math.sin(start)) + dx,\n                        cy + (ry * Math.sin(start)) +\n                            ((ry * dFactor * arcAngle) * Math.cos(start)) + dy,\n                        cx + (rx * Math.cos(end)) +\n                            ((rx * dFactor * arcAngle) * Math.sin(end)) + dx,\n                        cy + (ry * Math.sin(end)) -\n                            ((ry * dFactor * arcAngle) * Math.cos(end)) + dy,\n                        cx + (rx * Math.cos(end)) + dx,\n                        cy + (ry * Math.sin(end)) + dy\n                    ]];\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.prototype.toLinePath = function (points, closed) {\n                var result = [];\n                // Put \"L x y\" for each point\n                points.forEach(function (point) {\n                    result.push(['L', point.x, point.y]);\n                });\n                if (points.length) {\n                    // Set the first element to M\n                    result[0][0] = 'M';\n                    // If it is a closed line, add Z\n                    if (closed) {\n                        result.push(['Z']);\n                    }\n                }\n                return result;\n            };\n            /** @private */\n            SVGRenderer3D.prototype.toLineSegments = function (points) {\n                var result = [],\n                    m = true;\n                points.forEach(function (point) {\n                    result.push(m ? ['M', point.x, point.y] : ['L', point.x, point.y]);\n                    m = !m;\n                });\n                return result;\n            };\n            /**\n             * A 3-D Face is defined by it's 3D vertexes, and is only visible if it's\n             * vertexes are counter-clockwise (Back-face culling). It is used as a\n             * polyhedron Element.\n             * @private\n             */\n            SVGRenderer3D.prototype.face3d = function (args) {\n                var renderer = this,\n                    ret = this.createElement('path');\n                ret.vertexes = [];\n                ret.insidePlotArea = false;\n                ret.enabled = true;\n                /* eslint-disable no-invalid-this */\n                ret.attr = function (hash) {\n                    if (typeof hash === 'object' &&\n                        (defined(hash.enabled) ||\n                            defined(hash.vertexes) ||\n                            defined(hash.insidePlotArea))) {\n                        this.enabled = pick(hash.enabled, this.enabled);\n                        this.vertexes = pick(hash.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(hash.insidePlotArea, this.insidePlotArea);\n                        delete hash.enabled;\n                        delete hash.vertexes;\n                        delete hash.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d);\n                        hash.d = path;\n                        hash.visibility = (this.enabled && area > 0) ?\n                            'inherit' : 'hidden';\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                ret.animate = function (params) {\n                    if (typeof params === 'object' &&\n                        (defined(params.enabled) ||\n                            defined(params.vertexes) ||\n                            defined(params.insidePlotArea))) {\n                        this.enabled = pick(params.enabled, this.enabled);\n                        this.vertexes = pick(params.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(params.insidePlotArea, this.insidePlotArea);\n                        delete params.enabled;\n                        delete params.vertexes;\n                        delete params.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d),\n                            visibility = (this.enabled && area > 0) ?\n                                'visible' : 'hidden';\n                        params.d = path;\n                        this.attr('visibility', visibility);\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return ret.attr(args);\n            };\n            /**\n             * A Polyhedron is a handy way of defining a group of 3-D faces. It's only\n             * attribute is `faces`, an array of attributes of each one of it's Face3D\n             * instances.\n             * @private\n             */\n            SVGRenderer3D.prototype.polyhedron = function (args) {\n                var renderer = this,\n                    result = this.g(),\n                    destroy = result.destroy;\n                if (!this.styledMode) {\n                    result.attr({\n                        'stroke-linejoin': 'round'\n                    });\n                }\n                result.faces = [];\n                /* eslint-disable no-invalid-this */\n                // destroy all children\n                result.destroy = function () {\n                    for (var i = 0; i < result.faces.length; i++) {\n                        result.faces[i].destroy();\n                    }\n                    return destroy.call(this);\n                };\n                result.attr = function (hash, val, complete, continueAnimation) {\n                    if (typeof hash === 'object' && defined(hash.faces)) {\n                        while (result.faces.length > hash.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < hash.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < hash.faces.length; i++) {\n                            if (renderer.styledMode) {\n                                delete hash.faces[i].fill;\n                            }\n                            result.faces[i].attr(hash.faces[i], null, complete, continueAnimation);\n                        }\n                        delete hash.faces;\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                result.animate = function (params, duration, complete) {\n                    if (params && params.faces) {\n                        while (result.faces.length > params.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < params.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < params.faces.length; i++) {\n                            result.faces[i].animate(params.faces[i], duration, complete);\n                        }\n                        delete params.faces;\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return result.attr(args);\n            };\n            /**\n             * return result, generalization\n             * @private\n             * @requires highcharts-3d\n             */\n            SVGRenderer3D.prototype.element3d = function (type, shapeArgs) {\n                // base\n                var ret = this.g();\n                // extend\n                extend(ret, this.elements3d[type]);\n                // init\n                ret.initArgs(shapeArgs);\n                // return\n                return ret;\n            };\n            /**\n             * generelized, so now use simply\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboid = function (shapeArgs) {\n                return this.element3d('cuboid', shapeArgs);\n            };\n            /**\n             * Generates a cuboid path and zIndexes\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboidPath = function (shapeArgs) {\n                var x = shapeArgs.x || 0,\n                    y = shapeArgs.y || 0,\n                    z = shapeArgs.z || 0, \n                    // For side calculation (right/left)\n                    // there is a need for height (and other shapeArgs arguments)\n                    // to be at least 1px\n                    h = shapeArgs.height || 0,\n                    w = shapeArgs.width || 0,\n                    d = shapeArgs.depth || 0,\n                    chart = charts[this.chartIndex],\n                    front,\n                    back,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    shape,\n                    path1,\n                    path2,\n                    path3,\n                    isFront,\n                    isTop,\n                    isRight,\n                    options3d = chart.options.chart.options3d,\n                    alpha = options3d.alpha, \n                    // Priority for x axis is the biggest,\n                    // because of x direction has biggest influence on zIndex\n                    incrementX = 1000000, \n                    // y axis has the smallest priority in case of our charts\n                    // (needs to be set because of stacking)\n                    incrementY = 10,\n                    incrementZ = 100,\n                    zIndex = 0, \n                    // The 8 corners of the cube\n                    pArr = [{\n                            x: x,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z + d\n                        }, {\n                            x: x,\n                            y: y,\n                            z: z + d\n                        }],\n                    forcedSides = [],\n                    pickShape;\n                // apply perspective\n                pArr = perspective(pArr, chart, shapeArgs.insidePlotArea);\n                /**\n                 * helper method to decide which side is visible\n                 * @private\n                 */\n                function mapSidePath(i) {\n                    // Added support for 0 value in columns, where height is 0\n                    // but the shape is rendered.\n                    // Height is used from 1st to 6th element of pArr\n                    if (h === 0 && i > 1 && i < 6) { // [2, 3, 4, 5]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y + 10,\n                            z: pArr[i].z\n                        };\n                    }\n                    // It is needed to calculate dummy sides (front/back) for breaking\n                    // points in case of x and depth values. If column has side,\n                    // it means that x values of front and back side are different.\n                    if (pArr[0].x === pArr[7].x && i >= 4) { // [4, 5, 6, 7]\n                        return {\n                            x: pArr[i].x + 10,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z\n                        };\n                    }\n                    // Added dummy depth\n                    if (d === 0 && i < 2 || i > 5) { // [0, 1, 6, 7]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z + 10\n                        };\n                    }\n                    return pArr[i];\n                }\n                /**\n                 * method creating the final side\n                 * @private\n                 */\n                function mapPath(i) {\n                    return pArr[i];\n                }\n                /**\n                 * First value - path with specific face\n                 * Second  value - added information about side for later calculations.\n                 * Possible second values are 0 for path1, 1 for path2 and -1 for no\n                 * path chosen.\n                 * Third value - string containing information about current side\n                 * of cuboid for forcing side rendering.\n                 * @private\n                 */\n                pickShape = function (verticesIndex1, verticesIndex2, side) {\n                    var ret = [[], -1], \n                        // An array of vertices for cuboid face\n                        face1 = verticesIndex1.map(mapPath),\n                        face2 = verticesIndex2.map(mapPath), \n                        // dummy face is calculated the same way as standard face, but\n                        // if cuboid height is 0 additional height is added so it is\n                        // possible to use this vertices array for visible face\n                        // calculation\n                        dummyFace1 = verticesIndex1.map(mapSidePath),\n                        dummyFace2 = verticesIndex2.map(mapSidePath);\n                    if (shapeArea(face1) < 0) {\n                        ret = [face1, 0];\n                    }\n                    else if (shapeArea(face2) < 0) {\n                        ret = [face2, 1];\n                    }\n                    else if (side) {\n                        forcedSides.push(side);\n                        if (shapeArea(dummyFace1) < 0) {\n                            ret = [face1, 0];\n                        }\n                        else if (shapeArea(dummyFace2) < 0) {\n                            ret = [face2, 1];\n                        }\n                        else {\n                            ret = [face1, 0]; // force side calculation.\n                        }\n                    }\n                    return ret;\n                };\n                // front or back\n                front = [3, 2, 1, 0];\n                back = [7, 6, 5, 4];\n                shape = pickShape(front, back, 'front');\n                path1 = shape[0];\n                isFront = shape[1];\n                // top or bottom\n                top = [1, 6, 7, 0];\n                bottom = [4, 5, 2, 3];\n                shape = pickShape(top, bottom, 'top');\n                path2 = shape[0];\n                isTop = shape[1];\n                // side\n                right = [1, 2, 5, 6];\n                left = [0, 7, 4, 3];\n                shape = pickShape(right, left, 'side');\n                path3 = shape[0];\n                isRight = shape[1];\n                /* New block used for calculating zIndex. It is basing on X, Y and Z\n                position of specific columns. All zIndexes (for X, Y and Z values) are\n                added to the final zIndex, where every value has different priority. The\n                biggest priority is in X and Z directions, the lowest index is for\n                stacked columns (Y direction and the same X and Z positions). Big\n                differences between priorities is made because we need to ensure that\n                even for big changes in Y and Z parameters all columns will be drawn\n                correctly. */\n                if (isRight === 1) {\n                    // It is needed to connect value with current chart width\n                    // for big chart size.\n                    zIndex += incrementX * (chart.plotWidth - x);\n                }\n                else if (!isRight) {\n                    zIndex += incrementX * x;\n                }\n                zIndex += incrementY * (!isTop ||\n                    // Numbers checked empirically\n                    (alpha >= 0 && alpha <= 180 || alpha < 360 && alpha > 357.5) ?\n                    chart.plotHeight - y : 10 + y);\n                if (isFront === 1) {\n                    zIndex += incrementZ * (z);\n                }\n                else if (!isFront) {\n                    zIndex += incrementZ * (1000 - z);\n                }\n                return {\n                    front: this.toLinePath(path1, true),\n                    top: this.toLinePath(path2, true),\n                    side: this.toLinePath(path3, true),\n                    zIndexes: {\n                        group: Math.round(zIndex)\n                    },\n                    forcedSides: forcedSides,\n                    // additional info about zIndexes\n                    isFront: isFront,\n                    isTop: isTop\n                }; // #4774\n            };\n            /** @private */\n            SVGRenderer3D.prototype.arc3d = function (attribs) {\n                var wrapper = this.g(), renderer = wrapper.renderer, customAttribs = ['x', 'y', 'r', 'innerR', 'start', 'end', 'depth'];\n                /**\n                 * Get custom attributes. Don't mutate the original object and return an\n                 * object with only custom attr.\n                 * @private\n                 */\n                function suckOutCustom(params) {\n                    var hasCA = false,\n                        ca = {},\n                        key;\n                    params = merge(params); // Don't mutate the original object\n                    for (key in params) {\n                        if (customAttribs.indexOf(key) !== -1) {\n                            ca[key] = params[key];\n                            delete params[key];\n                            hasCA = true;\n                        }\n                    }\n                    return hasCA ? [ca, params] : false;\n                }\n                attribs = merge(attribs);\n                attribs.alpha = (attribs.alpha || 0) * deg2rad;\n                attribs.beta = (attribs.beta || 0) * deg2rad;\n                // Create the different sub sections of the shape\n                wrapper.top = renderer.path();\n                wrapper.side1 = renderer.path();\n                wrapper.side2 = renderer.path();\n                wrapper.inn = renderer.path();\n                wrapper.out = renderer.path();\n                /* eslint-disable no-invalid-this */\n                // Add all faces\n                wrapper.onAdd = function () {\n                    var parent = wrapper.parentGroup,\n                        className = wrapper.attr('class');\n                    wrapper.top.add(wrapper);\n                    // These faces are added outside the wrapper group because the\n                    // z-index relates to neighbour elements as well\n                    ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                        wrapper[face]\n                            .attr({\n                            'class': className + ' highcharts-3d-side'\n                        })\n                            .add(parent);\n                    });\n                };\n                // Cascade to faces\n                ['addClass', 'removeClass'].forEach(function (fn) {\n                    wrapper[fn] = function () {\n                        var args = arguments;\n                        ['top', 'out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            wrapper[face][fn].apply(wrapper[face], args);\n                        });\n                    };\n                });\n                /**\n                 * Compute the transformed paths and set them to the composite shapes\n                 * @private\n                 */\n                wrapper.setPaths = function (attribs) {\n                    var paths = wrapper.renderer.arc3dPath(attribs),\n                        zIndex = paths.zTop * 100;\n                    wrapper.attribs = attribs;\n                    wrapper.top.attr({ d: paths.top, zIndex: paths.zTop });\n                    wrapper.inn.attr({ d: paths.inn, zIndex: paths.zInn });\n                    wrapper.out.attr({ d: paths.out, zIndex: paths.zOut });\n                    wrapper.side1.attr({ d: paths.side1, zIndex: paths.zSide1 });\n                    wrapper.side2.attr({ d: paths.side2, zIndex: paths.zSide2 });\n                    // show all children\n                    wrapper.zIndex = zIndex;\n                    wrapper.attr({ zIndex: zIndex });\n                    // Set the radial gradient center the first time\n                    if (attribs.center) {\n                        wrapper.top.setRadialReference(attribs.center);\n                        delete attribs.center;\n                    }\n                };\n                wrapper.setPaths(attribs);\n                /**\n                 * Apply the fill to the top and a darker shade to the sides\n                 * @private\n                 */\n                wrapper.fillSetter = function (value) {\n                    var darker = color(value).brighten(-0.1).get();\n                    this.fill = value;\n                    this.side1.attr({ fill: darker });\n                    this.side2.attr({ fill: darker });\n                    this.inn.attr({ fill: darker });\n                    this.out.attr({ fill: darker });\n                    this.top.attr({ fill: value });\n                    return this;\n                };\n                // Apply the same value to all. These properties cascade down to the\n                // children when set to the composite arc3d.\n                ['opacity', 'translateX', 'translateY', 'visibility'].forEach(function (setter) {\n                    wrapper[setter + 'Setter'] = function (value, key) {\n                        wrapper[key] = value;\n                        ['out', 'inn', 'side1', 'side2', 'top'].forEach(function (el) {\n                            wrapper[el].attr(key, value);\n                        });\n                    };\n                });\n                // Override attr to remove shape attributes and use those to set child\n                // paths\n                wrapper.attr = function (params) {\n                    var ca,\n                        paramArr;\n                    if (typeof params === 'object') {\n                        paramArr = suckOutCustom(params);\n                        if (paramArr) {\n                            ca = paramArr[0];\n                            arguments[0] = paramArr[1];\n                            extend(wrapper.attribs, ca);\n                            wrapper.setPaths(wrapper.attribs);\n                        }\n                    }\n                    return SVGElement.prototype.attr.apply(wrapper, arguments);\n                };\n                // Override the animate function by sucking out custom parameters\n                // related to the shapes directly, and update the shapes from the\n                // animation step.\n                wrapper.animate = function (params, animation, complete) {\n                    var paramArr,\n                        from = this.attribs,\n                        to,\n                        anim,\n                        randomProp = ('data-' + Math.random().toString(26).substring(2, 9));\n                    // Attribute-line properties connected to 3D. These shouldn't have\n                    // been in the attribs collection in the first place.\n                    delete params.center;\n                    delete params.z;\n                    delete params.alpha;\n                    delete params.beta;\n                    anim = animObject(pick(animation, this.renderer.globalAnimation));\n                    if (anim.duration) {\n                        paramArr = suckOutCustom(params);\n                        // Params need to have a property in order for the step to run\n                        // (#5765, #7097, #7437)\n                        wrapper[randomProp] = 0;\n                        params[randomProp] = 1;\n                        wrapper[randomProp + 'Setter'] = H.noop;\n                        if (paramArr) {\n                            to = paramArr[0]; // custom attr\n                            anim.step = function (a, fx) {\n                                /**\n                                 * @private\n                                 */\n                                function interpolate(key) {\n                                    return from[key] + (pick(to[key], from[key]) -\n                                        from[key]) * fx.pos;\n                                }\n                                if (fx.prop === randomProp) {\n                                    fx.elem.setPaths(merge(from, {\n                                        x: interpolate('x'),\n                                        y: interpolate('y'),\n                                        r: interpolate('r'),\n                                        innerR: interpolate('innerR'),\n                                        start: interpolate('start'),\n                                        end: interpolate('end'),\n                                        depth: interpolate('depth')\n                                    }));\n                                }\n                            };\n                        }\n                        animation = anim; // Only when duration (#5572)\n                    }\n                    return SVGElement.prototype.animate.call(this, params, animation, complete);\n                };\n                // destroy all children\n                wrapper.destroy = function () {\n                    this.top.destroy();\n                    this.out.destroy();\n                    this.inn.destroy();\n                    this.side1.destroy();\n                    this.side2.destroy();\n                    return SVGElement.prototype.destroy.call(this);\n                };\n                // hide all children\n                wrapper.hide = function () {\n                    this.top.hide();\n                    this.out.hide();\n                    this.inn.hide();\n                    this.side1.hide();\n                    this.side2.hide();\n                };\n                wrapper.show = function (inherit) {\n                    this.top.show(inherit);\n                    this.out.show(inherit);\n                    this.inn.show(inherit);\n                    this.side1.show(inherit);\n                    this.side2.show(inherit);\n                };\n                /* eslint-enable no-invalid-this */\n                return wrapper;\n            };\n            /**\n             * Generate the paths required to draw a 3D arc.\n             * @private\n             */\n            SVGRenderer3D.prototype.arc3dPath = function (shapeArgs) {\n                var cx = shapeArgs.x || 0, // x coordinate of the center\n                    cy = shapeArgs.y || 0, // y coordinate of the center\n                    start = shapeArgs.start || 0, // start angle\n                    end = (shapeArgs.end || 0) - 0.00001, // end angle\n                    r = shapeArgs.r || 0, // radius\n                    ir = shapeArgs.innerR || 0, // inner radius\n                    d = shapeArgs.depth || 0, // depth\n                    alpha = shapeArgs.alpha || 0, // alpha rotation of the chart\n                    beta = shapeArgs.beta || 0; // beta rotation of the chart\n                    // Derived Variables\n                    var cs = Math.cos(start), // cosinus of the start angle\n                    ss = Math.sin(start), // sinus of the start angle\n                    ce = Math.cos(end), // cosinus of the end angle\n                    se = Math.sin(end), // sinus of the end angle\n                    rx = r * Math.cos(beta), // x-radius\n                    ry = r * Math.cos(alpha), // y-radius\n                    irx = ir * Math.cos(beta), // x-radius (inner)\n                    iry = ir * Math.cos(alpha), // y-radius (inner)\n                    dx = d * Math.sin(beta), // distance between top and bottom in x\n                    dy = d * Math.sin(alpha); // distance between top and bottom in y\n                    // TOP\n                    var top = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)]\n                    ];\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start, end, 0, 0));\n                top.push([\n                    'L', cx + (irx * ce), cy + (iry * se)\n                ]);\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, 0, 0));\n                top.push(['Z']);\n                // OUTSIDE\n                var b = (beta > 0 ? Math.PI / 2 : 0),\n                    a = (alpha > 0 ? 0 : Math.PI / 2);\n                var start2 = start > -b ? start : (end > -b ? -b : start),\n                    end2 = end < PI - a ? end : (start < PI - a ? PI - a : end),\n                    midEnd = 2 * PI - a;\n                // When slice goes over bottom middle, need to add both, left and right\n                // outer side. Additionally, when we cross right hand edge, create sharp\n                // edge. Outer shape/wall:\n                //\n                //            -------\n                //          /    ^    \\\n                //    4)   /   /   \\   \\  1)\n                //        /   /     \\   \\\n                //       /   /       \\   \\\n                // (c)=> ====         ==== <=(d)\n                //       \\   \\       /   /\n                //        \\   \\<=(a)/   /\n                //         \\   \\   /   / <=(b)\n                //    3)    \\    v    /  2)\n                //            -------\n                //\n                // (a) - inner side\n                // (b) - outer side\n                // (c) - left edge (sharp)\n                // (d) - right edge (sharp)\n                // 1..n - rendering order for startAngle = 0, when set to e.g 90, order\n                // changes clockwise (1->2, 2->3, n->1) and counterclockwise for\n                // negative startAngle\n                var out = [\n                        ['M',\n                    cx + (rx * cos(start2)),\n                    cy + (ry * sin(start2))]\n                    ];\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start2, end2, 0, 0));\n                // When shape is wide, it can cross both, (c) and (d) edges, when using\n                // startAngle\n                if (end > midEnd && start < midEnd) {\n                    // Go to outer side\n                    out.push([\n                        'L', cx + (rx * cos(end2)) + dx, cy + (ry * sin(end2)) + dy\n                    ]);\n                    // Curve to the right edge of the slice (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, midEnd, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end, 0, 0));\n                    // Go to the outer side\n                    out.push([\n                        'L', cx + (rx * cos(end)) + dx, cy + (ry * sin(end)) + dy\n                    ]);\n                    // Go back to middle (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, midEnd, dx, dy));\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Go back to the left edge\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end2, 0, 0));\n                    // But shape can cross also only (c) edge:\n                }\n                else if (end > PI - a && start < PI - a) {\n                    // Go to outer side\n                    out.push([\n                        'L',\n                        cx + (rx * Math.cos(end2)) + dx,\n                        cy + (ry * Math.sin(end2)) + dy\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, end, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * Math.cos(end)), cy + (ry * Math.sin(end))\n                    ]);\n                    // Go back to the artifical end2\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, end2, 0, 0));\n                }\n                out.push([\n                    'L',\n                    cx + (rx * Math.cos(end2)) + dx,\n                    cy + (ry * Math.sin(end2)) + dy\n                ]);\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, start2, dx, dy));\n                out.push(['Z']);\n                // INSIDE\n                var inn = [\n                        ['M',\n                    cx + (irx * cs),\n                    cy + (iry * ss)]\n                    ];\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, start, end, 0, 0));\n                inn.push([\n                    'L',\n                    cx + (irx * Math.cos(end)) + dx,\n                    cy + (iry * Math.sin(end)) + dy\n                ]);\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, dx, dy));\n                inn.push(['Z']);\n                // SIDES\n                var side1 = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)],\n                        ['L',\n                    cx + (rx * cs) + dx,\n                    cy + (ry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs) + dx,\n                    cy + (iry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs),\n                    cy + (iry * ss)],\n                        ['Z']\n                    ];\n                var side2 = [\n                        ['M',\n                    cx + (rx * ce),\n                    cy + (ry * se)],\n                        ['L',\n                    cx + (rx * ce) + dx,\n                    cy + (ry * se) + dy],\n                        ['L',\n                    cx + (irx * ce) + dx,\n                    cy + (iry * se) + dy],\n                        ['L',\n                    cx + (irx * ce),\n                    cy + (iry * se)],\n                        ['Z']\n                    ];\n                // correction for changed position of vanishing point caused by alpha\n                // and beta rotations\n                var angleCorr = Math.atan2(dy, -dx),\n                    angleEnd = Math.abs(end + angleCorr),\n                    angleStart = Math.abs(start + angleCorr),\n                    angleMid = Math.abs((start + end) / 2 + angleCorr);\n                /**\n                 * set to 0-PI range\n                 * @private\n                 */\n                function toZeroPIRange(angle) {\n                    angle = angle % (2 * Math.PI);\n                    if (angle > Math.PI) {\n                        angle = 2 * Math.PI - angle;\n                    }\n                    return angle;\n                }\n                angleEnd = toZeroPIRange(angleEnd);\n                angleStart = toZeroPIRange(angleStart);\n                angleMid = toZeroPIRange(angleMid);\n                // *1e5 is to compensate pInt in zIndexSetter\n                var incPrecision = 1e5,\n                    a1 = angleMid * incPrecision,\n                    a2 = angleStart * incPrecision,\n                    a3 = angleEnd * incPrecision;\n                return {\n                    top: top,\n                    // max angle is PI, so this is always higher\n                    zTop: Math.PI * incPrecision + 1,\n                    out: out,\n                    zOut: Math.max(a1, a2, a3),\n                    inn: inn,\n                    zInn: Math.max(a1, a2, a3),\n                    side1: side1,\n                    // to keep below zOut and zInn in case of same values\n                    zSide1: a3 * 0.99,\n                    side2: side2,\n                    zSide2: a2 * 0.99\n                };\n            };\n            return SVGRenderer3D;\n        }(SVGRenderer));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGRenderer3D;\n    });\n    _registerModule(_modules, 'Core/Chart/Chart3D.js', [_modules['Core/Color/Color.js'], _modules['Extensions/Math3D.js'], _modules['Core/DefaultOptions.js'], _modules['Core/Utilities.js']], function (Color, Math3D, D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension for 3D charts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var perspective = Math3D.perspective,\n            shapeArea3D = Math3D.shapeArea3D;\n        var genericDefaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent,\n            isArray = U.isArray,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        var Chart3D;\n        (function (Chart3D) {\n            /* *\n             *\n             *  Interfaces\n             *\n             * */\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            var Composition = /** @class */ (function () {\n                    /* *\n                     *\n                     *  Constructors\n                     *\n                     * */\n                    function Composition(chart) {\n                        this.frame3d = void 0;\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                Composition.prototype.get3dFrame = function () {\n                    var chart = this.chart,\n                        options3d = chart.options.chart.options3d,\n                        frameOptions = options3d.frame,\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        faceOrientation = function (vertexes) {\n                            var area = shapeArea3D(vertexes,\n                        chart);\n                        // Give it 0.5 squared-pixel as a margin for rounding errors\n                        if (area > 0.5) {\n                            return 1;\n                        }\n                        if (area < -0.5) {\n                            return -1;\n                        }\n                        return 0;\n                    }, bottomOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xp, y: yp, z: zm },\n                        { x: xm, y: yp, z: zm }\n                    ]), topOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: ym, z: zp },\n                        { x: xm, y: ym, z: zp }\n                    ]), leftOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xm, y: ym, z: zp },\n                        { x: xm, y: yp, z: zp },\n                        { x: xm, y: yp, z: zm }\n                    ]), rightOrientation = faceOrientation([\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: yp, z: zp }\n                    ]), frontOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xm, y: ym, z: zm }\n                    ]), backOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zp },\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xm, y: yp, z: zp }\n                    ]), defaultShowFront = false, defaultShowBack = true;\n                    var defaultShowBottom = false,\n                        defaultShowTop = false,\n                        defaultShowLeft = false,\n                        defaultShowRight = false;\n                    // The 'default' criteria to visible faces of the frame is looking\n                    // up every axis to decide whenever the left/right//top/bottom sides\n                    // of the frame will be shown\n                    []\n                        .concat(chart.xAxis, chart.yAxis, chart.zAxis)\n                        .forEach(function (axis) {\n                        if (axis) {\n                            if (axis.horiz) {\n                                if (axis.opposite) {\n                                    defaultShowTop = true;\n                                }\n                                else {\n                                    defaultShowBottom = true;\n                                }\n                            }\n                            else {\n                                if (axis.opposite) {\n                                    defaultShowRight = true;\n                                }\n                                else {\n                                    defaultShowLeft = true;\n                                }\n                            }\n                        }\n                    });\n                    var getFaceOptions = function (sources, faceOrientation, defaultVisible) {\n                            var faceAttrs = ['size', 'color', 'visible'], options = {};\n                        for (var i = 0; i < faceAttrs.length; i++) {\n                            var attr = faceAttrs[i];\n                            for (var j = 0; j < sources.length; j++) {\n                                if (typeof sources[j] === 'object') {\n                                    var val = sources[j][attr];\n                                    if (typeof val !== 'undefined' && val !== null) {\n                                        options[attr] = val;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        var isVisible = defaultVisible;\n                        if (options.visible === true || options.visible === false) {\n                            isVisible = options.visible;\n                        }\n                        else if (options.visible === 'auto') {\n                            isVisible = faceOrientation > 0;\n                        }\n                        return {\n                            size: pick(options.size, 1),\n                            color: pick(options.color, 'none'),\n                            frontFacing: faceOrientation > 0,\n                            visible: isVisible\n                        };\n                    };\n                    // docs @TODO: Add all frame options (left, right, top, bottom,\n                    // front, back) to apioptions JSDoc once the new system is up.\n                    var ret = {\n                            axes: {},\n                            // FIXME: Previously, left/right, top/bottom and front/back\n                            // pairs shared size and color.\n                            // For compatibility and consistency sake, when one face have\n                            // size/color/visibility set, the opposite face will default to\n                            // the same values. Also, left/right used to be called 'side',\n                            // so that's also added as a fallback.\n                            bottom: getFaceOptions([frameOptions.bottom,\n                        frameOptions.top,\n                        frameOptions],\n                        bottomOrientation,\n                        defaultShowBottom),\n                            top: getFaceOptions([frameOptions.top,\n                        frameOptions.bottom,\n                        frameOptions],\n                        topOrientation,\n                        defaultShowTop),\n                            left: getFaceOptions([\n                                frameOptions.left,\n                                frameOptions.right,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        leftOrientation,\n                        defaultShowLeft),\n                            right: getFaceOptions([\n                                frameOptions.right,\n                                frameOptions.left,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        rightOrientation,\n                        defaultShowRight),\n                            back: getFaceOptions([frameOptions.back,\n                        frameOptions.front,\n                        frameOptions],\n                        backOrientation,\n                        defaultShowBack),\n                            front: getFaceOptions([frameOptions.front,\n                        frameOptions.back,\n                        frameOptions],\n                        frontOrientation,\n                        defaultShowFront)\n                        };\n                    // Decide the bast place to put axis title/labels based on the\n                    // visible faces. Ideally, The labels can only be on the edge\n                    // between a visible face and an invisble one. Also, the Y label\n                    // should be one the left-most edge (right-most if opposite).\n                    if (options3d.axisLabelPosition === 'auto') {\n                        var isValidEdge = function (face1,\n                            face2) {\n                                return ((face1.visible !== face2.visible) ||\n                                    (face1.visible &&\n                                        face2.visible &&\n                                        (face1.frontFacing !== face2.frontFacing)));\n                        };\n                        var yEdges = [];\n                        if (isValidEdge(ret.left, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.left, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zp,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zm,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.front)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.back)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xTopEdges = [];\n                        if (isValidEdge(ret.top, ret.front)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.back)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var zBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.left)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.right)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var zTopEdges = [];\n                        if (isValidEdge(ret.top, ret.left)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.right)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var pickEdge = function (edges,\n                            axis,\n                            mult) {\n                                if (edges.length === 0) {\n                                    return null;\n                            }\n                            if (edges.length === 1) {\n                                return edges[0];\n                            }\n                            var projections = perspective(edges,\n                                chart,\n                                false);\n                            var best = 0;\n                            for (var i = 1; i < projections.length; i++) {\n                                if (mult * projections[i][axis] >\n                                    mult * projections[best][axis]) {\n                                    best = i;\n                                }\n                                else if ((mult * projections[i][axis] ===\n                                    mult * projections[best][axis]) &&\n                                    (projections[i].z < projections[best].z)) {\n                                    best = i;\n                                }\n                            }\n                            return edges[best];\n                        };\n                        ret.axes = {\n                            y: {\n                                'left': pickEdge(yEdges, 'x', -1),\n                                'right': pickEdge(yEdges, 'x', +1)\n                            },\n                            x: {\n                                'top': pickEdge(xTopEdges, 'y', -1),\n                                'bottom': pickEdge(xBottomEdges, 'y', +1)\n                            },\n                            z: {\n                                'top': pickEdge(zTopEdges, 'y', -1),\n                                'bottom': pickEdge(zBottomEdges, 'y', +1)\n                            }\n                        };\n                    }\n                    else {\n                        ret.axes = {\n                            y: {\n                                'left': {\n                                    x: xm, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'right': {\n                                    x: xp, z: zm, xDir: { x: 0, y: 0, z: 1 }\n                                }\n                            },\n                            x: {\n                                'top': {\n                                    y: ym, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'bottom': {\n                                    y: yp,\n                                    z: zm,\n                                    xDir: { x: 1, y: 0, z: 0 }\n                                }\n                            },\n                            z: {\n                                'top': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: ym,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                },\n                                'bottom': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: yp,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                }\n                            }\n                        };\n                    }\n                    return ret;\n                };\n                /**\n                 * Calculate scale of the 3D view. That is required to fit chart's 3D\n                 * projection into the actual plotting area. Reported as #4933.\n                 *\n                 * **Note:**\n                 * This function should ideally take the plot values instead of a chart\n                 * object, but since the chart object is needed for perspective it is\n                 * not practical. Possible to make both getScale and perspective more\n                 * logical and also immutable.\n                 *\n                 * @private\n                 * @function getScale\n                 *\n                 * @param {number} depth\n                 * The depth of the chart\n                 *\n                 * @return {number}\n                 * The scale to fit the 3D chart into the plotting area.\n                 *\n                 * @requires highcharts-3d\n                 */\n                Composition.prototype.getScale = function (depth) {\n                    var chart = this.chart,\n                        plotLeft = chart.plotLeft,\n                        plotRight = chart.plotWidth + plotLeft,\n                        plotTop = chart.plotTop,\n                        plotBottom = chart.plotHeight + plotTop,\n                        originX = plotLeft + chart.plotWidth / 2,\n                        originY = plotTop + chart.plotHeight / 2,\n                        bbox3d = {\n                            minX: Number.MAX_VALUE,\n                            maxX: -Number.MAX_VALUE,\n                            minY: Number.MAX_VALUE,\n                            maxY: -Number.MAX_VALUE\n                        };\n                    var corners,\n                        scale = 1;\n                    // Top left corners:\n                    corners = [{\n                            x: plotLeft,\n                            y: plotTop,\n                            z: 0\n                        }, {\n                            x: plotLeft,\n                            y: plotTop,\n                            z: depth\n                        }];\n                    // Top right corners:\n                    [0, 1].forEach(function (i) {\n                        corners.push({\n                            x: plotRight,\n                            y: corners[i].y,\n                            z: corners[i].z\n                        });\n                    });\n                    // All bottom corners:\n                    [0, 1, 2, 3].forEach(function (i) {\n                        corners.push({\n                            x: corners[i].x,\n                            y: plotBottom,\n                            z: corners[i].z\n                        });\n                    });\n                    // Calculate 3D corners:\n                    corners = perspective(corners, chart, false);\n                    // Get bounding box of 3D element:\n                    corners.forEach(function (corner) {\n                        bbox3d.minX = Math.min(bbox3d.minX, corner.x);\n                        bbox3d.maxX = Math.max(bbox3d.maxX, corner.x);\n                        bbox3d.minY = Math.min(bbox3d.minY, corner.y);\n                        bbox3d.maxY = Math.max(bbox3d.maxY, corner.y);\n                    });\n                    // Left edge:\n                    if (plotLeft > bbox3d.minX) {\n                        scale = Math.min(scale, 1 - Math.abs((plotLeft + originX) / (bbox3d.minX + originX)) % 1);\n                    }\n                    // Right edge:\n                    if (plotRight < bbox3d.maxX) {\n                        scale = Math.min(scale, (plotRight - originX) / (bbox3d.maxX - originX));\n                    }\n                    // Top edge:\n                    if (plotTop > bbox3d.minY) {\n                        if (bbox3d.minY < 0) {\n                            scale = Math.min(scale, (plotTop + originY) / (-bbox3d.minY + plotTop + originY));\n                        }\n                        else {\n                            scale = Math.min(scale, 1 - (plotTop + originY) / (bbox3d.minY + originY) % 1);\n                        }\n                    }\n                    // Bottom edge:\n                    if (plotBottom < bbox3d.maxY) {\n                        scale = Math.min(scale, Math.abs((plotBottom - originY) / (bbox3d.maxY - originY)));\n                    }\n                    return scale;\n                };\n                return Composition;\n            }());\n            Chart3D.Composition = Composition;\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * @optionparent\n             * @private\n             */\n            Chart3D.defaultOptions = {\n                chart: {\n                    /**\n                     * Options to render charts in 3 dimensions. This feature requires\n                     * `highcharts-3d.js`, found in the download package or online at\n                     * [code.highcharts.com/highcharts-3d.js](https://code.highcharts.com/highcharts-3d.js).\n                     *\n                     * @since    4.0\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    options3d: {\n                        /**\n                         * Wether to render the chart using the 3D functionality.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        enabled: false,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        alpha: 0,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        beta: 0,\n                        /**\n                         * The total depth of the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        depth: 100,\n                        /**\n                         * Whether the 3d box should automatically adjust to the chart\n                         * plot area.\n                         *\n                         * @since   4.2.4\n                         * @product highcharts\n                         */\n                        fitToPlot: true,\n                        /**\n                         * Defines the distance the viewer is standing in front of the\n                         * chart, this setting is important to calculate the perspective\n                         * effect in column and scatter charts. It is not used for 3D\n                         * pie charts.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        viewDistance: 25,\n                        /**\n                         * Set it to `\"auto\"` to automatically move the labels to the\n                         * best edge.\n                         *\n                         * @type    {\"auto\"|null}\n                         * @since   5.0.12\n                         * @product highcharts\n                         */\n                        axisLabelPosition: null,\n                        /**\n                         * Provides the option to draw a frame around the charts by\n                         * defining a bottom, front and back panel.\n                         *\n                         * @since    4.0\n                         * @product  highcharts\n                         * @requires highcharts-3d\n                         */\n                        frame: {\n                            /**\n                             * Whether the frames are visible.\n                             */\n                            visible: 'default',\n                            /**\n                             * General pixel thickness for the frame faces.\n                             */\n                            size: 1,\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             *\n                             * @since    4.0\n                             * @product  highcharts\n                             * @requires highcharts-3d\n                             */\n                            /**\n                             * The color of the panel.\n                             *\n                             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                             * @default   transparent\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.color\n                             */\n                            /**\n                             * The thickness of the panel.\n                             *\n                             * @type      {number}\n                             * @default   1\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.size\n                             */\n                            /**\n                             * Whether to display the frame. Possible values are `true`,\n                             * `false`, `\"auto\"` to display only the frames behind the\n                             * data, and `\"default\"` to display faces behind the data\n                             * based on the axis layout, ignoring the point of view.\n                             *\n                             * @sample {highcharts} highcharts/3d/scatter-frame/\n                             *         Auto frames\n                             *\n                             * @type      {boolean|\"default\"|\"auto\"}\n                             * @default   default\n                             * @since     5.0.12\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.visible\n                             */\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             */\n                            bottom: {},\n                            /**\n                             * The top of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            top: {},\n                            /**\n                             * The left side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            left: {},\n                            /**\n                             * The right of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            right: {},\n                            /**\n                             * The back side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            back: {},\n                            /**\n                             * The front of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            front: {}\n                        }\n                    }\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable no-invalid-this, valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass, FxClass) {\n                var chartProto = ChartClass.prototype;\n                var fxProto = FxClass.prototype;\n                /**\n                 * Shorthand to check the is3d flag.\n                 * @private\n                 * @return {boolean}\n                 * Whether it is a 3D chart.\n                 */\n                chartProto.is3d = function () {\n                    return Boolean(this.options.chart.options3d &&\n                        this.options.chart.options3d.enabled); // #4280\n                };\n                chartProto.propsRequireDirtyBox.push('chart.options3d');\n                chartProto.propsRequireUpdateSeries.push('chart.options3d');\n                /**\n                 * Animation setter for matrix property.\n                 * @private\n                 */\n                fxProto.matrixSetter = function () {\n                    var interpolated;\n                    if (this.pos < 1 &&\n                        (isArray(this.start) || isArray(this.end))) {\n                        var start = (this.start ||\n                                [1, 0, 0, 1, 0, 0]),\n                            end = this.end || [1, 0, 0, 1, 0, 0];\n                        interpolated = [];\n                        for (var i = 0; i < 6; i++) {\n                            interpolated.push(this.pos * end[i] + (1 - this.pos) * start[i]);\n                        }\n                    }\n                    else {\n                        interpolated = this.end;\n                    }\n                    this.elem.attr(this.prop, interpolated, null, true);\n                };\n                merge(true, genericDefaultOptions, Chart3D.defaultOptions);\n                addEvent(ChartClass, 'init', onInit);\n                addEvent(ChartClass, 'addSeries', onAddSeries);\n                addEvent(ChartClass, 'afterDrawChartBox', onAfterDrawChartBox);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n                addEvent(ChartClass, 'afterInit', onAfterInit);\n                addEvent(ChartClass, 'afterSetChartSize', onAfterSetChartSize);\n                addEvent(ChartClass, 'beforeRedraw', onBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onBeforeRender);\n                wrap(chartProto, 'isInsidePlot', wrapIsInsidePlot);\n                wrap(ChartClass, 'renderSeries', wrapRenderSeries);\n                wrap(ChartClass, 'setClassName', wrapSetClassName);\n            }\n            Chart3D.compose = compose;\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAddSeries(e) {\n                if (this.is3d()) {\n                    if (e.options.type === 'scatter') {\n                        e.options.type = 'scatter3d';\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterDrawChartBox() {\n                if (this.chart3d &&\n                    this.is3d()) {\n                    var chart = this,\n                        renderer = chart.renderer,\n                        options3d = chart.options.chart.options3d,\n                        frame = chart.chart3d.get3dFrame(),\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        xmm = xm - (frame.left.visible ? frame.left.size : 0),\n                        xpp = xp + (frame.right.visible ? frame.right.size : 0),\n                        ymm = ym - (frame.top.visible ? frame.top.size : 0),\n                        ypp = yp + (frame.bottom.visible ? frame.bottom.size : 0),\n                        zmm = zm - (frame.front.visible ? frame.front.size : 0),\n                        zpp = zp + (frame.back.visible ? frame.back.size : 0),\n                        verb = chart.hasRendered ? 'animate' : 'attr';\n                    chart.chart3d.frame3d = frame;\n                    if (!chart.frameShapes) {\n                        chart.frameShapes = {\n                            bottom: renderer.polyhedron().add(),\n                            top: renderer.polyhedron().add(),\n                            left: renderer.polyhedron().add(),\n                            right: renderer.polyhedron().add(),\n                            back: renderer.polyhedron().add(),\n                            front: renderer.polyhedron().add()\n                        };\n                    }\n                    chart.frameShapes.bottom[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-bottom',\n                        zIndex: frame.bottom.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.top[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-top',\n                        zIndex: frame.top.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.left[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-left',\n                        zIndex: frame.left.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.left.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.left.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.right[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-right',\n                        zIndex: frame.right.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.right.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.right.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.back[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-back',\n                        zIndex: frame.back.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.front[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-front',\n                        zIndex: frame.front.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.front.visible\n                            }]\n                    });\n                }\n            }\n            /**\n             * Add the required CSS classes for column sides (#6018)\n             * @private\n             */\n            function onAfterGetContainer() {\n                if (this.styledMode) {\n                    // Add definitions used by brighter and darker faces of the cuboids.\n                    [{\n                            name: 'darker',\n                            slope: 0.6\n                        }, {\n                            name: 'brighter',\n                            slope: 1.4\n                        }].forEach(function (cfg) {\n                        this.renderer.definition({\n                            tagName: 'filter',\n                            attributes: {\n                                id: 'highcharts-' + cfg.name\n                            },\n                            children: [{\n                                    tagName: 'feComponentTransfer',\n                                    children: [{\n                                            tagName: 'feFuncR',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncG',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncB',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }]\n                                }]\n                        });\n                    }, this);\n                }\n            }\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAfterInit() {\n                var options = this.options;\n                if (this.is3d()) {\n                    (options.series || []).forEach(function (s) {\n                        var type = (s.type ||\n                                options.chart.type ||\n                                options.chart.defaultSeriesType);\n                        if (type === 'scatter') {\n                            s.type = 'scatter3d';\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterSetChartSize() {\n                var chart = this,\n                    options3d = chart.options.chart.options3d;\n                if (chart.chart3d &&\n                    chart.is3d()) {\n                    // Add a 0-360 normalisation for alfa and beta angles in 3d graph\n                    if (options3d) {\n                        options3d.alpha = options3d.alpha % 360 +\n                            (options3d.alpha >= 0 ? 0 : 360);\n                        options3d.beta = options3d.beta % 360 +\n                            (options3d.beta >= 0 ? 0 : 360);\n                    }\n                    var inverted = chart.inverted, clipBox = chart.clipBox, margin = chart.margin, x = inverted ? 'y' : 'x', y = inverted ? 'x' : 'y', w = inverted ? 'height' : 'width', h = inverted ? 'width' : 'height';\n                    clipBox[x] = -(margin[3] || 0);\n                    clipBox[y] = -(margin[0] || 0);\n                    clipBox[w] = (chart.chartWidth + (margin[3] || 0) + (margin[1] || 0));\n                    clipBox[h] = (chart.chartHeight + (margin[0] || 0) + (margin[2] || 0));\n                    // Set scale, used later in perspective method():\n                    // getScale uses perspective, so scale3d has to be reset.\n                    chart.scale3d = 1;\n                    if (options3d.fitToPlot === true) {\n                        chart.scale3d = chart.chart3d.getScale(options3d.depth);\n                    }\n                    // Recalculate the 3d frame with every call of setChartSize,\n                    // instead of doing it after every redraw(). It avoids ticks\n                    // and axis title outside of chart.\n                    chart.chart3d.frame3d = chart.chart3d.get3dFrame(); // #7942\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRedraw() {\n                if (this.is3d()) {\n                    // Set to force a redraw of all elements\n                    this.isDirtyBox = true;\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRender() {\n                if (this.chart3d && this.is3d()) {\n                    this.chart3d.frame3d = this.chart3d.get3dFrame();\n                }\n            }\n            /**\n             * @private\n             */\n            function onInit() {\n                if (!this.chart3d) {\n                    this.chart3d = new Composition(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapIsInsidePlot(proceed) {\n                return this.is3d() || proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            /**\n             * Draw the series in the reverse order (#3803, #3917)\n             * @private\n             */\n            function wrapRenderSeries(proceed) {\n                var series,\n                    i = this.series.length;\n                if (this.is3d()) {\n                    while (i--) {\n                        series = this.series[i];\n                        series.translate();\n                        series.render();\n                    }\n                }\n                else {\n                    proceed.call(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapSetClassName(proceed) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n                if (this.is3d()) {\n                    this.container.className += ' highcharts-3d-chart';\n                }\n            }\n        })(Chart3D || (Chart3D = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Note: As of v5.0.12, `frame.left` or `frame.right` should be used instead.\n         *\n         * The side for the frame around a 3D chart.\n         *\n         * @deprecated\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption chart.options3d.frame.side\n         */\n        /**\n         * The color of the panel.\n         *\n         * @deprecated\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   transparent\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.color\n         */\n        /**\n         * The thickness of the panel.\n         *\n         * @deprecated\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.size\n         */\n        ''; // keeps doclets above in JS file\n\n        return Chart3D;\n    });\n    _registerModule(_modules, 'Core/Axis/ZAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Utilities.js']], function (Axis, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            splat = U.splat;\n        /* eslint-disable valid-jsdoc */\n        /**\n         * 3D chart with support of z coordinates.\n         * @private\n         * @class\n         */\n        var ZChart = /** @class */ (function () {\n                function ZChart() {\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                ZChart.compose = function (ChartClass) {\n                    addEvent(ChartClass, 'afterGetAxes', ZChart.onAfterGetAxes);\n                var chartProto = ChartClass.prototype;\n                chartProto.addZAxis = ZChart.wrapAddZAxis;\n                chartProto.collectionsWithInit.zAxis = [chartProto.addZAxis];\n                chartProto.collectionsWithUpdate.push('zAxis');\n            };\n            /**\n             * Get the Z axis in addition to the default X and Y.\n             * @private\n             */\n            ZChart.onAfterGetAxes = function () {\n                var chart = this;\n                var options = this.options;\n                var zAxisOptions = options.zAxis = splat(options.zAxis || {});\n                if (!chart.is3d()) {\n                    return;\n                }\n                chart.zAxis = [];\n                zAxisOptions.forEach(function (axisOptions, i) {\n                    axisOptions.index = i;\n                    // Z-Axis is shown horizontally, so it's kind of a X-Axis\n                    axisOptions.isX = true;\n                    chart\n                        .addZAxis(axisOptions)\n                        .setScale();\n                });\n            };\n            /**\n             * @private\n             */\n            ZChart.wrapAddZAxis = function (options) {\n                return new ZAxis(this, options);\n            };\n            return ZChart;\n        }());\n        /**\n         * 3D axis for z coordinates.\n         */\n        var ZAxis = /** @class */ (function (_super) {\n                __extends(ZAxis, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function ZAxis(chart, userOptions) {\n                var _this = _super.call(this,\n                    chart,\n                    userOptions) || this;\n                _this.isZAxis = true;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            ZAxis.prototype.getSeriesExtremes = function () {\n                var axis = this;\n                var chart = axis.chart;\n                axis.hasVisibleSeries = false;\n                // Reset properties in case we're redrawing (#3353)\n                axis.dataMin = axis.dataMax = axis.ignoreMinPadding = (axis.ignoreMaxPadding = void 0);\n                if (axis.stacking) {\n                    axis.stacking.buildStacks();\n                }\n                // loop through this axis' series\n                axis.series.forEach(function (series) {\n                    if (series.visible ||\n                        !chart.options.chart.ignoreHiddenSeries) {\n                        var seriesOptions = series.options,\n                            zData = void 0,\n                            threshold = seriesOptions.threshold;\n                        axis.hasVisibleSeries = true;\n                        // Validate threshold in logarithmic axes\n                        if (axis.positiveValuesOnly && threshold <= 0) {\n                            threshold = void 0;\n                        }\n                        zData = series.zData;\n                        if (zData.length) {\n                            axis.dataMin = Math.min(pick(axis.dataMin, zData[0]), Math.min.apply(null, zData));\n                            axis.dataMax = Math.max(pick(axis.dataMax, zData[0]), Math.max.apply(null, zData));\n                        }\n                    }\n                });\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setAxisSize = function () {\n                var axis = this;\n                var chart = axis.chart;\n                _super.prototype.setAxisSize.call(this);\n                axis.width = axis.len = (chart.options.chart.options3d &&\n                    chart.options.chart.options3d.depth) || 0;\n                axis.right = chart.chartWidth - axis.width - axis.left;\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setOptions = function (userOptions) {\n                userOptions = merge({\n                    offset: 0,\n                    lineWidth: 0\n                }, userOptions);\n                // #14793, this used to be set on the prototype\n                this.isZAxis = true;\n                _super.prototype.setOptions.call(this, userOptions);\n                this.coll = 'zAxis';\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ZAxis.ZChartComposition = ZChart;\n            return ZAxis;\n        }(Axis));\n\n        return ZAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/Tick3D.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            wrap = U.wrap;\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Tick with 3D support\n         * @private\n         * @class\n         */\n        var Tick3D = /** @class */ (function () {\n                function Tick3D() {\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Tick3D.compose = function (TickClass) {\n                    addEvent(TickClass, 'afterGetLabelPosition', Tick3D.onAfterGetLabelPosition);\n                var tickProto = TickClass.prototype;\n                wrap(tickProto, 'getMarkPath', Tick3D.wrapGetMarkPath);\n            };\n            /**\n             * @private\n             */\n            Tick3D.onAfterGetLabelPosition = function (e) {\n                var axis3D = this.axis.axis3D;\n                if (axis3D) {\n                    extend(e.pos, axis3D.fix3dPosition(e.pos));\n                }\n            };\n            /**\n             * @private\n             */\n            Tick3D.wrapGetMarkPath = function (proceed) {\n                var chart = this.axis.chart;\n                var axis3D = this.axis.axis3D;\n                var path = proceed.apply(this,\n                    [].slice.call(arguments, 1));\n                if (axis3D) {\n                    var start = path[0];\n                    var end = path[1];\n                    if (start[0] === 'M' && end[0] === 'L') {\n                        var pArr = [\n                                axis3D.fix3dPosition({ x: start[1],\n                            y: start[2],\n                            z: 0 }),\n                                axis3D.fix3dPosition({ x: end[1],\n                            y: end[2],\n                            z: 0 })\n                            ];\n                        return this.axis.chart.renderer.toLineSegments(pArr);\n                    }\n                }\n                return path;\n            };\n            return Tick3D;\n        }());\n\n        return Tick3D;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3D.js', [_modules['Core/Globals.js'], _modules['Extensions/Math3D.js'], _modules['Core/Axis/Tick.js'], _modules['Core/Axis/Tick3D.js'], _modules['Core/Utilities.js']], function (H, Math3D, Tick, Tick3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            perspective3D = Math3D.perspective3D,\n            shapeArea = Math3D.shapeArea;\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Adds 3D support to axes.\n         * @private\n         * @class\n         */\n        var Axis3DAdditions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Axis3DAdditions(axis) {\n                    this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             * @param {Highcharts.Axis} axis\n             * Related axis.\n             * @param {Highcharts.Position3DObject} pos\n             * Position to fix.\n             * @param {boolean} [isTitle]\n             * Whether this is a title position.\n             * @return {Highcharts.Position3DObject}\n             * Fixed position.\n             */\n            Axis3DAdditions.prototype.fix3dPosition = function (pos, isTitle) {\n                var axis3D = this;\n                var axis = axis3D.axis;\n                var chart = axis.chart;\n                // Do not do this if the chart is not 3D\n                if (axis.coll === 'colorAxis' ||\n                    !chart.chart3d ||\n                    !chart.is3d()) {\n                    return pos;\n                }\n                var alpha = deg2rad * chart.options.chart.options3d.alpha,\n                    beta = deg2rad * chart.options.chart.options3d.beta,\n                    positionMode = pick(isTitle && axis.options.title.position3d,\n                    axis.options.labels.position3d),\n                    skew = pick(isTitle && axis.options.title.skew3d,\n                    axis.options.labels.skew3d),\n                    frame = chart.chart3d.frame3d,\n                    plotLeft = chart.plotLeft,\n                    plotRight = chart.plotWidth + plotLeft,\n                    plotTop = chart.plotTop,\n                    plotBottom = chart.plotHeight + plotTop;\n                var offsetX = 0,\n                    offsetY = 0,\n                    vecX,\n                    vecY = { x: 0,\n                    y: 1,\n                    z: 0 }, \n                    // Indicates that we are labelling an X or Z axis on the \"back\" of\n                    // the chart\n                    reverseFlap = false;\n                pos = axis.axis3D.swapZ({ x: pos.x, y: pos.y, z: 0 });\n                if (axis.isZAxis) { // Z Axis\n                    if (axis.opposite) {\n                        if (frame.axes.z.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.x = frame.axes.z.top.x;\n                        pos.y = frame.axes.z.top.y;\n                        vecX = frame.axes.z.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.z.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.x = frame.axes.z.bottom.x;\n                        pos.y = frame.axes.z.bottom.y;\n                        vecX = frame.axes.z.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else if (axis.horiz) { // X Axis\n                    if (axis.opposite) {\n                        if (frame.axes.x.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.y = frame.axes.x.top.y;\n                        pos.z = frame.axes.x.top.z;\n                        vecX = frame.axes.x.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.x.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.y = frame.axes.x.bottom.y;\n                        pos.z = frame.axes.x.bottom.z;\n                        vecX = frame.axes.x.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else { // Y Axis\n                    if (axis.opposite) {\n                        if (frame.axes.y.right === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotRight;\n                        pos.x = frame.axes.y.right.x;\n                        pos.z = frame.axes.y.right.z;\n                        vecX = frame.axes.y.right.xDir;\n                        // Rotate 90º on opposite edge\n                        vecX = { x: vecX.z, y: vecX.y, z: -vecX.x };\n                    }\n                    else {\n                        if (frame.axes.y.left === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotLeft;\n                        pos.x = frame.axes.y.left.x;\n                        pos.z = frame.axes.y.left.z;\n                        vecX = frame.axes.y.left.xDir;\n                    }\n                }\n                if (positionMode === 'chart') {\n                    // Labels preserve their direction relative to the chart\n                    // nothing to do\n                }\n                else if (positionMode === 'flap') {\n                    // Labels are rotated around the axis direction to face the screen\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sin = Math.sin(alpha);\n                        var cos = Math.cos(alpha);\n                        if (axis.opposite) {\n                            sin = -sin;\n                        }\n                        if (reverseFlap) {\n                            sin = -sin;\n                        }\n                        vecY = { x: vecX.z * sin, y: cos, z: -vecX.x * sin };\n                    }\n                }\n                else if (positionMode === 'ortho') {\n                    // Labels will be rotated to be ortogonal to the axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sina = Math.sin(alpha);\n                        var cosa = Math.cos(alpha);\n                        var sinb = Math.sin(beta);\n                        var cosb = Math.cos(beta);\n                        var vecZ = { x: sinb * cosa,\n                            y: -sina,\n                            z: -cosa * cosb };\n                        vecY = {\n                            x: vecX.y * vecZ.z - vecX.z * vecZ.y,\n                            y: vecX.z * vecZ.x - vecX.x * vecZ.z,\n                            z: vecX.x * vecZ.y - vecX.y * vecZ.x\n                        };\n                        var scale = 1 / Math.sqrt(vecY.x * vecY.x + vecY.y * vecY.y + vecY.z * vecY.z);\n                        if (reverseFlap) {\n                            scale = -scale;\n                        }\n                        vecY = {\n                            x: scale * vecY.x, y: scale * vecY.y, z: scale * vecY.z\n                        };\n                    }\n                }\n                else { // positionMode  == 'offset'\n                    // Labels will be skewd to maintain vertical / horizontal offsets\n                    // from axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        vecY = {\n                            x: Math.sin(beta) * Math.sin(alpha),\n                            y: Math.cos(alpha),\n                            z: -Math.cos(beta) * Math.sin(alpha)\n                        };\n                    }\n                }\n                pos.x += offsetX * vecX.x + offsetY * vecY.x;\n                pos.y += offsetX * vecX.y + offsetY * vecY.y;\n                pos.z += offsetX * vecX.z + offsetY * vecY.z;\n                var projected = perspective([pos],\n                    axis.chart)[0];\n                if (skew) {\n                    // Check if the label text would be mirrored\n                    var isMirrored = shapeArea(perspective([\n                            pos,\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart)) < 0;\n                    if (isMirrored) {\n                        vecX = { x: -vecX.x, y: -vecX.y, z: -vecX.z };\n                    }\n                    var pointsProjected = perspective([\n                            { x: pos.x,\n                        y: pos.y,\n                        z: pos.z },\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart);\n                    projected.matrix = [\n                        pointsProjected[1].x - pointsProjected[0].x,\n                        pointsProjected[1].y - pointsProjected[0].y,\n                        pointsProjected[2].x - pointsProjected[0].x,\n                        pointsProjected[2].y - pointsProjected[0].y,\n                        projected.x,\n                        projected.y\n                    ];\n                    projected.matrix[4] -= projected.x * projected.matrix[0] +\n                        projected.y * projected.matrix[2];\n                    projected.matrix[5] -= projected.x * projected.matrix[1] +\n                        projected.y * projected.matrix[3];\n                }\n                return projected;\n            };\n            /**\n             * @private\n             */\n            Axis3DAdditions.prototype.swapZ = function (p, insidePlotArea) {\n                var axis = this.axis;\n                if (axis.isZAxis) {\n                    var plotLeft = insidePlotArea ? 0 : axis.chart.plotLeft;\n                    return {\n                        x: plotLeft + p.z,\n                        y: p.y,\n                        z: p.x - plotLeft\n                    };\n                }\n                return p;\n            };\n            return Axis3DAdditions;\n        }());\n        /**\n         * Axis with 3D support.\n         * @private\n         * @class\n         */\n        var Axis3D = /** @class */ (function () {\n                function Axis3D() {\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * Extends axis class with 3D support.\n                 * @private\n                 */\n                Axis3D.compose = function (AxisClass) {\n                    merge(true, AxisClass.defaultOptions, Axis3D.defaultOptions);\n                AxisClass.keepProps.push('axis3D');\n                addEvent(AxisClass, 'init', Axis3D.onInit);\n                addEvent(AxisClass, 'afterSetOptions', Axis3D.onAfterSetOptions);\n                addEvent(AxisClass, 'drawCrosshair', Axis3D.onDrawCrosshair);\n                var axisProto = AxisClass.prototype;\n                wrap(axisProto, 'getLinePath', Axis3D.wrapGetLinePath);\n                wrap(axisProto, 'getPlotBandPath', Axis3D.wrapGetPlotBandPath);\n                wrap(axisProto, 'getPlotLinePath', Axis3D.wrapGetPlotLinePath);\n                wrap(axisProto, 'getSlotWidth', Axis3D.wrapGetSlotWidth);\n                wrap(axisProto, 'getTitlePosition', Axis3D.wrapGetTitlePosition);\n                Tick3D.compose(Tick);\n            };\n            /**\n             * @private\n             */\n            Axis3D.onAfterSetOptions = function () {\n                var axis = this;\n                var chart = axis.chart;\n                var options = axis.options;\n                if (chart.is3d && chart.is3d() && axis.coll !== 'colorAxis') {\n                    options.tickWidth = pick(options.tickWidth, 0);\n                    options.gridLineWidth = pick(options.gridLineWidth, 1);\n                }\n            };\n            /**\n             * @private\n             */\n            Axis3D.onDrawCrosshair = function (e) {\n                var axis = this;\n                if (axis.chart.is3d() &&\n                    axis.coll !== 'colorAxis') {\n                    if (e.point) {\n                        e.point.crosshairPos = axis.isXAxis ?\n                            e.point.axisXpos :\n                            axis.len - e.point.axisYpos;\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            Axis3D.onInit = function () {\n                var axis = this;\n                if (!axis.axis3D) {\n                    axis.axis3D = new Axis3DAdditions(axis);\n                }\n            };\n            /**\n             * Do not draw axislines in 3D.\n             * @private\n             */\n            Axis3D.wrapGetLinePath = function (proceed) {\n                var axis = this;\n                // Do not do this if the chart is not 3D\n                if (!axis.chart.is3d() || axis.coll === 'colorAxis') {\n                    return proceed.apply(axis, [].slice.call(arguments, 1));\n                }\n                return [];\n            };\n            /**\n             * @private\n             */\n            Axis3D.wrapGetPlotBandPath = function (proceed) {\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d() || this.coll === 'colorAxis') {\n                    return proceed.apply(this, [].slice.call(arguments, 1));\n                }\n                var args = arguments,\n                    from = args[1],\n                    to = args[2],\n                    path = [],\n                    fromPath = this.getPlotLinePath({ value: from }),\n                    toPath = this.getPlotLinePath({ value: to });\n                if (fromPath && toPath) {\n                    for (var i = 0; i < fromPath.length; i += 2) {\n                        var fromStartSeg = fromPath[i],\n                            fromEndSeg = fromPath[i + 1],\n                            toStartSeg = toPath[i],\n                            toEndSeg = toPath[i + 1];\n                        if (fromStartSeg[0] === 'M' &&\n                            fromEndSeg[0] === 'L' &&\n                            toStartSeg[0] === 'M' &&\n                            toEndSeg[0] === 'L') {\n                            path.push(fromStartSeg, fromEndSeg, toEndSeg, \n                            // lineTo instead of moveTo\n                            ['L', toStartSeg[1], toStartSeg[2]], ['Z']);\n                        }\n                    }\n                }\n                return path;\n            };\n            /**\n             * @private\n             */\n            Axis3D.wrapGetPlotLinePath = function (proceed) {\n                var axis = this,\n                    axis3D = axis.axis3D,\n                    chart = axis.chart,\n                    path = proceed.apply(axis,\n                    [].slice.call(arguments, 1));\n                // Do not do this if the chart is not 3D\n                if (axis.coll === 'colorAxis' ||\n                    !chart.chart3d ||\n                    !chart.is3d()) {\n                    return path;\n                }\n                if (path === null) {\n                    return path;\n                }\n                var options3d = chart.options.chart.options3d,\n                    d = axis.isZAxis ? chart.plotWidth : options3d.depth,\n                    frame = chart.chart3d.frame3d,\n                    startSegment = path[0],\n                    endSegment = path[1];\n                var pArr,\n                    pathSegments = [];\n                if (startSegment[0] === 'M' && endSegment[0] === 'L') {\n                    pArr = [\n                        axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: 0 }),\n                        axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: d }),\n                        axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: 0 }),\n                        axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: d })\n                    ];\n                    if (!this.horiz) { // Y-Axis\n                        if (frame.front.visible) {\n                            pathSegments.push(pArr[0], pArr[2]);\n                        }\n                        if (frame.back.visible) {\n                            pathSegments.push(pArr[1], pArr[3]);\n                        }\n                        if (frame.left.visible) {\n                            pathSegments.push(pArr[0], pArr[1]);\n                        }\n                        if (frame.right.visible) {\n                            pathSegments.push(pArr[2], pArr[3]);\n                        }\n                    }\n                    else if (this.isZAxis) { // Z-Axis\n                        if (frame.left.visible) {\n                            pathSegments.push(pArr[0], pArr[2]);\n                        }\n                        if (frame.right.visible) {\n                            pathSegments.push(pArr[1], pArr[3]);\n                        }\n                        if (frame.top.visible) {\n                            pathSegments.push(pArr[0], pArr[1]);\n                        }\n                        if (frame.bottom.visible) {\n                            pathSegments.push(pArr[2], pArr[3]);\n                        }\n                    }\n                    else { // X-Axis\n                        if (frame.front.visible) {\n                            pathSegments.push(pArr[0], pArr[2]);\n                        }\n                        if (frame.back.visible) {\n                            pathSegments.push(pArr[1], pArr[3]);\n                        }\n                        if (frame.top.visible) {\n                            pathSegments.push(pArr[0], pArr[1]);\n                        }\n                        if (frame.bottom.visible) {\n                            pathSegments.push(pArr[2], pArr[3]);\n                        }\n                    }\n                    pathSegments = perspective(pathSegments, this.chart, false);\n                }\n                return chart.renderer.toLineSegments(pathSegments);\n            };\n            /**\n             * Wrap getSlotWidth function to calculate individual width value for each\n             * slot (#8042).\n             * @private\n             */\n            Axis3D.wrapGetSlotWidth = function (proceed, tick) {\n                var axis = this,\n                    chart = axis.chart,\n                    ticks = axis.ticks,\n                    gridGroup = axis.gridGroup;\n                if (axis.categories &&\n                    chart.frameShapes &&\n                    chart.is3d() &&\n                    gridGroup &&\n                    tick &&\n                    tick.label) {\n                    var firstGridLine = (gridGroup.element.childNodes[0].getBBox()),\n                        frame3DLeft = chart.frameShapes.left.getBBox(),\n                        options3d = chart.options.chart.options3d,\n                        origin_1 = {\n                            x: chart.plotWidth / 2,\n                            y: chart.plotHeight / 2,\n                            z: options3d.depth / 2,\n                            vd: (pick(options3d.depth, 1) *\n                                pick(options3d.viewDistance, 0))\n                        },\n                        tickId = tick.pos,\n                        prevTick = ticks[tickId - 1],\n                        nextTick = ticks[tickId + 1];\n                    var labelPos = void 0,\n                        prevLabelPos = void 0,\n                        nextLabelPos = void 0;\n                    // Check whether the tick is not the first one and previous tick\n                    // exists, then calculate position of previous label.\n                    if (tickId !== 0 &&\n                        prevTick &&\n                        prevTick.label &&\n                        prevTick.label.xy) {\n                        prevLabelPos = perspective3D({\n                            x: prevTick.label.xy.x,\n                            y: prevTick.label.xy.y,\n                            z: null\n                        }, origin_1, origin_1.vd);\n                    }\n                    // If next label position is defined, then recalculate its position\n                    // basing on the perspective.\n                    if (nextTick && nextTick.label && nextTick.label.xy) {\n                        nextLabelPos = perspective3D({\n                            x: nextTick.label.xy.x,\n                            y: nextTick.label.xy.y,\n                            z: null\n                        }, origin_1, origin_1.vd);\n                    }\n                    labelPos = {\n                        x: tick.label.xy.x,\n                        y: tick.label.xy.y,\n                        z: null\n                    };\n                    labelPos = perspective3D(labelPos, origin_1, origin_1.vd);\n                    // If tick is first one, check whether next label position is\n                    // already calculated, then return difference between the first and\n                    // the second label. If there is no next label position calculated,\n                    // return the difference between the first grid line and left 3d\n                    // frame.\n                    return Math.abs(prevLabelPos ?\n                        labelPos.x - prevLabelPos.x : nextLabelPos ?\n                        nextLabelPos.x - labelPos.x :\n                        firstGridLine.x - frame3DLeft.x);\n                }\n                return proceed.apply(axis, [].slice.call(arguments, 1));\n            };\n            /**\n             * @private\n             */\n            Axis3D.wrapGetTitlePosition = function (proceed) {\n                var pos = proceed.apply(this,\n                    [].slice.call(arguments, 1));\n                return this.axis3D ?\n                    this.axis3D.fix3dPosition(pos, true) :\n                    pos;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * @optionparent xAxis\n             */\n            Axis3D.defaultOptions = {\n                labels: {\n                    /**\n                     * Defines how the labels are be repositioned according to the 3D\n                     * chart orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since      5.0.15\n                     * @validvalue ['offset', 'chart', 'flap', 'ortho']\n                     * @product    highcharts\n                     * @requires   highcharts-3d\n                     */\n                    position3d: 'offset',\n                    /**\n                     * If enabled, the axis labels will skewed to follow the\n                     * perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `labels.position3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: false\n                },\n                title: {\n                    /**\n                     * Defines how the title is repositioned according to the 3D chart\n                     * orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * - `undefined`: Will use the config from `labels.position3d`\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {\"offset\"|\"chart\"|\"flap\"|\"ortho\"|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    position3d: null,\n                    /**\n                     * If enabled, the axis title will skewed to follow the perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `title.position3d`.\n                     *\n                     * A `null` value will use the config from `labels.skew3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {boolean|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: null\n                }\n            };\n            return Axis3D;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3D;\n    });\n    _registerModule(_modules, 'Core/Series/Series3D.js', [_modules['Extensions/Math3D.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Math3D, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension to the Series object in 3D charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick,\n            isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Series3D = /** @class */ (function (_super) {\n                __extends(Series3D, _super);\n            function Series3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            Series3D.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    this.translate3dPoints();\n                }\n            };\n            /**\n             * Translate the plotX, plotY properties and add plotZ.\n             * @private\n             */\n            Series3D.prototype.translate3dPoints = function () {\n                var series = this,\n                    seriesOptions = series.options,\n                    chart = series.chart,\n                    zAxis = pick(series.zAxis,\n                    chart.options.zAxis[0]),\n                    rawPoints = [],\n                    rawPoint,\n                    projectedPoints,\n                    projectedPoint,\n                    zValue,\n                    i,\n                    rawPointsX = [],\n                    stack = seriesOptions.stacking ?\n                        (isNumber(seriesOptions.stack) ? seriesOptions.stack : 0) :\n                        series.index || 0;\n                series.zPadding = stack *\n                    (seriesOptions.depth || 0 + (seriesOptions.groupZPadding || 1));\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    if (zAxis && zAxis.translate) {\n                        zValue = zAxis.logarithmic && zAxis.val2lin ?\n                            zAxis.val2lin(rawPoint.z) :\n                            rawPoint.z; // #4562\n                        rawPoint.plotZ = zAxis.translate(zValue);\n                        rawPoint.isInside = rawPoint.isInside ?\n                            (zValue >= zAxis.min &&\n                                zValue <= zAxis.max) :\n                            false;\n                    }\n                    else {\n                        rawPoint.plotZ = series.zPadding;\n                    }\n                    rawPoint.axisXpos = rawPoint.plotX;\n                    rawPoint.axisYpos = rawPoint.plotY;\n                    rawPoint.axisZpos = rawPoint.plotZ;\n                    rawPoints.push({\n                        x: rawPoint.plotX,\n                        y: rawPoint.plotY,\n                        z: rawPoint.plotZ\n                    });\n                    rawPointsX.push(rawPoint.plotX || 0);\n                }\n                series.rawPointsX = rawPointsX;\n                projectedPoints = perspective(rawPoints, chart, true);\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    projectedPoint = projectedPoints[i];\n                    rawPoint.plotX = projectedPoint.x;\n                    rawPoint.plotY = projectedPoint.y;\n                    rawPoint.plotZ = projectedPoint.z;\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Series3D.defaultOptions = merge(Series.defaultOptions);\n            return Series3D;\n        }(Series));\n        /* *\n         *\n         *  Compatibility\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        addEvent(Series, 'afterTranslate', function () {\n            if (this.chart.is3d()) {\n                this.translate3dPoints();\n            }\n        });\n        /* eslint-enable no-invalid-this */\n        extend(Series.prototype, {\n            translate3dPoints: Series3D.prototype.translate3dPoints\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Series3D;\n    });\n    _registerModule(_modules, 'Series/Column3D/Column3DComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Extensions/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Extensions/Stacking.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, Math3D, SeriesRegistry, StackItem, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = ColumnSeries.prototype;\n        var svg = H.svg;\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        /**\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart with stacks\n         * @param {string} stacking\n         * Stacking option\n         */\n        function retrieveStacks(chart, stacking) {\n            var series = chart.series,\n                stacks = { totalStacks: 0 };\n            var stackNumber,\n                i = 1;\n            series.forEach(function (s) {\n                stackNumber = pick(s.options.stack, (stacking ? 0 : series.length - 1 - s.index)); // #3841, #4532\n                if (!stacks[stackNumber]) {\n                    stacks[stackNumber] = { series: [s], position: i };\n                    i++;\n                }\n                else {\n                    stacks[stackNumber].series.push(s);\n                }\n            });\n            stacks.totalStacks = i + 1;\n            return stacks;\n        }\n        wrap(columnProto, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (this.chart.is3d()) {\n                this.translate3dShapes();\n            }\n        });\n        // Don't use justifyDataLabel when point is outsidePlot\n        wrap(Series.prototype, 'justifyDataLabel', function (proceed) {\n            return !(arguments[2].outside3dPlot) ?\n                proceed.apply(this, [].slice.call(arguments, 1)) :\n                false;\n        });\n        columnProto.translate3dPoints = function () { };\n        columnProto.translate3dShapes = function () {\n            var series = this,\n                chart = series.chart,\n                seriesOptions = series.options,\n                depth = seriesOptions.depth,\n                stack = seriesOptions.stacking ?\n                    (seriesOptions.stack || 0) :\n                    series.index, // #4743\n                z = stack * (depth + (seriesOptions.groupZPadding || 1)),\n                borderCrisp = series.borderWidth % 2 ? 0.5 : 0,\n                point2dPos; // Position of point in 2D, used for 3D position calculation\n                if (chart.inverted && !series.yAxis.reversed) {\n                    borderCrisp *= -1;\n            }\n            if (seriesOptions.grouping !== false) {\n                z = 0;\n            }\n            z += (seriesOptions.groupZPadding || 1);\n            series.data.forEach(function (point) {\n                // #7103 Reset outside3dPlot flag\n                point.outside3dPlot = null;\n                if (point.y !== null) {\n                    var shapeArgs_1 = point.shapeArgs, tooltipPos = point.tooltipPos, \n                        // Array for final shapeArgs calculation.\n                        // We are checking two dimensions (x and y).\n                        dimensions = [['x', 'width'], ['y', 'height']], borderlessBase_1; // Crisped rects can have +/- 0.5 pixels offset.\n                        // #3131 We need to check if column is inside plotArea.\n                        dimensions.forEach(function (d) {\n                            borderlessBase_1 = shapeArgs_1[d[0]] - borderCrisp;\n                        if (borderlessBase_1 < 0) {\n                            // If borderLessBase is smaller than 0, it is needed to set\n                            // its value to 0 or 0.5 depending on borderWidth\n                            // borderWidth may be even or odd.\n                            shapeArgs_1[d[1]] +=\n                                shapeArgs_1[d[0]] + borderCrisp;\n                            shapeArgs_1[d[0]] = -borderCrisp;\n                            borderlessBase_1 = 0;\n                        }\n                        if ((borderlessBase_1 + shapeArgs_1[d[1]] >\n                            series[d[0] + 'Axis'].len) &&\n                            // Do not change height/width of column if 0 (#6708)\n                            shapeArgs_1[d[1]] !== 0) {\n                            shapeArgs_1[d[1]] =\n                                series[d[0] + 'Axis'].len -\n                                    shapeArgs_1[d[0]];\n                        }\n                        if (\n                        // Do not remove columns with zero height/width.\n                        (shapeArgs_1[d[1]] !== 0) &&\n                            (shapeArgs_1[d[0]] >=\n                                series[d[0] + 'Axis'].len ||\n                                shapeArgs_1[d[0]] + shapeArgs_1[d[1]] <=\n                                    borderCrisp)) {\n                            // Set args to 0 if column is outside the chart.\n                            for (var key in shapeArgs_1) { // eslint-disable-line guard-for-in\n                                // #13840\n                                shapeArgs_1[key] = key === 'y' ? -9999 : 0;\n                            }\n                            // #7103 outside3dPlot flag is set on Points which are\n                            // currently outside of plot.\n                            point.outside3dPlot = true;\n                        }\n                    });\n                    // Change from 2d to 3d\n                    if (point.shapeType === 'rect') {\n                        point.shapeType = 'cuboid';\n                    }\n                    shapeArgs_1.z = z;\n                    shapeArgs_1.depth = depth;\n                    shapeArgs_1.insidePlotArea = true;\n                    // Point's position in 2D\n                    point2dPos = {\n                        x: shapeArgs_1.x + shapeArgs_1.width / 2,\n                        y: shapeArgs_1.y,\n                        z: z + depth / 2 // The center of column in Z dimension\n                    };\n                    // Recalculate point positions for inverted graphs\n                    if (chart.inverted) {\n                        point2dPos.x = shapeArgs_1.height;\n                        point2dPos.y = point.clientX;\n                    }\n                    // Calculate and store point's position in 3D,\n                    // using perspective method.\n                    point.plot3d = perspective([point2dPos], chart, true, false)[0];\n                    // Translate the tooltip position in 3d space\n                    tooltipPos = perspective([{\n                            x: tooltipPos[0],\n                            y: tooltipPos[1],\n                            z: z + depth / 2 // The center of column in Z dimension\n                        }], chart, true, false)[0];\n                    point.tooltipPos = [tooltipPos.x, tooltipPos.y];\n                }\n            });\n            // store for later use #4067\n            series.z = z;\n        };\n        wrap(columnProto, 'animate', function (proceed) {\n            if (!this.chart.is3d()) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            else {\n                var args = arguments,\n                    init = args[1],\n                    yAxis_1 = this.yAxis,\n                    series_1 = this,\n                    reversed_1 = this.yAxis.reversed;\n                if (svg) { // VML is too slow anyway\n                    if (init) {\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.height = point.shapeArgs.height;\n                                point.shapey = point.shapeArgs.y; // #2968\n                                point.shapeArgs.height = 1;\n                                if (!reversed_1) {\n                                    if (point.stackY) {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                yAxis_1.translate(point.stackY);\n                                    }\n                                    else {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                (point.negative ?\n                                                    -point.height :\n                                                    point.height);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    else { // run the animation\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.shapeArgs.height = point.height;\n                                point.shapeArgs.y = point.shapey; // #2968\n                                // null value do not have a graphic\n                                if (point.graphic) {\n                                    point.graphic[point.outside3dPlot ?\n                                        'attr' :\n                                        'animate'](point.shapeArgs, series_1.options.animation);\n                                }\n                            }\n                        });\n                        // redraw datalabels to the correct position\n                        this.drawDataLabels();\n                    }\n                }\n            }\n        });\n        // In case of 3d columns there is no sense to add this columns to a specific\n        // series group - if series is added to a group all columns will have the same\n        // zIndex in comparison with different series.\n        wrap(columnProto, 'plotGroup', function (proceed, prop, _name, _visibility, _zIndex, parent) {\n            if (prop !== 'dataLabelsGroup') {\n                if (this.chart.is3d()) {\n                    if (this[prop]) {\n                        delete this[prop];\n                    }\n                    if (parent) {\n                        if (!this.chart.columnGroup) {\n                            this.chart.columnGroup =\n                                this.chart.renderer.g('columnGroup').add(parent);\n                        }\n                        this[prop] = this.chart.columnGroup;\n                        this.chart.columnGroup.attr(this.getPlotBox());\n                        this[prop].survive = true;\n                        if (prop === 'group' || prop === 'markerGroup') {\n                            arguments[3] = 'visible';\n                            // For 3D column group and markerGroup should be visible\n                        }\n                    }\n                }\n            }\n            return proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        // When series is not added to group it is needed to change setVisible method to\n        // allow correct Legend funcionality. This wrap is basing on pie chart series.\n        wrap(columnProto, 'setVisible', function (proceed, vis) {\n            var series = this;\n            if (series.chart.is3d()) {\n                series.data.forEach(function (point) {\n                    point.visible = point.options.visible = vis =\n                        typeof vis === 'undefined' ?\n                            !pick(series.visible, point.visible) : vis;\n                    series.options.data[series.data.indexOf(point)] =\n                        point.options;\n                    if (point.graphic) {\n                        point.graphic.attr({\n                            visibility: vis ? 'visible' : 'hidden'\n                        });\n                    }\n                });\n            }\n            proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        addEvent(ColumnSeries, 'afterInit', function () {\n            if (this.chart.is3d()) {\n                var series = this,\n                    seriesOptions = this.options,\n                    grouping = seriesOptions.grouping,\n                    stacking = seriesOptions.stacking,\n                    reversedStacks = this.yAxis.options.reversedStacks,\n                    z = 0;\n                // @todo grouping === true ?\n                if (!(typeof grouping !== 'undefined' && !grouping)) {\n                    var stacks = retrieveStacks(this.chart,\n                        stacking),\n                        stack = seriesOptions.stack || 0,\n                        i = // position within the stack\n                         void 0; // position within the stack\n                        for (i = 0; i < stacks[stack].series.length; i++) {\n                            if (stacks[stack].series[i] === this) {\n                                break;\n                        }\n                    }\n                    z = (10 * (stacks.totalStacks - stacks[stack].position)) +\n                        (reversedStacks ? i : -i); // #4369\n                    // In case when axis is reversed, columns are also reversed inside\n                    // the group (#3737)\n                    if (!this.xAxis.reversed) {\n                        z = (stacks.totalStacks * 10) - z;\n                    }\n                }\n                seriesOptions.depth = seriesOptions.depth || 25;\n                series.z = series.z || 0;\n                seriesOptions.zIndex = z;\n            }\n        });\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * @private\n         */\n        function pointAttribs(proceed) {\n            var attr = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (this.chart.is3d && this.chart.is3d()) {\n                // Set the fill color to the fill color to provide a smooth edge\n                attr.stroke = this.options.edgeColor || attr.fill;\n                attr['stroke-width'] = pick(this.options.edgeWidth, 1); // #4055\n            }\n            return attr;\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, all column-series are rendered in one main group. Because of that\n         * we need to apply inactive state on all points.\n         * @private\n         */\n        function setState(proceed, state, inherit) {\n            var is3d = this.chart.is3d && this.chart.is3d();\n            if (is3d) {\n                this.options.inactiveOtherPoints = true;\n            }\n            proceed.call(this, state, inherit);\n            if (is3d) {\n                this.options.inactiveOtherPoints = false;\n            }\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, simple checking for a new shape to animate is not enough.\n         * Additionally check if graphic is a group of elements\n         * @private\n         */\n        function hasNewShapeType(proceed) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return this.series.chart.is3d() ?\n                this.graphic && this.graphic.element.nodeName !== 'g' :\n                proceed.apply(this, args);\n        }\n        wrap(columnProto, 'pointAttribs', pointAttribs);\n        wrap(columnProto, 'setState', setState);\n        wrap(columnProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n        if (SeriesRegistry.seriesTypes.columnRange) {\n            var columnRangeProto = SeriesRegistry.seriesTypes.columnrange.prototype;\n            wrap(columnRangeProto, 'pointAttribs', pointAttribs);\n            wrap(columnRangeProto, 'setState', setState);\n            wrap(columnRangeProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n            columnRangeProto.plotGroup = columnProto.plotGroup;\n            columnRangeProto.setVisible = columnProto.setVisible;\n        }\n        wrap(Series.prototype, 'alignDataLabel', function (proceed, point, dataLabel, options, alignTo) {\n            var chart = this.chart;\n            // In 3D we need to pass point.outsidePlot option to the justifyDataLabel\n            // method for disabling justifying dataLabels in columns outside plot\n            options.outside3dPlot = point.outside3dPlot;\n            // Only do this for 3D columns and it's derived series\n            if (chart.is3d() &&\n                this.is('column')) {\n                var series = this,\n                    seriesOptions = series.options,\n                    inside = pick(options.inside, !!series.options.stacking),\n                    options3d = chart.options.chart.options3d,\n                    xOffset = point.pointWidth / 2 || 0;\n                var dLPosition = {\n                        x: alignTo.x + xOffset,\n                        y: alignTo.y,\n                        z: series.z + seriesOptions.depth / 2\n                    };\n                if (chart.inverted) {\n                    // Inside dataLabels are positioned according to above\n                    // logic and there is no need to position them using\n                    // non-3D algorighm (that use alignTo.width)\n                    if (inside) {\n                        alignTo.width = 0;\n                        dLPosition.x += point.shapeArgs.height / 2;\n                    }\n                    // When chart is upside down\n                    // (alpha angle between 180 and 360 degrees)\n                    // it is needed to add column width to calculated value.\n                    if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                        dLPosition.y += point.shapeArgs.width;\n                    }\n                }\n                // dLPosition is recalculated for 3D graphs\n                dLPosition = perspective([dLPosition], chart, true, false)[0];\n                alignTo.x = dLPosition.x - xOffset;\n                // #7103 If point is outside of plotArea, hide data label.\n                alignTo.y = point.outside3dPlot ? -9e9 : dLPosition.y;\n            }\n            proceed.apply(this, [].slice.call(arguments, 1));\n        });\n        // Added stackLabels position calculation for 3D charts.\n        wrap(StackItem.prototype, 'getStackBox', function (proceed, chart, stackItem, x, y, xWidth, h, axis) {\n            var stackBox = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            // Only do this for 3D graph\n            if (chart.is3d() && stackItem.base) {\n                // First element of stackItem.base is an index of base series.\n                var baseSeriesInd = +(stackItem.base).split(',')[0];\n                var columnSeries = chart.series[baseSeriesInd];\n                var options3d = chart.options.chart.options3d;\n                // Only do this if base series is a column or inherited type,\n                // use its barW, z and depth parameters\n                // for correct stackLabels position calculation\n                if (columnSeries &&\n                    columnSeries instanceof SeriesRegistry.seriesTypes.column) {\n                    var dLPosition = {\n                            x: stackBox.x + (chart.inverted ? h : xWidth / 2),\n                            y: stackBox.y,\n                            z: columnSeries.options.depth / 2\n                        };\n                    if (chart.inverted) {\n                        // Do not use default offset calculation logic\n                        // for 3D inverted stackLabels.\n                        stackBox.width = 0;\n                        // When chart is upside down\n                        // (alpha angle between 180 and 360 degrees)\n                        // it is needed to add column width to calculated value.\n                        if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                            dLPosition.y += xWidth;\n                        }\n                    }\n                    dLPosition = perspective([dLPosition], chart, true, false)[0];\n                    stackBox.x = dLPosition.x - xWidth / 2;\n                    stackBox.y = dLPosition.y;\n                }\n            }\n            return stackBox;\n        });\n        /*\n            @merge v6.2\n            @todo\n            EXTENSION FOR 3D CYLINDRICAL COLUMNS\n            Not supported\n        */\n        /*\n        let defaultOptions = H.getOptions();\n        defaultOptions.plotOptions.cylinder =\n            merge(defaultOptions.plotOptions.column);\n        let CylinderSeries = extendClass(seriesTypes.column, {\n            type: 'cylinder'\n        });\n        seriesTypes.cylinder = CylinderSeries;\n\n        wrap(seriesTypes.cylinder.prototype, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d()) {\n                return;\n            }\n\n            let series = this,\n                chart = series.chart,\n                options = chart.options,\n                cylOptions = options.plotOptions.cylinder,\n                options3d = options.chart.options3d,\n                depth = cylOptions.depth || 0,\n                alpha = chart.alpha3d;\n\n            let z = cylOptions.stacking ?\n                (this.options.stack || 0) * depth :\n                series._i * depth;\n            z += depth / 2;\n\n            if (cylOptions.grouping !== false) { z = 0; }\n\n            each(series.data, function (point) {\n                let shapeArgs = point.shapeArgs,\n                    deg2rad = H.deg2rad;\n                point.shapeType = 'arc3d';\n                shapeArgs.x += depth / 2;\n                shapeArgs.z = z;\n                shapeArgs.start = 0;\n                shapeArgs.end = 2 * PI;\n                shapeArgs.r = depth * 0.95;\n                shapeArgs.innerR = 0;\n                shapeArgs.depth =\n                    shapeArgs.height * (1 / sin((90 - alpha) * deg2rad)) - z;\n                shapeArgs.alpha = 90 - alpha;\n                shapeArgs.beta = 0;\n            });\n        });\n        */\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Depth of the columns in a 3D column chart.\n         *\n         * @type      {number}\n         * @default   25\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.depth\n         */\n        /**\n         * 3D columns only. The color of the edges. Similar to `borderColor`, except it\n         * defaults to the same color as the column.\n         *\n         * @type      {Highcharts.ColorString}\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeColor\n         */\n        /**\n         * 3D columns only. The width of the colored edges.\n         *\n         * @type      {number}\n         * @default   1\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeWidth\n         */\n        /**\n         * The spacing between columns on the Z Axis in a 3D chart.\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.groupZPadding\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return ColumnSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var PiePoint = SeriesRegistry.seriesTypes.pie.prototype.pointClass;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var superHaloPath = PiePoint.prototype.haloPath;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DPoint = /** @class */ (function (_super) {\n                __extends(Pie3DPoint, _super);\n            function Pie3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.series = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DPoint.prototype.haloPath = function () {\n                return this.series.chart.is3d() ?\n                    [] : superHaloPath.apply(this, arguments);\n            };\n            return Pie3DPoint;\n        }(PiePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Pie3DPoint;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DSeries.js', [_modules['Core/Globals.js'], _modules['Series/Pie3D/Pie3DPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, Pie3DPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var deg2rad = H.deg2rad,\n            svg = H.svg;\n        var PieSeries = SeriesRegistry.seriesTypes.pie;\n        var extend = U.extend,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DSeries = /** @class */ (function (_super) {\n                __extends(Pie3DSeries, _super);\n            function Pie3DSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.addPoint = function () {\n                _super.prototype.addPoint.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    // destroy (and rebuild) everything!!!\n                    this.update(this.userOptions, true); // #3845 pass the old options\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.animate = function (init) {\n                if (!this.chart.is3d()) {\n                    _super.prototype.animate.apply(this, arguments);\n                }\n                else {\n                    var animation = this.options.animation,\n                        attribs = void 0,\n                        center = this.center,\n                        group = this.group,\n                        markerGroup = this.markerGroup;\n                    if (svg) { // VML is too slow anyway\n                        if (animation === true) {\n                            animation = {};\n                        }\n                        // Initialize the animation\n                        if (init) {\n                            // Scale down the group and place it in the center\n                            group.oldtranslateX = pick(group.oldtranslateX, group.translateX);\n                            group.oldtranslateY = pick(group.oldtranslateY, group.translateY);\n                            attribs = {\n                                translateX: center[0],\n                                translateY: center[1],\n                                scaleX: 0.001,\n                                scaleY: 0.001\n                            };\n                            group.attr(attribs);\n                            if (markerGroup) {\n                                markerGroup.attrSetters = group.attrSetters;\n                                markerGroup.attr(attribs);\n                            }\n                            // Run the animation\n                        }\n                        else {\n                            attribs = {\n                                translateX: group.oldtranslateX,\n                                translateY: group.oldtranslateY,\n                                scaleX: 1,\n                                scaleY: 1\n                            };\n                            group.animate(attribs, animation);\n                            if (markerGroup) {\n                                markerGroup.animate(attribs, animation);\n                            }\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawDataLabels = function () {\n                if (this.chart.is3d()) {\n                    var series = this,\n                        chart = series.chart,\n                        options3d_1 = chart.options.chart.options3d;\n                    series.data.forEach(function (point) {\n                        var shapeArgs = point.shapeArgs,\n                            r = shapeArgs.r, \n                            // #3240 issue with datalabels for 0 and null values\n                            a1 = ((shapeArgs.alpha || options3d_1.alpha) * deg2rad),\n                            b1 = ((shapeArgs.beta || options3d_1.beta) * deg2rad),\n                            a2 = ((shapeArgs.start + shapeArgs.end) / 2),\n                            labelPosition = point.labelPosition,\n                            connectorPosition = (labelPosition.connectorPosition),\n                            yOffset = (-r * (1 - Math.cos(a1)) * Math.sin(a2)),\n                            xOffset = r * (Math.cos(b1) - 1) * Math.cos(a2);\n                        // Apply perspective on label positions\n                        [\n                            labelPosition.natural,\n                            connectorPosition.breakAt,\n                            connectorPosition.touchingSliceAt\n                        ].forEach(function (coordinates) {\n                            coordinates.x += xOffset;\n                            coordinates.y += yOffset;\n                        });\n                    });\n                }\n                _super.prototype.drawDataLabels.apply(this, arguments);\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.pointAttribs = function (point) {\n                var attr = _super.prototype.pointAttribs.apply(this,\n                    arguments),\n                    options = this.options;\n                if (this.chart.is3d() && !this.chart.styledMode) {\n                    attr.stroke = options.edgeColor || point.color || this.color;\n                    attr['stroke-width'] = pick(options.edgeWidth, 1);\n                }\n                return attr;\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                var series = this,\n                    seriesOptions = series.options,\n                    depth = seriesOptions.depth || 0,\n                    options3d = series.chart.options.chart.options3d,\n                    alpha = options3d.alpha,\n                    beta = options3d.beta,\n                    z = seriesOptions.stacking ?\n                        (seriesOptions.stack || 0) * depth :\n                        series._i * depth;\n                z += depth / 2;\n                if (seriesOptions.grouping !== false) {\n                    z = 0;\n                }\n                series.data.forEach(function (point) {\n                    var shapeArgs = point.shapeArgs,\n                        angle;\n                    point.shapeType = 'arc3d';\n                    shapeArgs.z = z;\n                    shapeArgs.depth = depth * 0.75;\n                    shapeArgs.alpha = alpha;\n                    shapeArgs.beta = beta;\n                    shapeArgs.center = series.center;\n                    angle = (shapeArgs.end + shapeArgs.start) / 2;\n                    point.slicedTranslation = {\n                        translateX: Math.round(Math.cos(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad)),\n                        translateY: Math.round(Math.sin(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad))\n                    };\n                });\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawTracker = function () {\n                _super.prototype.drawTracker.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                this.points.forEach(function (point) {\n                    if (point.graphic) {\n                        ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            if (point.graphic) {\n                                point.graphic[face].element.point = point;\n                            }\n                        });\n                    }\n                });\n            };\n            return Pie3DSeries;\n        }(PieSeries));\n        extend(Pie3DSeries.prototype, {\n            pointClass: Pie3DPoint\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The thickness of a 3D pie.\n         *\n         * @type      {number}\n         * @default   0\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.pie.depth\n         */\n        ''; // keeps doclets above after transpilation\n\n        return Pie3DSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DComposition.js', [_modules['Series/Pie3D/Pie3DPoint.js'], _modules['Series/Pie3D/Pie3DSeries.js'], _modules['Core/Series/SeriesRegistry.js']], function (Pie3DPoint, Pie3DSeries, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        SeriesRegistry.seriesTypes.pie.prototype.pointClass.prototype\n            .haloPath = Pie3DPoint.prototype.haloPath;\n        SeriesRegistry.seriesTypes.pie = Pie3DSeries;\n\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DPoint.js', [_modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Utilities.js']], function (ScatterSeries, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defined = U.defined;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Scatter3DPoint = /** @class */ (function (_super) {\n                __extends(Scatter3DPoint, _super);\n            function Scatter3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (!defined(this.z)) {\n                    this.z = 0;\n                }\n                return this;\n            };\n            return Scatter3DPoint;\n        }(ScatterSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DPoint;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DSeries.js', [_modules['Extensions/Math3D.js'], _modules['Series/Scatter3D/Scatter3DPoint.js'], _modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, Scatter3DPoint, ScatterSeries, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var pointCameraDistance = Math3D.pointCameraDistance;\n        var extend = U.extend,\n            merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.scatter3d\n         *\n         * @augments Highcharts.Series\n         */\n        var Scatter3DSeries = /** @class */ (function (_super) {\n                __extends(Scatter3DSeries, _super);\n            function Scatter3DSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DSeries.prototype.pointAttribs = function (point) {\n                var attribs = _super.prototype.pointAttribs.apply(this,\n                    arguments);\n                if (this.chart.is3d() && point) {\n                    attribs.zIndex =\n                        pointCameraDistance(point, this.chart);\n                }\n                return attribs;\n            };\n            /**\n             * A 3D scatter plot uses x, y and z coordinates to display values for three\n             * variables for a set of data.\n             *\n             * @sample {highcharts} highcharts/3d/scatter/\n             *         Simple 3D scatter\n             * @sample {highcharts} highcharts/demo/3d-scatter-draggable\n             *         Draggable 3d scatter\n             *\n             * @extends      plotOptions.scatter\n             * @excluding    dragDrop, cluster, boostThreshold, boostBlending\n             * @product      highcharts\n             * @requires     highcharts-3d\n             * @optionparent plotOptions.scatter3d\n             */\n            Scatter3DSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n                tooltip: {\n                    pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>'\n                }\n            });\n            return Scatter3DSeries;\n        }(ScatterSeries));\n        extend(Scatter3DSeries.prototype, {\n            axisTypes: ['xAxis', 'yAxis', 'zAxis'],\n            // Require direct touch rather than using the k-d-tree, because the\n            // k-d-tree currently doesn't take the xyz coordinate system into\n            // account (#4552)\n            directTouch: true,\n            parallelArrays: ['x', 'y', 'z'],\n            pointArrayMap: ['x', 'y', 'z'],\n            pointClass: Scatter3DPoint\n        });\n        SeriesRegistry.registerSeriesType('scatter3d', Scatter3DSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `scatter3d` series. If the [type](#series.scatter3d.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * scatter3d](#plotOptions.scatter3d).\n         *\n         * @extends   series,plotOptions.scatter3d\n         * @excluding boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption series.scatter3d\n         */\n        /**\n         * An array of data points for the series. For the `scatter3d` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 values. In this case, the values correspond\n         * to `x,y,z`. If the first value is a string, it is applied as the name\n         * of the point, and the `x` value is inferred.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 0, 1],\n         *         [1, 8, 7],\n         *         [2, 9, 2]\n         *     ]\n         *  ```\n         *\n         * 3.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series'\n         * [turboThreshold](#series.scatter3d.turboThreshold), this option is not\n         * available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 2,\n         *         z: 24,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 4,\n         *         z: 12,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.scatter.data\n         * @product   highcharts\n         * @apioption series.scatter3d.data\n         */\n        /**\n         * The z value for each data point.\n         *\n         * @type      {number}\n         * @product   highcharts\n         * @apioption series.scatter3d.data.z\n         */\n        ''; // adds doclets above to transpiled file\n\n        return Scatter3DSeries;\n    });\n    _registerModule(_modules, 'Series/Area3DSeries.js', [_modules['Extensions/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var perspective = Math3D.perspective;\n        var _a = SeriesRegistry.seriesTypes,\n            AreaSeriesClass = _a.area,\n            LineSeriesClass = _a.line;\n        var pick = U.pick,\n            wrap = U.wrap;\n        /* eslint-disable no-invalid-this */\n        wrap(AreaSeriesClass.prototype, 'getGraphPath', function (proceed) {\n            var series = this,\n                svgPath = proceed.apply(series,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (!series.chart.is3d()) {\n                return svgPath;\n            }\n            var getGraphPath = LineSeriesClass.prototype.getGraphPath,\n                graphPath = [],\n                options = series.options,\n                stacking = options.stacking,\n                bottomPath,\n                bottomPoints = [],\n                graphPoints = [],\n                i,\n                areaPath,\n                connectNulls = pick(// #10574\n                options.connectNulls,\n                stacking === 'percent'),\n                translatedThreshold = Math.round(// #10909\n                series.yAxis.getThreshold(options.threshold)),\n                options3d;\n            if (series.rawPointsX) {\n                for (var i_1 = 0; i_1 < series.points.length; i_1++) {\n                    bottomPoints.push({\n                        x: series.rawPointsX[i_1],\n                        y: options.stacking ?\n                            series.points[i_1].yBottom : translatedThreshold,\n                        z: series.zPadding\n                    });\n                }\n            }\n            options3d = series.chart.options.chart.options3d;\n            bottomPoints = perspective(bottomPoints, series.chart, true).map(function (point) {\n                return { plotX: point.x, plotY: point.y, plotZ: point.z };\n            });\n            if (series.group && options3d && options3d.depth && options3d.beta) {\n                // Markers should take the global zIndex of series group.\n                if (series.markerGroup) {\n                    series.markerGroup.add(series.group);\n                    series.markerGroup.attr({\n                        translateX: 0,\n                        translateY: 0\n                    });\n                }\n                series.group.attr({\n                    zIndex: Math.max(1, (options3d.beta > 270 || options3d.beta < 90) ?\n                        options3d.depth - Math.round(series.zPadding || 0) :\n                        Math.round(series.zPadding || 0))\n                });\n            }\n            bottomPoints.reversed = true;\n            bottomPath = getGraphPath.call(series, bottomPoints, true, true);\n            if (bottomPath[0] && bottomPath[0][0] === 'M') {\n                bottomPath[0] = ['L', bottomPath[0][1], bottomPath[0][2]];\n            }\n            if (series.areaPath) {\n                // Remove previously used bottomPath and add the new one.\n                areaPath = series.areaPath.splice(0, series.areaPath.length / 2).concat(bottomPath);\n                // Use old xMap in the new areaPath\n                areaPath.xMap = series.areaPath.xMap;\n                series.areaPath = areaPath;\n                graphPath = getGraphPath.call(series, graphPoints, false, connectNulls);\n            }\n            return svgPath;\n        });\n\n    });\n    _registerModule(_modules, 'masters/highcharts-3d.src.js', [_modules['Core/Globals.js'], _modules['Core/Renderer/SVG/SVGRenderer3D.js'], _modules['Core/Chart/Chart3D.js'], _modules['Core/Axis/ZAxis.js'], _modules['Core/Axis/Axis3D.js']], function (Highcharts, SVGRenderer3D, Chart3D, ZAxis, Axis3D) {\n\n        var G = Highcharts;\n        // Compositions\n        SVGRenderer3D.compose(G.SVGRenderer);\n        Chart3D.compose(G.Chart, G.Fx);\n        ZAxis.ZChartComposition.compose(G.Chart);\n        Axis3D.compose(G.Axis);\n\n    });\n}));"]},"metadata":{},"sourceType":"script"}