{"ast":null,"code":"var _jsxFileName = \"E:\\\\4\\\\4\\\\src\\\\container\\\\chartView.jsx\";\n// import React from \"react\";\n// import Highcharts from 'highcharts'\n// import HighchartsReact from 'highcharts-react-official'\n// export default function ChartView(props){\n//     var options = {\n//         chart: {\n//             zoomType: 'xy',\n//             backgroundColor: 'rgb(23, 32, 42)',\n//         },\n//         title: {\n//             text: 'Flow Analysis',\n//             align:'left',\n//             style:{'color': 'white'}\n//         },\n//         xAxis: [{ // x轴\n//             categories: ['01/12/2018', '', '', '01/15/2018', '', '','01/18/2018', '', \n//                         '', '01/21/2018', '', '','01/24/2018','','','01/27/2018',\n//                         '','','01/30/2018'],\n//             crosshair: true,\n//             opposite:true,\n//             gridLineWidth:0.2,  // \n//             tickInterval: 3,   // 显示间距\n//             labels: {\n//             style: {\n//                 color: 'rgba(255,255,255,0.7)'\n//             }\n//         },\n//         }],\n//         yAxis: [{ // y轴(上)\n//             max:8000,\n//             min:-8000,\n//             tickInterval:1000,\n//             gridLineWidth:0.2,  // \n//             labels: {\n//                 // format: '{value}°C',\n//                 step:1,\n//                 style: {\n//                     color: 'rgba(255,255,255,0.7)'\n//                 }\n//             },\n//             title: {\n//                 enabled:false,\n//             }\n//         }, { // y轴(下)\n//             max:8000,\n//             min:-8000,\n//             tickInterval:1000,\n//             labels: {\n//                 // format: '{value}°C',\n//                 step:1,\n//                 style: {\n//                     color: Highcharts.getOptions().colors[1]\n//                 }\n//             },\n//             title: {\n//                 enabled:false,\n//             },\n//             visible:false\n//         }],\n//         tooltip: {\n//             shared: true        //柱状图和折线图共享一个悬浮框显示数据\n//         },\n//         plotOptions:{           //图的样式\n//             series:{\n//                 marker:{        //点\n//                     fillColor:'white',\n//                     symbol:'square',\n//                     radius:3\n//                 },\n//                 stacking: 'normal'  // 让正负柱状图没有间距\n//             },\n//             column:{\n//                 // pointInterval: -1\n//                 pointPadding:-0.2    // 柱间距\n//             }\n//         },\n//         legend: {               // 图例\n//             layout: 'horizontal',  //两个图例并列\n//             align: 'center',       //横向基位置\n//             verticalAlign: 'bottom', //纵向基位置\n//             x: 0,                 // x位置\n//             y: 0,               // y位置\n//             itemDistance: 100,\n//             floating: true,\n//             itemStyle:{'color':'rgba(255,255,255,0.7)', 'fontSize':'10px'},\n//             backgroundColor: 'rgba(23, 32, 42, 0.1)',\n//         },\n//         series: [{               //图的数据\n//             name: 'Buy',\n//             type: 'column',\n//             yAxis: 1,\n//             borderColor:'black',\n//             color: 'rgba(0, 176, 185, 1)',\n//             data: [2000, 1000, 500, 5000, 6000, 2000, 1000, 500, 5000, 6000, 2000, 1000, 500, 5000, 6000, 2000, 1000, 500, 5000, 6000],\n//             tooltip: {\n//                 valueSuffix: ' mm'\t//悬浮在柱上显示的数据格式\n//             },\n//         },{\n//             name: 'Sell',\n//             type: 'column',\n//             yAxis: 1,\n//             borderColor:'black',\n//             color: 'rgba(0, 176, 185, 0.5)',\n//             data: [-3000, -2000, -100, -4000, -4000, -3000, -2000, -100, -4000, -4000, -3000, -2000, -100, -4000, -4000, -3000, -2000, -100, -4000, -4000],\n//             tooltip: {\n//                 valueSuffix: ' mm'\t//悬浮在柱上显示的数据格式\n//             },\n//         },{\n//             name: 'Cumulative Net',\n//             type: 'line',\n//             color: 'rgba(173, 107, 11, 0.5)',\n//             data: [-1000, -1000, 400, 1000, -1000, -1000, 400, 1000, -1000, -1000, 400, 1000, -1000, -1000, 400, 1000, -1000, -1000, 400, 1000],\n//             tooltip: {\n//                 valueSuffix: '°'\n//             }\n//         }]\n//     };\n//     // 图表初始化函数\n//     var chart = Highcharts.chart('data-chart', options);\n//     return  <div>\n//                 <HighchartsReact \n//                     highcharts={Highcharts}\n//                     options={options}\n//                 />\n//                 {/* <div id=\"data-chart\"></div> */}\n//             </div>\n// }\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\"; // Import Highcharts\n\nimport Highcharts from \"highcharts/highcharts.src.js\";\nimport LabelComponent from \"./label\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.afterChartCreated = this.afterChartCreated.bind(this);\n    this.state = {\n      chartOptions: {\n        series: [{\n          data: [1, 2, 3]\n        }],\n        xAxis: {\n          labels: {\n            useHTML: true,\n            formatter: function () {\n              return \"\";\n            }\n          }\n        }\n      }\n    };\n  }\n\n  afterChartCreated(chart) {\n    this.internalChart = chart;\n    this.forceUpdate();\n  }\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow();\n  }\n\n  render() {\n    const chart = this.internalChart,\n          customLabels = [];\n\n    if (chart && chart.xAxis[0]) {\n      Highcharts.objectEach(chart.xAxis[0].ticks, function (tick) {\n        customLabels.push( /*#__PURE__*/_jsxDEV(LabelComponent, {\n          tick: tick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 27\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: this.state.chartOptions,\n        callback: this.afterChartCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), customLabels]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 194,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));","map":{"version":3,"names":["React","render","HighchartsReact","Highcharts","LabelComponent","App","PureComponent","constructor","props","afterChartCreated","bind","state","chartOptions","series","data","xAxis","labels","useHTML","formatter","chart","internalChart","forceUpdate","componentDidUpdate","reflow","customLabels","objectEach","ticks","tick","push","document","getElementById"],"sources":["E:/4/4/src/container/chartView.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import Highcharts from 'highcharts'\r\n// import HighchartsReact from 'highcharts-react-official'\r\n\r\n// export default function ChartView(props){\r\n//     var options = {\r\n//         chart: {\r\n//             zoomType: 'xy',\r\n//             backgroundColor: 'rgb(23, 32, 42)',\r\n//         },\r\n//         title: {\r\n//             text: 'Flow Analysis',\r\n//             align:'left',\r\n//             style:{'color': 'white'}\r\n//         },\r\n//         xAxis: [{ // x轴\r\n//             categories: ['01/12/2018', '', '', '01/15/2018', '', '','01/18/2018', '', \r\n//                         '', '01/21/2018', '', '','01/24/2018','','','01/27/2018',\r\n//                         '','','01/30/2018'],\r\n//             crosshair: true,\r\n//             opposite:true,\r\n//             gridLineWidth:0.2,  // \r\n//             tickInterval: 3,   // 显示间距\r\n//             labels: {\r\n//             style: {\r\n//                 color: 'rgba(255,255,255,0.7)'\r\n//             }\r\n//         },\r\n//         }],\r\n//         yAxis: [{ // y轴(上)\r\n//             max:8000,\r\n//             min:-8000,\r\n//             tickInterval:1000,\r\n//             gridLineWidth:0.2,  // \r\n//             labels: {\r\n//                 // format: '{value}°C',\r\n//                 step:1,\r\n//                 style: {\r\n//                     color: 'rgba(255,255,255,0.7)'\r\n//                 }\r\n//             },\r\n//             title: {\r\n//                 enabled:false,\r\n//             }\r\n//         }, { // y轴(下)\r\n//             max:8000,\r\n//             min:-8000,\r\n//             tickInterval:1000,\r\n//             labels: {\r\n//                 // format: '{value}°C',\r\n//                 step:1,\r\n//                 style: {\r\n//                     color: Highcharts.getOptions().colors[1]\r\n//                 }\r\n//             },\r\n//             title: {\r\n//                 enabled:false,\r\n//             },\r\n//             visible:false\r\n//         }],\r\n//         tooltip: {\r\n//             shared: true        //柱状图和折线图共享一个悬浮框显示数据\r\n//         },\r\n//         plotOptions:{           //图的样式\r\n//             series:{\r\n//                 marker:{        //点\r\n//                     fillColor:'white',\r\n//                     symbol:'square',\r\n//                     radius:3\r\n//                 },\r\n//                 stacking: 'normal'  // 让正负柱状图没有间距\r\n//             },\r\n//             column:{\r\n//                 // pointInterval: -1\r\n//                 pointPadding:-0.2    // 柱间距\r\n//             }\r\n//         },\r\n//         legend: {               // 图例\r\n//             layout: 'horizontal',  //两个图例并列\r\n//             align: 'center',       //横向基位置\r\n//             verticalAlign: 'bottom', //纵向基位置\r\n//             x: 0,                 // x位置\r\n//             y: 0,               // y位置\r\n//             itemDistance: 100,\r\n//             floating: true,\r\n//             itemStyle:{'color':'rgba(255,255,255,0.7)', 'fontSize':'10px'},\r\n//             backgroundColor: 'rgba(23, 32, 42, 0.1)',\r\n//         },\r\n//         series: [{               //图的数据\r\n//             name: 'Buy',\r\n//             type: 'column',\r\n//             yAxis: 1,\r\n//             borderColor:'black',\r\n//             color: 'rgba(0, 176, 185, 1)',\r\n//             data: [2000, 1000, 500, 5000, 6000, 2000, 1000, 500, 5000, 6000, 2000, 1000, 500, 5000, 6000, 2000, 1000, 500, 5000, 6000],\r\n//             tooltip: {\r\n//                 valueSuffix: ' mm'\t//悬浮在柱上显示的数据格式\r\n//             },\r\n//         },{\r\n//             name: 'Sell',\r\n//             type: 'column',\r\n//             yAxis: 1,\r\n//             borderColor:'black',\r\n//             color: 'rgba(0, 176, 185, 0.5)',\r\n//             data: [-3000, -2000, -100, -4000, -4000, -3000, -2000, -100, -4000, -4000, -3000, -2000, -100, -4000, -4000, -3000, -2000, -100, -4000, -4000],\r\n//             tooltip: {\r\n//                 valueSuffix: ' mm'\t//悬浮在柱上显示的数据格式\r\n//             },\r\n//         },{\r\n//             name: 'Cumulative Net',\r\n//             type: 'line',\r\n//             color: 'rgba(173, 107, 11, 0.5)',\r\n//             data: [-1000, -1000, 400, 1000, -1000, -1000, 400, 1000, -1000, -1000, 400, 1000, -1000, -1000, 400, 1000, -1000, -1000, 400, 1000],\r\n//             tooltip: {\r\n//                 valueSuffix: '°'\r\n//             }\r\n//         }]\r\n//     };\r\n//     // 图表初始化函数\r\n//     var chart = Highcharts.chart('data-chart', options);\r\n//     return  <div>\r\n//                 <HighchartsReact \r\n//                     highcharts={Highcharts}\r\n//                     options={options}\r\n//                 />\r\n//                 {/* <div id=\"data-chart\"></div> */}\r\n//             </div>\r\n// }\r\n\r\n\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n// Import Highcharts\r\nimport Highcharts from \"highcharts/highcharts.src.js\";\r\nimport LabelComponent from \"./label\";\r\n\r\nclass App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.afterChartCreated = this.afterChartCreated.bind(this);\r\n    this.state = {\r\n      chartOptions: {\r\n        series: [\r\n          {\r\n            data: [1, 2, 3]\r\n          }\r\n        ],\r\n        xAxis: {\r\n          labels: {\r\n            useHTML: true,\r\n            formatter: function() {\r\n              return \"\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  afterChartCreated(chart) {\r\n    this.internalChart = chart;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //this.internalChart.getMargins(); // redraw\r\n    this.internalChart.reflow();\r\n  }\r\n\r\n  render() {\r\n    const chart = this.internalChart,\r\n      customLabels = [];\r\n\r\n    if (chart && chart.xAxis[0]) {\r\n      Highcharts.objectEach(chart.xAxis[0].ticks, function(tick) {\r\n        customLabels.push(<LabelComponent tick={tick} />);\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={this.state.chartOptions}\r\n          callback={this.afterChartCreated}\r\n        />\r\n        {customLabels}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,SAA3B;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,aAAxB,CAAsC;EACpCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;IACA,KAAKC,KAAL,GAAa;MACXC,YAAY,EAAE;QACZC,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;QADR,CADM,CADI;QAMZC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNC,OAAO,EAAE,IADH;YAENC,SAAS,EAAE,YAAW;cACpB,OAAO,EAAP;YACD;UAJK;QADH;MANK;IADH,CAAb;EAiBD;;EAEDT,iBAAiB,CAACU,KAAD,EAAQ;IACvB,KAAKC,aAAL,GAAqBD,KAArB;IACA,KAAKE,WAAL;EACD;;EAEDC,kBAAkB,GAAG;IACnB;IACA,KAAKF,aAAL,CAAmBG,MAAnB;EACD;;EAEDtB,MAAM,GAAG;IACP,MAAMkB,KAAK,GAAG,KAAKC,aAAnB;IAAA,MACEI,YAAY,GAAG,EADjB;;IAGA,IAAIL,KAAK,IAAIA,KAAK,CAACJ,KAAN,CAAY,CAAZ,CAAb,EAA6B;MAC3BZ,UAAU,CAACsB,UAAX,CAAsBN,KAAK,CAACJ,KAAN,CAAY,CAAZ,EAAeW,KAArC,EAA4C,UAASC,IAAT,EAAe;QACzDH,YAAY,CAACI,IAAb,eAAkB,QAAC,cAAD;UAAgB,IAAI,EAAED;QAAtB;UAAA;UAAA;UAAA;QAAA,QAAlB;MACD,CAFD;IAGD;;IAED,oBACE;MAAA,wBACE,QAAC,eAAD;QACE,UAAU,EAAExB,UADd;QAEE,OAAO,EAAE,KAAKQ,KAAL,CAAWC,YAFtB;QAGE,QAAQ,EAAE,KAAKH;MAHjB;QAAA;QAAA;QAAA;MAAA,QADF,EAMGe,YANH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AArDmC;;AAwDtCvB,MAAM,eAAC,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAD,EAAU4B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN"},"metadata":{},"sourceType":"module"}