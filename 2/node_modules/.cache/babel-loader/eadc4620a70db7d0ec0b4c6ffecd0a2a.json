{"ast":null,"code":"var _jsxFileName = \"E:\\\\1\\\\2\\\\src\\\\component\\\\tradeType.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TradeType() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"trade-type\",\n    onClick: changeTrade,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-value\": \"traditional\",\n      className: \"trade-type-item active\",\n      children: \"Traditional Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-value\": \"nlp\",\n      className: \"trade-type-item\",\n      children: \"NLP Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n}\n_c = TradeType;\n\nfunction changeTrade(evt) {\n  const tradeTypeEl = evt.currentTarget;\n  const activeEl = tradeTypeEl.querySelector('.trade-type-item.active');\n\n  if (activeEl) {\n    // 修改点击前激活的按钮A\n    activeEl.classList.remove('active'); //将A中的active类去除\n\n    const type = activeEl.dataset.value; //获取以“data”开头的属性值（即定义的data-value值）\n\n    document.querySelector(`.trade-${type}`).style.display = 'none'; //设置好data-value，就能将对应的div的display样式设为none(不显示)\n  } // 修改点击的按钮B\n\n\n  const itemEl = evt.target;\n  itemEl.classList.add('active'); // 想B的类族中加入active\n\n  const type = itemEl.dataset.value;\n  document.querySelector(`.trade-${type}`).style.display = 'flex'; //显示点击B后需要显示的div\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TradeType\");","map":{"version":3,"names":["React","TradeType","changeTrade","evt","tradeTypeEl","currentTarget","activeEl","querySelector","classList","remove","type","dataset","value","document","style","display","itemEl","target","add"],"sources":["E:/1/2/src/component/tradeType.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function TradeType(){\r\n    return <div class=\"trade-type\" onClick={changeTrade}>\r\n        <div data-value=\"traditional\" className=\"trade-type-item active\">Traditional Trade</div>\r\n        <div data-value=\"nlp\" className=\"trade-type-item\">NLP Trade</div>\r\n    </div>\r\n}\r\n\r\n\r\nfunction changeTrade(evt){\r\n    const tradeTypeEl = evt.currentTarget\r\n    const activeEl = tradeTypeEl.querySelector('.trade-type-item.active')\r\n    if (activeEl) {     // 修改点击前激活的按钮A\r\n        activeEl.classList.remove('active') //将A中的active类去除\r\n        const type = activeEl.dataset.value //获取以“data”开头的属性值（即定义的data-value值）\r\n        document.querySelector(`.trade-${type}`).style.display= 'none' //设置好data-value，就能将对应的div的display样式设为none(不显示)\r\n    }\r\n    // 修改点击的按钮B\r\n    const itemEl = evt.target      \r\n    itemEl.classList.add('active')  // 想B的类族中加入active\r\n    const type = itemEl.dataset.value\r\n    document.querySelector(`.trade-${type}`).style.display= 'flex' //显示点击B后需要显示的div\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,SAAT,GAAoB;EAC/B,oBAAO;IAAK,KAAK,EAAC,YAAX;IAAwB,OAAO,EAAEC,WAAjC;IAAA,wBACH;MAAK,cAAW,aAAhB;MAA8B,SAAS,EAAC,wBAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAK,cAAW,KAAhB;MAAsB,SAAS,EAAC,iBAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAIH;KALuBD,S;;AAQxB,SAASC,WAAT,CAAqBC,GAArB,EAAyB;EACrB,MAAMC,WAAW,GAAGD,GAAG,CAACE,aAAxB;EACA,MAAMC,QAAQ,GAAGF,WAAW,CAACG,aAAZ,CAA0B,yBAA1B,CAAjB;;EACA,IAAID,QAAJ,EAAc;IAAM;IAChBA,QAAQ,CAACE,SAAT,CAAmBC,MAAnB,CAA0B,QAA1B,EADU,CAC0B;;IACpC,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAA9B,CAFU,CAE0B;;IACpCC,QAAQ,CAACN,aAAT,CAAwB,UAASG,IAAK,EAAtC,EAAyCI,KAAzC,CAA+CC,OAA/C,GAAwD,MAAxD,CAHU,CAGqD;EAClE,CAPoB,CAQrB;;;EACA,MAAMC,MAAM,GAAGb,GAAG,CAACc,MAAnB;EACAD,MAAM,CAACR,SAAP,CAAiBU,GAAjB,CAAqB,QAArB,EAVqB,CAUW;;EAChC,MAAMR,IAAI,GAAGM,MAAM,CAACL,OAAP,CAAeC,KAA5B;EACAC,QAAQ,CAACN,aAAT,CAAwB,UAASG,IAAK,EAAtC,EAAyCI,KAAzC,CAA+CC,OAA/C,GAAwD,MAAxD,CAZqB,CAY0C;AAClE"},"metadata":{},"sourceType":"module"}